{"version":3,"sources":["scenes/message_page/NavBar.js","scenes/icon_page/iconsObj.js","scenes/icon_page/Filter.js","scenes/icon_page/Icon.js","scenes/icon_page/Icons.js","scenes/icon_page/IconPage.js","encode_message/morse_code_dict.js","scenes/home_page/MsgCtrlButtons.js","encode_message/MorseCode.jsx","scenes/home_page/Message.js","scenes/home_page/HomePage.js","scenes/message_page/Colors.js","scenes/message_page/FavoriteButton.js","scenes/message_page/MessagePage.js","scenes/send_page/SendPage.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","click","bind","assertThisInitialized","inherits","createClass","key","value","history","location","pathname","includes","goBack","replace","undefined","react_default","a","createElement","className","data-sidebarClass","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","class","Component","iconsObj","בעלי חיים","סכנות","דת","רפואה","אוכל","אנשים","מקומות","חפצים","Filter","apply","arguments","onChange","filterCategory","id","category","for","Icon","setIcon","iconimage","Icons","categoryFilter","length","keys","map","icon","Icon_Icon","saveNewIcon","checkCategoryFilter","IconPage","state","chosenIcon","event","checked","target","categoryID","setState","toConsumableArray","concat","currentIndex","findIndex","element","updatedCategoryFilter","splice","match","params","currmessST","localStorage","getItem","currmessOB","JSON","parse","setItem","stringify","console","log","_this2","NavBar_NavBar","role","aria-haspopup","aria-labelledby","Filter_Filter","isCategryChecked","Icons_Icons","Link","to","char_to_morse","!","\"","$","&","'","(",")","+",",","-",".","/","0","1","2","3","4","5","6","7","8","9",":",";","=","?","@","_","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","MsgCtrlButtons","itemID","editmessage","isFav","e","deletemessage","changelocation","Message","style","color","header","MsgCtrlButtons_MsgCtrlButtons","description","HomePage","messages","messageST","messagesOB","obj","preventDefault","updatemessages","msg","push","editmsg","currmsg","assign","Itemid","favmessages","regmessages","forEach","message","Message_Message","textAlign","deafultcolors","colorclass","colorvalue","Colors","currcolor","Colors_Color","onclicker","updatecolor","Color","FavoriteButton","favbutt","MessagePage","updateStorage","updateLocalStorage","messageOB","updateInfoEvent","defineProperty","updateInfoValue","addtofavorite","saveMessageData","messagesArr","tempmessage","messageExists","alert","favatfirst","Date","now","window","addEventListener","removeEventListener","placeholder","rgba","Colors_Colors","FavoriteButton_FavoriteButton","disabled","SendPage","App","Switch","Route","exact","path","component","Boolean","hostname","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f4a7f52.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.click = this.click.bind(this);\n  }\n\n  click() {\n    if (this.props.history.location.pathname.includes(\"IconPage\")) {     \n      this.props.history.goBack();\n    } else if (this.props.history.location.pathname.includes(\"NewMessage\") || this.props.history.location.pathname.includes(\"EditMessage\")) {\n      this.props.history.replace(\"/\");\n    } else {\n      this.props.history.goBack();\n    }\n  }\n\n  render() {\n    if (this.props.history === undefined) {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\" data-sidebarClass=\"navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"#\">Telebuzz</a>\n          </nav>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\" data-sidebarClass=\"navbar-dark bg-dark\">\n            <div className=\"navbar-brand\" href=\"#\">Telebuzz</div>\n            <button\n              className=\"navbar-toggler leftNavbarToggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarsExampleDefault\"\n              aria-controls=\"navbarsExampleDefault\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\">\n              <span>\n                <div\n                  onClick={this.click}\n                  className=\"text-light\">\n                  <i class=\"fas fa-arrow-left\" />\n                </div>\n              </span>\n            </button>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n","export const iconsObj = {\n    \"בעלי חיים\": [\"cat\", \"dog\", \"horse\"],\n    \"סכנות\": [\"fire\", \"bolt\", \"ghost\"],\n    \"דת\": [\"cross\", \"menorah\", \"pray\", \"bible\"],\n    \"רפואה\": [\"pills\", \"cannabis\", \"capsules\"],\n    \"אוכל\": [\"lemon\", \"drumstick-bite\", \"cookie\"],\n    \"אנשים\": [\"user-injured\", \"user-tie\", \"blind\"],\n    \"מקומות\": [\"university\", \"church\", \"hospital\", \"home\"],\n    \"חפצים\": [\"toilet-paper\", \"bed\", \"basketball-ball\", \"microscope\"]\n}\n\nexport default iconsObj;","import React, { Component } from 'react';\nimport './IconPage.css';\n\nexport class Filter extends Component {\n    render() {\n        return (\n            <div class=\"dropdown-item\">\n                <input\n                    class=\"checkboxer\"\n                    onChange={this.props.filterCategory}\n                    id={this.props.category}\n                    type=\"checkbox\"\n                />\n                <label for={this.props.category}>\n                    {this.props.category}\n                </label>\n            </div>\n        );\n    }\n}\n\nexport default Filter;","import React, { Component } from 'react';\nimport './IconPage.css';\n\nexport class Icon extends Component {\n    render() {\n        return (\n            <button\n                onClick={this.props.setIcon}\n                id={this.props.category}\n                type=\"button\"\n                class=\"btn btn-default iconButton\" >\n\n                <i class={\"fas fa-\" + this.props.iconimage + \" fa-3x\"}></i>\n            </button>\n        );\n    }\n}\n\nexport default Icon;","import React, { Component } from 'react';\nimport './IconPage.css';\nimport iconsObj from './iconsObj';\nimport { Icon } from './Icon';\n\nexport class Icons extends Component {\n    checkCategoryFilter() {\n        if (this.props.categoryFilter.length === 0) {\n            return (\n                Object.keys(iconsObj).map(\n                    (category) => iconsObj[category].map(\n                        (icon) =>\n                            <Icon\n                                iconimage={icon}\n                                category={category}\n                                setIcon={() => this.props.setIcon(icon)}\n                                saveNewIcon={() => this.props.saveNewIcon()}\n                            />\n                    )\n                )\n            );\n        } else {\n            return (\n                this.props.categoryFilter.map(\n                    (category) => iconsObj[category].map(\n                        (icon) =>\n                            <Icon\n                                iconimage={icon}\n                                category={category}\n                                setIcon={() => this.props.setIcon(category.iconimage)}\n                                saveNewIcon={() => this.props.saveNewIcon()}\n                            />\n                    )\n                )\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.checkCategoryFilter()}\n            </div>\n        );\n    }\n}\n\nexport default Icons;","import React, { Component } from 'react';\nimport './IconPage.css';\nimport { Link } from 'react-router-dom';\nimport { NavBar } from '../message_page/NavBar.js';\nimport iconsObj from './iconsObj';\nimport { Filter } from './Filter';\nimport { Icons } from './Icons';\n\nexport class IconPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryFilter: [],\n      chosenIcon: \"\"\n    }\n\n    this.filterCategory = this.filterCategory.bind(this);\n    this.setIcon = this.setIcon.bind(this);\n    this.saveNewIcon = this.saveNewIcon.bind(this);\n  }\n\n  filterCategory(event) {\n    let checked = event.target.checked;\n    let categoryID = event.target.id;\n\n    if (checked && !this.state.categoryFilter.includes(categoryID)) {\n      this.setState({\n        categoryFilter: [...this.state.categoryFilter, categoryID]\n      })\n    } else {\n      let currentIndex = this.state.categoryFilter.findIndex((element) => {\n        return element === categoryID;\n      });\n\n      if (currentIndex < 0) {\n        return;\n      } else {\n        let updatedCategoryFilter = this.state.categoryFilter;\n        updatedCategoryFilter.splice(currentIndex, 1);\n        this.setState({ categoryFilter: updatedCategoryFilter });\n      }\n    }\n  }\n\n  saveNewIcon() {\n    const key = this.props.match.params.id ? \"EditMessage\" : \"NewMessage\";\n    let currmessST = localStorage.getItem(key);\n    let currmessOB = JSON.parse(currmessST);\n\n    if (currmessOB == \"\")\n      currmessOB = {};\n    if (this.state.chosenIcon != \"\") {\n      currmessOB.icon = this.state.chosenIcon;\n    }\n\n    localStorage.setItem(key, JSON.stringify(currmessOB));\n    this.setIcon(\"\");\n    console.log(\"icon page\" + localStorage.getItem(key));\n  }\n\n  setIcon(chosenIcon) {\n    this.setState({ chosenIcon },\n      console.log(\"after setState: \", this.state.chosenIcon)\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar history={this.props.history} />\n        <div className=\"container\">\n          <h3>איזה אייקון תרצו להציג?</h3>\n          <div class=\"dropdown show text-center\">\n            <a\n              class=\"btn btn-secondary dropdown-toggle \"\n              href=\"#\"\n              role=\"button\"\n              id=\"dropdownMenuLink\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\">\n              סנן\n            </a>\n            <div class=\"dropdown-menu dropdown-menu-center \" aria-labelledby=\"dropdownMenuLink\">\n              {Object.keys(iconsObj).map((category) =>\n                <Filter\n                  isCategryChecked={this.state.isCategryChecked}\n                  filterCategory={this.filterCategory}\n                  category={category}\n                />\n              )}\n            </div>\n          </div>\n          <br />\n          <div className=\"scrollIcons\">\n            <div class=\"row\">\n              <div class=\"col-sm\">\n                <Icons\n                  categoryFilter={this.state.categoryFilter}\n                  setIcon={this.setIcon}\n                  saveNewIcon={this.saveNewIcon}\n                />\n              </div>\n            </div>\n          </div>\n          <br />\n          <Link to={`${this.props.match.params.id ? `/EditMessage/${this.props.match.params.id}` : '/NewMessage'}`}>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-lg btn-block\"\n              onClick={this.saveNewIcon}>\n              המשך\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IconPage;","export const char_to_morse = {\n'!':\"-.-.--\",\n'\"':\".-..-.\",\n'$':\"...-..-\",\n'&':\".-...\",\n\"'\":\".----.\",\n'(':\"-.--.\",\n')':\"-.--.-\",\n'+':\".-.-.\",\n',':\"--..--\",\n'-':\"-....-\",\n'.':\".-.-.-\",\n'/':\"-..-.\",\n'0':\"-----\",\n'1':\".----\",\n'2':\"..---\",\n'3':\"...--\",\n'4':\"....-\",\n'5':\".....\",\n'6':\"-....\",\n'7':\"--...\",\n'8':\"---..\",\n'9':\"----.\",\n':':\"---...\",\n';':\"-.-.-.\",\n'=':\"-...-\",\n'?':\"..--..\",\n'@':\".--.-.\",\n'_':\"..--.-\",\n'A':\".-\",\n'B':\"-...\",\n'C':\"-.-.\",\n'D':\"-..\",\n'E':\".\",\n'F':\"..-.\",\n'G':\"--.\",\n'H':\"....\",\n'I':\"..\",\n'J':\".---\",\n'K':\"-.-\",\n'L':\".-..\",\n'M':\"--\",\n'N':\"-.\",\n'O':\"---\",\n'P':\".--.\",\n'Q':\"--.-\",\n'R':\".-.\",\n'S':\"...\",\n'T':\"-\",\n'U':\"..-\",\n'V':\"...-\",\n'W':\".--\",\n'X':\"-..-\",\n'Y':\"-.--\",\n'Z':\"--..\",\n' ':\" \",\n}\n\nexport default char_to_morse;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class MsgCtrlButtons extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"dropdown\">\n                    <button\n                        className=\"btn btn-secondary dropdown-toggle\"\n                        type=\"button\"\n                        id=\"dropdownMenuButton\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                    />\n\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                        <Link to={`/EditMessage/${this.props.itemID}`}>\n                            <button onClick={() => this.props.editmessage(this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >ערוך/י</button>\n                        </Link>\n\n                        <button onClick={(e) => this.props.deletemessage(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >מחק/י</button>\n                        {this.props.isFav ?\n                            <button onClick={(e) => this.props.changelocation(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >הסר/י ממועדפים</button>\n                            :\n                            <button onClick={(e) => this.props.changelocation(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >הוסף/י למועדפים</button>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport char_to_morse from \"./morse_code_dict.js\";\n// import { Tone } from \"./Tone.min.js\";\n\nexport class MorseCode extends Component {\n  // The Morse Code tone to use, xHz sine wave\n  // static osc = new Tone.Oscillator(8000, \"sine\").toMaster();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      _textMessageInput: \"the users input\", //need to change!!\n      _codeMessageArray: [],\n      _codeIsRunning: false, // Track whether morse code is running\n      _initialDelay: 0.1, // Initial delay before starting morse code sequence\n\n      //tone times\n      _dotTime: 0.070,\n      _spaceTime: 0.49, //_dotTime*7 \n      _dashTime: 0.21,\n      _interElemTime: 0.090,\n    };\n  }\n\n  textMessageToMorse = () => {\n    let message = this.state._textMessageInput;\n    let messageUpper = message.toUpperCase();\n    let codeMessageArray = this.state._codeMessageArray;\n    console.log(\"messageUpper: \", messageUpper);\n\n    for (let i = 0; i < messageUpper.length; i++) {\n      codeMessageArray.push(char_to_morse[messageUpper[i]]);\n    }\n\n    console.log(\"codeMessageArray: \", codeMessageArray);\n    this.setState({ _codeMessageArray: codeMessageArray });\n  }\n\n  tone_updateProgress = (time, pos, totalLength) => {\n    var ratio = 100 * pos / totalLength; //position the text\n\n    //TODO - change this line\n    // document.querySelector('#p1').MaterialProgress.setProgress(ratio);\n  }\n\n  //TODO\n  addMorseText = (morseText) => {\n    console.log(\"addMorseText: \", morseText);\n  }\n\n  tone_word_space = () => {\n    this.addMorseText('<br />');\n  }\n\n  tone_dot = (time, char) => {\n    // this.osc.start(time);\n    console.log(\"time dot\", time);\n    // osc.stop(time+dot_time);\n    this.addMorseText('• ', char);\n  }\n\n  tone_dash = (time, char) => {\n    // osc.start(time);\n    console.log(\"time dash\", time);\n    // osc.stop(time + dash_time);\n    this.addMorseText('▬ ', char);\n  }\n\n  tone_letter_space = (time) => {\n    this.addMorseText(' ');\n  }\n\n  tone_fin = (time) => {\n    this.setState({ _codeIsRunning: false });\n  }\n\n  generateSequence = () => {\n    let codeMessageArray = this.state._codeMessageArray;\n    let seq = [];\n    let initialDelay = this.state._initialDelay; // Our current time in the morse code sequence\n    let pos = 0;\n\n    for (let i = 0; i < codeMessageArray.length; i++) {\n      let codeChar = codeMessageArray[i]; // morse code codeChar dash and dots\n\n      // If the codeChar is just a space, handle differently\n      if (codeChar === ' ') {\n        // Push codeChar space\n        seq.push({ \"time\": initialDelay, \"func\": this.tone_word_space });\n        this.tone_word_space();\n        initialDelay += this.state._space_time;\n      } else {\n        // We have a morse code codeChar\n        if (typeof codeChar == 'undefined') {\n          console.log(\"Skip\", codeMessageArray[i]);\n          continue;\n        }\n        for (let j = 0; j < codeChar.length; j++) {\n          let char = codeChar[j]; // morse code character\n          if (char === '.') {\n            // Push a tone_dot\n            seq.push({ \"time\": initialDelay, \"func\": this.tone_dot });\n            this.tone_dot();\n            initialDelay += this.state._dotTime;\n          } else if (char === '-') {\n            // Push tone_dash\n            seq.push({ \"time\": initialDelay, \"func\": this.tone_dash });\n            this.tone_dash();\n            initialDelay += this.state._dashTime;\n          } else {\n            console.log('Unexpected character in morse code message:', char);\n          }\n          // Add inter element pause between characters\n          initialDelay += this.state._interElemTime;\n          pos += 1;\n          // Add update to progress bar\n          seq.push({\n            \"time\": initialDelay,\n            \"func\": this.tone_updateProgress,\n            \"msg_char\": pos\n          });\n          this.tone_updateProgress();\n          console.log(\"seq: \", seq);\n        }\n        // Add inter-letter space\n        if (i < codeMessageArray.length - 1 && codeMessageArray[i + 1] !== ' ') {\n          seq.push({ \"time\": initialDelay, \"func\": this.tone_letter_space });\n          this.tone_letter_space();\n          initialDelay += this.state.space_time;\n        }\n      }\n    }\n    seq.push({ \"time\": initialDelay, \"func\": this.tone_fin });\n    // this.tone_fin();\n\n    /*var part = new Tone.Part(function (time, obj) {\n      if (typeof obj.msg_char != 'undefined') {\n        obj.func(time, obj.msg_char);\n        // console.log(time.toFixed(3), obj.func.name, obj.msg_char);\n      } else {\n        obj.func(time);\n        // console.log(time.toFixed(3), obj.func.name);\n      }\n    }, seq).start();\n\n    // Start sequence\n    Tone.start();*/\n  }\n\n  playMorseSequence = () => {\n    console.log(\"playMorseSequence\");\n    if (!this.state._codeIsRunning) {\n      //TODO - stopMorse()\n\n      this.setState({ _codeIsRunning: true });\n      this.textMessageToMorse();\n\n      let codeMessageArray = this.state._codeMessageArray;\n      let totalLength = codeMessageArray.join('').length - 1;\n\n      this.tone_updateProgress(totalLength);\n      this.generateSequence();\n    } else {\n      console.log(\"morse code is running: \", this.state._codeIsRunning);\n    }\n  }\n\n  clearCodeText = () => {\n    this.setState({ _codeIsRunning: false, _codeMessageArray: [] });\n  }\n\n  render() {\n    if (!this.state._codeIsRunning) {\n      return (\n        <div>\n          <button onClick={this.playMorseSequence}>play morse sequence</button>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <button onClick={this.clearCodeText}>clear morse</button>\n          <p id=\"msg\">{this.state._textMessageInput}</p>\n          <div id=\"morse\">{this.state._codeMessageArray}</div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default MorseCode;\n\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MsgCtrlButtons } from \"./MsgCtrlButtons\";\n\nexport class Message extends Component {\n    render() {\n        return (\n            <div className=\"list-group\">\n                <Link to=\"/SendPage\">\n                    <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                        <div className=\"d-flex w-100 justify-content-between\">\n                            <i style={{ color: this.props.color }} className={\"fas fa-\" + this.props.icon + \" fa-3x\"} />\n                            <h4 className=\"mb-3 \">{this.props.header} </h4>\n                            <MsgCtrlButtons\n                                itemID={this.props.itemID}\n                                deletemessage={this.props.deletemessage}\n                                editmessage={this.props.editmessage}\n                                isFav={this.props.isFav}\n                                changelocation={this.props.changelocation}\n                            />\n                        </div>\n                        <p className=\"mb-1\"> {this.props.description} </p>\n                    </div>\n                </Link>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { MorseCode, char_to_morse } from '../../encode_message/MorseCode.jsx';\nimport { Link } from 'react-router-dom';\n//import data from '../data.json';\n// import { Nav } from \"./Nav\";\nimport { Message } from \"./Message\";\nimport { NavBar } from '../message_page/NavBar.js';\n\n\nexport class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: ''\n    }\n\n    this.deletemessage = this.deletemessage.bind(this);\n    this.editmessage = this.editmessage.bind(this);\n    this.changelocation = this.changelocation.bind(this);\n  }\n\n  componentDidMount() {\n    let key = \"messages\";\n    let messageST = localStorage.getItem(key);\n\n    if (messageST) {\n      let messagesOB = JSON.parse(messageST);\n      const messages = Object.keys(messagesOB).map(obj => messagesOB[obj]);\n      this.setState({ messages });\n    } /*else {\n      window.NativeStorage.getItem(key,\n        (arr) => { this.setState({ messages: arr }) },\n        (error) => { console.log(\"homepage: cant access native storage: \", error) }\n      );\n    }*/\n\n    localStorage.setItem(\"EditMessage\", JSON.stringify(\"\"));\n    localStorage.setItem(\"NewMessage\", JSON.stringify({}));\n  }\n\n  deletemessage(event, itemID, isFav) {\n    event.preventDefault();\n    let key = \"messages\";\n    let messages = this.state.messages;\n    let updatemessages = [];\n\n    messages.map(msg => {\n      if (msg.itemID !== itemID) {\n        updatemessages.push(msg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(updatemessages));\n    this.setState({ messages: updatemessages });\n  }\n\n  editmessage(itemID, isFav) {\n    let key = \"EditMessage\";\n    let editmsg = {};\n\n    this.state.messages.map(currmsg => {\n      if (currmsg.itemID === itemID) {\n        editmsg = Object.assign({}, currmsg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(editmsg));\n  }\n\n  changelocation(event, Itemid, isFav) {\n    event.preventDefault();\n    let key = \"messages\";\n    let messages = this.state.messages;\n    let updatemessages = [];\n\n    messages.map(msg => {\n      updatemessages.push(msg);\n      if (msg.itemID === Itemid) {\n        updatemessages[updatemessages.length - 1].isFav = !isFav;\n\n      }\n      //tempmessage=Object.assign({},currMg);\n    });\n\n    localStorage.setItem(key, JSON.stringify(updatemessages));\n    this.setState({ messages: updatemessages });\n  }\n\n  render() {\n    let favmessages = [];\n    let regmessages = [];\n    let msgkeys = Object.keys(this.state.messages)\n\n    msgkeys.forEach(key => {\n      let message = this.state.messages[key];\n      if (message.isFav) {\n        favmessages.push(\n          <Message\n            key={key}\n            isFav={message.isFav}\n            itemID={message.itemID}\n            header={message.header}\n            description={message.description}\n            icon={message.icon}\n            color={message.color}\n            deletemessage={this.deletemessage}\n            editmessage={this.editmessage}\n            changelocation={this.changelocation}\n          />);\n      } else {\n        regmessages.push(\n          <Message\n            key={key}\n            isFav={message.isFav}\n            itemID={message.itemID}\n            header={message.header}\n            description={message.description}\n            icon={message.icon}\n            color={message.color}\n            deletemessage={this.deletemessage}\n            editmessage={this.editmessage}\n            changelocation={this.changelocation}\n          />);\n      }\n    });\n\n    return (\n      <div style={{ textAlign: \"right\" }}>\n        {/* <Nav /> */}\n        <NavBar />\n        <p> מועדפים </p>\n        <div style={{ textAlign: \"center\" }}>\n          {favmessages}\n        </div>\n\n        <br />\n\n        <p> עוד הודעות </p>\n        <div style={{ textAlign: \"center\" }} >\n          {regmessages}\n        </div>\n\n        <div className=\"container\">\n          <Link to=\"/NewMessage\">\n            <button type=\"button\" className=\"btn btn-secondary btn-lg fixed-bottom btn-block\">הוסף/י הודעה</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\n\nlet deafultcolors = [\n  {\n    colorclass: \"dark\",\n    colorvalue: \"#343a40\"\n  },\n  {\n    colorclass: \"primary\",\n    colorvalue: \"#007bff\"\n\n  },\n  {\n    colorclass: \"success\",\n    colorvalue: \"#28a745\"\n  },\n  {\n\n    colorclass: \"info\",\n    colorvalue: \"#17a2b8\"\n  },\n  {\n    colorclass: \"warning\",\n    colorvalue: \"#ffc107\"\n  },\n  {\n    colorclass: \"danger\",\n    colorvalue: \"#dc3545\"\n  }\n];\n\nexport class Colors extends Component {\n  render() {\n    return (\n      <div>\n        {deafultcolors.map((currcolor) =>\n          <Color\n            colorclass={currcolor.colorclass}\n            colorvalue={currcolor.colorvalue}\n            onclicker={() => this.props.updatecolor(currcolor.colorvalue)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Color extends Component {\n  render() {\n    return (\n      <button\n        type=\"button\"\n        onClick={this.props.onclicker}\n        className={\"btn btn-circle btn-\" + this.props.colorclass}\n      />\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport class FavoriteButton extends Component {\n\n  render() {\n    return (\n      <div class=\"custom-control custom-checkbox\">\n        <input\n          type=\"checkbox\"\n          class=\"custom-control-input\"\n          id=\"defaultUnchecked\"\n          checked={this.props.favbutt}\n          onChange={this.props.onChange}\n        />\n        <label\n          class=\"custom-control-label pull-right\"\n          for=\"defaultUnchecked\">\n          הוספה למועדפים:\n        </label>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './MessagePage.css';\nimport { Link } from 'react-router-dom';\nimport { NavBar } from \"./NavBar\";\nimport { Colors } from \"./Colors\";\nimport { FavoriteButton } from \"./FavoriteButton\";\nimport { exists } from 'fs';\n\nexport class MessagePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            header: '',\n            color: 'null',\n            isFav: false,\n            description: '',\n            icon: 'ghost',\n            favatfirst: false,\n            itemID: Date.now(),\n            key: \"\",\n            messageExists: false\n        };\n    }\n\n    componentWillMount() {\n        let key = \"NewMessage\";\n        if (this.props.match.params.id) {\n            key = \"EditMessage\";\n        }\n\n        let messageST = localStorage.getItem(key);\n        if (messageST) {\n            let messageOB = JSON.parse(messageST);\n            this.setState({\n                description: messageOB.description,\n                header: messageOB.header,\n                color: messageOB.color,\n                isFav: messageOB.isFav || this.state.isFav,\n                icon: messageOB.icon || this.state.icon,\n                favatfirst: messageOB.isFav,\n                itemID: this.props.match.params.id ? this.props.match.params.id : Date.now(),\n                key: key //\"NewMessage\" || \"EditMessage\"\n            });\n        }\n    }\n\n    //the storage will be updated also when reloading the page\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.updateStorage);\n    }\n\n    componentWillUnmount() {\n        this.updateStorage();\n        window.removeEventListener('beforeunload', this.updateStorage);\n    }\n\n    updateStorage = () => {\n        console.log(\"update storage\");\n        this.updateLocalStorage();\n        //this.updateFileSystem();\n        //this.updateNativeStorage();\n    }\n\n    /*\n    errorHandler = (fileName, e) => {  \n        let msg = '';\n    \n        switch (e.code) {\n            case FileError.QUOTA_EXCEEDED_ERR:\n                msg = 'Storage quota exceeded';\n                break;\n            case FileError.NOT_FOUND_ERR:\n                msg = 'File not found';\n                break;\n            case FileError.SECURITY_ERR:\n                msg = 'Security error';\n                break;\n            case FileError.INVALID_MODIFICATION_ERR:\n                msg = 'Invalid modification';\n                break;\n            case FileError.INVALID_STATE_ERR:\n                msg = 'Invalid state';\n                break;\n            default:\n                msg = 'Unknown error';\n                break;\n        };\n    \n        console.log('Error (' + fileName + '): ' + msg);\n    }\n\n    readFromFile = (fileName, cb) => {\n        var pathToFile = cordova.file.dataDirectory + fileName;\n        window.resolveLocalFileSystemURL(pathToFile, function (fileEntry) {\n            fileEntry.file(function (file) {\n                var reader = new FileReader();\n\n                reader.onloadend = function (e) {\n                    cb(JSON.parse(this.result));\n                };\n\n                reader.readAsText(file);\n            }, this.errorHandler.bind(null, fileName));\n        }, this.errorHandler.bind(null, fileName));\n    }\n\n    onDeviceReady = () => {\n        let fileData;\n        this.readFromFile('data.json', (data) => {\n            fileData = data;\n        });\n    }\n\n    updateFileSystem = () => {\n        document.addEventListener('deviceready', this.onDeviceReady(), false);\n\n        if (localStorage.getItem(\"messages\") != null) {\n            console.log(\"messages\", localStorage.getItem(\"messages\"));\n        }\n    }\n    */\n\n\n    /*\n    updateNativeStorage = () => {\n        if (localStorage.getItem(\"messages\") != null) {\n            console.log(\"messages\", localStorage.getItem(\"messages\"));\n            window.NativeStorage.setItem(\"messages\",\n                localStorage.getItem(\"messages\"),\n                () => { console.log(\"native storage success\") },\n                () => { console.log(\"native storage error\") }\n            );\n        }\n    }*/\n\n    updateLocalStorage = () => {\n        let messageOB = {\n            description: this.state.description,\n            header: this.state.header,\n            color: this.state.color,\n            isFav: this.state.isFav,\n            icon: this.state.icon,\n            itemID: this.state.itemID\n        };\n\n        localStorage.setItem(this.state.key, JSON.stringify(messageOB));\n    }\n\n    updateInfoEvent = (key, event) => {\n        this.setState({ [key]: event.target.value });\n    }\n\n    updateInfoValue = (key, value) => {\n        this.setState({ [key]: value });\n    }\n\n    addtofavorite = () => {\n        this.setState({ isFav: !this.state.isFav });\n    }\n\n    saveMessageData = () => {\n        let key = \"messages\";\n        let msg = {\n            header: this.state.header,\n            description: this.state.description,\n            isFav: this.state.isFav,\n            itemID: this.state.itemID,\n            icon: this.state.icon,\n            color: this.state.color\n        }\n        let messagesArr = [];\n        let tempmessage = [];\n        let messageST = localStorage.getItem(key);\n\n        if (messageST) {\n            let messagesOB = JSON.parse(messageST);\n            messagesArr = Object.keys(messagesOB).map(obj => messagesOB[obj]);\n        }\n\n        let messageExists = this.state.messageExists;\n        //check if the message header already exists in the saved messages\n        messagesArr.map(currmsg => {\n            if (currmsg.header === this.state.header) {\n                messageExists = true;\n                this.setState({ messageExists });\n            }\n        });\n\n        //if the message exists - don't add it again\n        if (messageExists) {\n            alert(\"הודעה זו כבר קיימת במערכת\");\n            return;\n        } else {\n            //if the message has an id then it is an \"EditMessage\" \n            if (this.props.match.params.id) {\n                messagesArr.map(currmsg => {\n                    if (currmsg.itemID === this.props.match.params.id) {\n                        tempmessage.push(msg);\n                    } else {\n                        tempmessage.push(currmsg);\n                    }\n                });\n                localStorage.setItem(key, JSON.stringify(tempmessage));\n            } else {\n                messagesArr.push(msg);\n                localStorage.setItem(key, JSON.stringify(messagesArr));\n            }\n        }\n    }\n\n    render() {\n        return (\n\n            <div>\n                <NavBar history={this.props.history} />\n\n                <div className=\"container\">\n\n                    <label for=\"message-title text-right\">כותרת ההודעה:</label>\n                    <input\n                        type=\"text\"\n                        onChange={(event) => this.updateInfoEvent(\"header\", event)}\n                        className=\"form-control\"\n                        id=\"message-title\"\n                        placeholder=\"הכנס/י כותרת להודעה\"\n                        value={this.state.header}\n                    />\n                    <small className=\"form-text text-muted\">על הכותרת להיות קצרה ותמציתית.</small>\n                    <br />\n\n                    <label for=\"message-description\">תוכן ההודעה:</label>\n                    <input\n                        type=\"text\"\n                        onChange={(event) => this.updateInfoEvent(\"description\", event)}\n                        className=\"form-control\"\n                        id=\"message-description\"\n                        placeholder=\"תוכן ההודעה\"\n                        value={this.state.description}\n                    />\n\n                    <br />\n                    <br />\n\n                    <div class=\"row\">\n                        <div class=\"col-11 text-center\">\n                            <i style={{ color: this.state.color }} class={\"fas fa-\" + this.state.icon + \" fa-5x pull-left\"} />\n                            <br /><br />\n\n                            <Link to={`/${this.state.key}/IconPage${this.state.key === \"EditMessage\" ? \"/\" + this.state.itemID : \"\"}`}>\n                                <button\n                                    type=\"button\"\n                                    class=\"btn btn-info \">\n                                    <i class=\"fas fa-pencil-alt\"></i>\n                                    שנה/י אייקון\n                                </button>\n                            </Link>\n                        </div>\n                    </div>\n\n                    {/* the color picker */}\n                    <input\n                        type=\"color\"\n                        className=\"btn-circle\"\n                        rgba\n                        value={this.state.color}\n                        onChange={(event) => this.updateInfoEvent(\"color\", event)}\n                    />\n                    <br />\n\n                    <Colors updatecolor={(color) => this.updateInfoValue(\"color\", color)} />\n                    <small className=\"form-text text-muted text-center \">ביכולתך לבחור בצבע מוכן מראש או לחילופין לבחור צבע מותאם אישית.</small>\n\n                    <FavoriteButton favbutt={this.state.isFav} onChange={this.addtofavorite} />\n\n                </div>\n\n                {this.state.header && this.state.description ?\n                    <Link to=\"/\">\n                        <button\n                            type=\"submit\"\n                            class=\"btn btn-secondary btn-lg btn-block\"\n                            onClick={this.saveMessageData}>\n                            {this.state.key === \"NewMessage\" ? \"הוסף/י\" : \"עדכן/י\"}\n                        </button>\n                    </Link>\n                    : <button\n                        disabled\n                        type=\"submit\"\n                        class=\"btn btn-secondary btn-lg btn-block\">\n                        {this.state.key === \"NewMessage\" ? \"הוסף/י\" : \"עדכן/י\"}\n                    </button>\n                }\n            </div>\n        );\n    }\n}\n\nexport default MessagePage;","import React, { Component } from 'react';\nimport { NavBar } from '../message_page/NavBar.js';\n\nexport class SendPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <div>\n                <NavBar history={this.props.history} />\n                Send Page\n            </div>\n        );\n    }\n}\n\nexport default SendPage;","import React, { Component } from 'react';\n// import Tone from './ToneReact';\nimport { IconPage } from \"./scenes/icon_page/IconPage\";\nimport { Route, Switch } from 'react-router-dom'\nimport { HomePage } from './scenes/home_page/HomePage.js';\nimport { MessagePage } from './scenes/message_page/MessagePage.js';\nimport { SendPage } from \"./scenes/send_page/SendPage.js\";\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/NewMessage\" component={MessagePage} />\n          <Route exact path=\"/NewMessage/IconPage\" component={IconPage} />\n          <Route exact path=\"/EditMessage/:id\" component={MessagePage} />\n          <Route exact path=\"/EditMessage/IconPage/:id\" component={IconPage} />\n          <Route exact path=\"/SendPage\" component={SendPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\n// const startApp = () => {\n//   console.log(window.NativeStorage);\n  ReactDOM.render((\n    <HashRouter>\n      <App />\n    </HashRouter>\n  ), document.getElementById('root'));\n// }\n\n// if (!window.cordova) {\n//   startApp();\n// } else {\n//   document.addEventListener('deviceready', startApp, false);\n// }\n\n\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n\n"],"sourceRoot":""}