{"version":3,"sources":["scenes/icon_page/IconPage.js","encode_message/morse_code_dict.js","scenes/home_page/MsgCtrlButtons.js","encode_message/MorseCode.jsx","scenes/home_page/FavoriteMsg.js","scenes/home_page/RegMsg.js","scenes/home_page/Nav.js","scenes/new_message/NavBar.js","scenes/home_page/HomePage.js","scenes/new_message/Icons.js","scenes/new_message/Colors.js","scenes/new_message/FavoriteButton.js","App.js","scenes/new_message/NewMessage.js","serviceWorker.js","index.js"],"names":["icons","בעלי חיים","סכנות","דת","רפואה","אוכל","אנשים","מקומות","חפצים","Filter","Component","react_default","a","createElement","class","type","onChange","this","props","filterCategory","id","category","NavBar","_Component3","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","className","data-sidebarClass","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Icons","_this3","categoryFilter","length","keys","map","icon","IconPage_Icon","iconimage","setIcon","console","log","savenewicon","checkCategoryFilter","Icon","onClick","char_to_morse","!","\"","$","&","'","(",")","+",",","-",".","/","0","1","2","3","4","5","6","7","8","9",":",";","=","?","@","_","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","MsgCtrlButtons","_Component","_this","aria-haspopup","aria-labelledby","Link","to","concat","itemID","editmessage","isFav","e","deletemessage","changelocation","FavoriteMsg","style","color","header","MsgCtrlButtons_MsgCtrlButtons","description","RegMsg","Nav","placeholder","iconame","currimage","Icons_Icon","updateimg","deafultcolors","colorclass","colorvalue","Colors","currcolor","Colors_Color","onclicker","updatecolor","Color","FavoriteButton","checked","favbutt","for","App","Boolean","window","location","hostname","match","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ca95090.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './IconPage.css';\nimport {  Link } from 'react-router-dom';\n\n\nlet icons = {\n  \"בעלי חיים\": [\"cat\", \"dog\", \"horse\"],\n  \"סכנות\": [\"fire\", \"bolt\", \"ghost\"],\n  \"דת\": [\"cross\", \"menorah\", \"pray\", \"bible\"],\n  \"רפואה\": [\"pills\", \"cannabis\", \"capsules\"],\n  \"אוכל\": [\"lemon\", \"drumstick-bite\", \"cookie\"],\n  \"אנשים\": [\"user-injured\", \"user-tie\", \"blind\"],\n  \"מקומות\": [\"university\", \"church\", \"hospital\", \"home\"],\n  \"חפצים\": [\"toilet-paper\", \"bed\", \"basketball-ball\", \"microscope\"]\n}\n\nexport class IconPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryFilter: [],\n      chosenIcon: \"\"\n    }\n    this.filterCategory = this.filterCategory.bind(this);\n\n    this.setIcon = this.setIcon.bind(this);\n    this.savenewicon = this.savenewicon.bind(this);\n  }\n\n\n  filterCategory(event) {\n    let checked = event.target.checked;\n    let categoryID = event.target.id;\n\n    if (checked === true && this.state.categoryFilter.includes(categoryID) === false) {\n      this.setState({\n        categoryFilter: [...this.state.categoryFilter, categoryID]\n      })\n    }\n\n\n\n    else {\n      let currentIndex = this.state.categoryFilter.findIndex(function (element) {\n        return element === categoryID;\n      });\n      if (currentIndex < 0) {\n        return\n      } else {\n        let updatedCategoryFilter = this.state.categoryFilter;\n        updatedCategoryFilter.splice(currentIndex, 1);\n        this.setState({ categoryFilter: updatedCategoryFilter });\n      }\n    }\n  }\n\n  savenewicon() {\n    const key = \"Editmessage\"; //Editmessages\n    let currmessST = localStorage.getItem(key);\n    console.log(\"currmessST: \", currmessST);\n    let currmessOB = JSON.parse(currmessST);\n    console.log(\"currmessOB: \", currmessOB);\n    if (this.state.chosenIcon !== \"\") {\n      currmessOB.icon = this.state.chosenIcon;\n    }\n    localStorage.setItem(key, JSON.stringify(currmessOB));\n    console.log(JSON.stringify(currmessOB));\n    this.setIcon(\"\");\n    console.log(\"icon page\" + localStorage.getItem(\"Editmessage\")); //Editmessages\n  }\n\n\n  setIcon(chosenIcon) {\n    console.log(\"IconPage: setIcon: chosenIcon: \", chosenIcon);\n    //updates setState too late - not in callback function\n    this.setState({ chosenIcon },\n      console.log(\"after setState: \", this.state.chosenIcon)\n    );\n  }\n\n\n  render() {\n    console.log(this.state.chosenIcon);\n    //console.log(this.state.categoryFilter);\n    return (\n      <div>\n        <NavBar />\n        <div className=\"container\">\n          <h3>איזה אייקון תרצו להציג?</h3>\n          <div class=\"dropdown show text-center\">\n            <a class=\"btn btn-secondary dropdown-toggle \" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              סנן\n            </a>\n            <div class=\"dropdown-menu dropdown-menu-center \" aria-labelledby=\"dropdownMenuLink\">\n              {Object.keys(icons).map((category) => <Filter isCategryChecked={this.state.isCategryChecked} filterCategory={this.filterCategory} category={category} />)}\n            </div>\n          </div>\n          <br />\n          <div className=\"scrollIcons\">\n            <div class=\"row\">\n              <div class=\"col-sm\">\n                <Icons\n                  categoryFilter={this.state.categoryFilter}\n                  setIcon={this.setIcon}\n                  savenewicon={this.savenewicon}\n                />\n              </div>\n            </div>\n          </div>\n          <br />\n          <Link to={`/NewMessage/${this.props.match.params.id}`}>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-lg btn-block\"\n              onClick={this.savenewicon}>\n              המשך\n            </button>\n          </Link>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nclass Filter extends Component {\n\n  render() {\n    return (\n      <button class=\"dropdown-item\" type=\"button\" >\n        <input class=\"checkboxer\" onChange={this.props.filterCategory} id={this.props.category} type=\"checkbox\" />\n        <label>\n          {this.props.category}\n        </label>\n      </button>\n    );\n  }\n}\n\n\nexport class NavBar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\" data-sidebarClass=\"navbar-dark bg-dark\">\n          <a className=\"navbar-brand\" href=\"#\">Telebuzz</a>\n          <button className=\"navbar-toggler leftNavbarToggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\"\n            aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span>\n              <a href=\"/NewMessage\" className=\"text-light\"><i class=\"fas fa-arrow-left\"></i>  </a>\n            </span>\n          </button>\n        </nav>\n\n      </div>\n    );\n  }\n}\n\n\n\nclass Icons extends Component {\n\n  checkCategoryFilter() {\n    if (this.props.categoryFilter.length === 0) {\n      return (\n        Object.keys(icons).map(\n          (category) => icons[category].map(\n            (icon) =>\n              <Icon\n                iconimage={icon}\n                category={category}\n                setIcon={() => {\n                  this.props.setIcon(icon);\n                  console.log(\"Icons: icon: \", icon);\n                }}\n                savenewicon={() => this.props.savenewicon()}\n              />)\n\n        )\n      );\n    }\n    else {\n      return (\n        this.props.categoryFilter.map(\n          (category) => icons[category].map(\n\n            (icon) =>\n              <Icon\n                iconimage={icon}\n                category={category}\n                setIcon={() => this.props.setIcon(category.iconimage)}\n                savenewicon={() => this.props.savenewicon()}\n              />)\n        )\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.checkCategoryFilter()}\n      </div>\n    );\n  }\n}\n\nclass Icon extends Component {\n  render() {\n    return (\n      <button\n        onClick={this.props.setIcon}\n        id={this.props.category}\n        type=\"button\"\n        class=\"btn btn-default iconButton\" >\n\n        <i class={\"fas fa-\" + this.props.iconimage + \" fa-3x\"}></i>\n      </button>\n    );\n\n  }\n}","export const char_to_morse = {\n'!':\"-.-.--\",\n'\"':\".-..-.\",\n'$':\"...-..-\",\n'&':\".-...\",\n\"'\":\".----.\",\n'(':\"-.--.\",\n')':\"-.--.-\",\n'+':\".-.-.\",\n',':\"--..--\",\n'-':\"-....-\",\n'.':\".-.-.-\",\n'/':\"-..-.\",\n'0':\"-----\",\n'1':\".----\",\n'2':\"..---\",\n'3':\"...--\",\n'4':\"....-\",\n'5':\".....\",\n'6':\"-....\",\n'7':\"--...\",\n'8':\"---..\",\n'9':\"----.\",\n':':\"---...\",\n';':\"-.-.-.\",\n'=':\"-...-\",\n'?':\"..--..\",\n'@':\".--.-.\",\n'_':\"..--.-\",\n'A':\".-\",\n'B':\"-...\",\n'C':\"-.-.\",\n'D':\"-..\",\n'E':\".\",\n'F':\"..-.\",\n'G':\"--.\",\n'H':\"....\",\n'I':\"..\",\n'J':\".---\",\n'K':\"-.-\",\n'L':\".-..\",\n'M':\"--\",\n'N':\"-.\",\n'O':\"---\",\n'P':\".--.\",\n'Q':\"--.-\",\n'R':\".-.\",\n'S':\"...\",\n'T':\"-\",\n'U':\"..-\",\n'V':\"...-\",\n'W':\".--\",\n'X':\"-..-\",\n'Y':\"-.--\",\n'Z':\"--..\",\n' ':\" \",\n}\n\nexport default char_to_morse;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class MsgCtrlButtons extends Component {\n    render() {\n\n        return (\n            <div>\n                <div className=\"dropdown\">\n                    <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                    </button>\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                        <Link to={`/Editmessage/${this.props.itemID}`}>\n                            <button onClick={() => this.props.editmessage(this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >ערוך/י</button>\n                        </Link>\n\n                        <button onClick={(e) => this.props.deletemessage(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >מחק/י</button>\n                        {this.props.isFav ?\n                            <button onClick={(e) => this.props.changelocation(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >הסר/י ממועדפים</button>\n                            :\n                            <button onClick={(e) => this.props.changelocation(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >הוסף/י למועדפים</button>\n                        }\n\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport char_to_morse from \"./morse_code_dict.js\";\n// import { Tone } from \"./Tone.min.js\";\n\nexport class MorseCode extends Component {\n  // The Morse Code tone to use, xHz sine wave\n  // static osc = new Tone.Oscillator(8000, \"sine\").toMaster();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      _textMessageInput: \"the users input\", //need to change!!\n      _codeMessageArray: [],\n      _codeIsRunning: false, // Track whether morse code is running\n      _initialDelay: 0.1, // Initial delay before starting morse code sequence\n\n      //tone times\n      _dotTime: 0.070,\n      _spaceTime: 0.49, //_dotTime*7 \n      _dashTime: 0.21,\n      _interElemTime: 0.090,\n    };\n  }\n\n  textMessageToMorse = () => {\n    let message = this.state._textMessageInput;\n    let messageUpper = message.toUpperCase();\n    let codeMessageArray = this.state._codeMessageArray;\n    console.log(\"messageUpper: \", messageUpper);\n\n    for (let i = 0; i < messageUpper.length; i++) {\n      codeMessageArray.push(char_to_morse[messageUpper[i]]);\n    }\n\n    console.log(\"codeMessageArray: \", codeMessageArray);\n    this.setState({ _codeMessageArray: codeMessageArray });\n  }\n\n  tone_updateProgress = (time, pos, totalLength) => {\n    var ratio = 100 * pos / totalLength; //position the text\n\n    //TODO - change this line\n    // document.querySelector('#p1').MaterialProgress.setProgress(ratio);\n  }\n\n  //TODO\n  addMorseText = (morseText) => {\n    console.log(\"addMorseText: \", morseText);\n  }\n\n  tone_word_space = () => {\n    this.addMorseText('<br />');\n  }\n\n  tone_dot = (time, char) => {\n    // this.osc.start(time);\n    console.log(\"time dot\", time);\n    // osc.stop(time+dot_time);\n    this.addMorseText('• ', char);\n  }\n\n  tone_dash = (time, char) => {\n    // osc.start(time);\n    console.log(\"time dash\", time);\n    // osc.stop(time + dash_time);\n    this.addMorseText('▬ ', char);\n  }\n\n  tone_letter_space = (time) => {\n    this.addMorseText(' ');\n  }\n\n  tone_fin = (time) => {\n    this.setState({ _codeIsRunning: false });\n  }\n\n  generateSequence = () => {\n    let codeMessageArray = this.state._codeMessageArray;\n    let seq = [];\n    let initialDelay = this.state._initialDelay; // Our current time in the morse code sequence\n    let pos = 0;\n\n    for (let i = 0; i < codeMessageArray.length; i++) {\n      let codeChar = codeMessageArray[i]; // morse code codeChar dash and dots\n\n      // If the codeChar is just a space, handle differently\n      if (codeChar === ' ') {\n        // Push codeChar space\n        seq.push({ \"time\": initialDelay, \"func\": this.tone_word_space });\n        this.tone_word_space();\n        initialDelay += this.state._space_time;\n      } else {\n        // We have a morse code codeChar\n        if (typeof codeChar == 'undefined') {\n          console.log(\"Skip\", codeMessageArray[i]);\n          continue;\n        }\n        for (let j = 0; j < codeChar.length; j++) {\n          let char = codeChar[j]; // morse code character\n          if (char === '.') {\n            // Push a tone_dot\n            seq.push({ \"time\": initialDelay, \"func\": this.tone_dot });\n            this.tone_dot();\n            initialDelay += this.state._dotTime;\n          } else if (char === '-') {\n            // Push tone_dash\n            seq.push({ \"time\": initialDelay, \"func\": this.tone_dash });\n            this.tone_dash();\n            initialDelay += this.state._dashTime;\n          } else {\n            console.log('Unexpected character in morse code message:', char);\n          }\n          // Add inter element pause between characters\n          initialDelay += this.state._interElemTime;\n          pos += 1;\n          // Add update to progress bar\n          seq.push({\n            \"time\": initialDelay,\n            \"func\": this.tone_updateProgress,\n            \"msg_char\": pos\n          });\n          this.tone_updateProgress();\n          console.log(\"seq: \", seq);\n        }\n        // Add inter-letter space\n        if (i < codeMessageArray.length - 1 && codeMessageArray[i + 1] !== ' ') {\n          seq.push({ \"time\": initialDelay, \"func\": this.tone_letter_space });\n          this.tone_letter_space();\n          initialDelay += this.state.space_time;\n        }\n      }\n    }\n    seq.push({ \"time\": initialDelay, \"func\": this.tone_fin });\n    // this.tone_fin();\n\n    /*var part = new Tone.Part(function (time, obj) {\n      if (typeof obj.msg_char != 'undefined') {\n        obj.func(time, obj.msg_char);\n        // console.log(time.toFixed(3), obj.func.name, obj.msg_char);\n      } else {\n        obj.func(time);\n        // console.log(time.toFixed(3), obj.func.name);\n      }\n    }, seq).start();\n\n    // Start sequence\n    Tone.start();*/\n  }\n\n  playMorseSequence = () => {\n    console.log(\"playMorseSequence\");\n    if (!this.state._codeIsRunning) {\n      //TODO - stopMorse()\n\n      this.setState({ _codeIsRunning: true });\n      this.textMessageToMorse();\n\n      let codeMessageArray = this.state._codeMessageArray;\n      let totalLength = codeMessageArray.join('').length - 1;\n\n      this.tone_updateProgress(totalLength);\n      this.generateSequence();\n    } else {\n      console.log(\"morse code is running: \", this.state._codeIsRunning);\n    }\n  }\n\n  clearCodeText = () => {\n    this.setState({ _codeIsRunning: false, _codeMessageArray: [] });\n  }\n\n  render() {\n    if (!this.state._codeIsRunning) {\n      return (\n        <div>\n          <button onClick={this.playMorseSequence}>play morse sequence</button>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <button onClick={this.clearCodeText}>clear morse</button>\n          <p id=\"msg\">{this.state._textMessageInput}</p>\n          <div id=\"morse\">{this.state._codeMessageArray}</div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default MorseCode;\n\n\n","import React, { Component } from 'react';\nimport { MsgCtrlButtons } from \"./MsgCtrlButtons\";\n\nexport class FavoriteMsg extends Component {\n    render() {\n        return (\n            <div className=\"list-group\">\n                {/* <a href=\"./\"> */}\n                <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                    <div className=\"d-flex w-100 justify-content-between\">\n                        <i style={{ color: this.props.color }} className={\"fas fa-\" + this.props.icon + \" fa-3x\"} />\n                        <h4 className=\"mb-3 \">{this.props.header} </h4>\n                        <MsgCtrlButtons itemID={this.props.itemID} deletemessage={this.props.deletemessage} editmessage={this.props.editmessage} isFav={this.props.isFav} changelocation={this.props.changelocation} />\n                    </div>\n                    <p className=\"mb-1\"> {this.props.description} </p>\n                </div>\n                {/* </a> */}\n            </div>\n\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { MsgCtrlButtons } from \"./MsgCtrlButtons\";\n\nexport class RegMsg extends Component {\n    render() {\n        return (\n            <div className=\"list-group\">\n                {/* <button type=\"button\" class=\"btn btn-default btn-lg btn-block\"> */}\n                <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                    {/* <a href=\"./\" className=\"list-group-item list-group-item-action flex-column align-items-start\"> */}\n                    <div className=\"d-flex w-100 justify-content-between\">\n                        <i style={{ color: this.props.color }} className={\"fas fa-\" + this.props.icon + \" fa-3x\"} />\n                        <h4 className=\"mb-3 \">{this.props.header} </h4>\n                        <MsgCtrlButtons itemID={this.props.itemID} deletemessage={this.props.deletemessage} editmessage={this.props.editmessage} isFav={this.props.isFav} changelocation={this.props.changelocation} />\n                    </div>\n                    <p className=\"mb-1\"> {this.props.description} </p>\n                    {/* </a> */}\n                </div>\n                {/* </button> */}\n            </div>);\n    }\n}","import React, { Component } from 'react';\n\nexport class Nav extends Component {\n    render() {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\" data-sidebarClass=\"navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"#\">Telebuzz</a>\n            <button className=\"navbar-toggler leftNavbarToggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\"\n              aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n  \n            <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  <a className=\"nav-link\" href=\"#\">Home\n                          <span className=\"sr-only\">(current)</span>\n                  </a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"#\">Link</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\n                </li>\n                <li className=\"nav-item dropdown\">\n                  <a className=\"nav-link dropdown-toggle\" href=\"https://example.com\" id=\"dropdown01\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                    aria-expanded=\"false\">Dropdown</a>\n                  <div className=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\n                    <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n                  </div>\n                </li>\n              </ul>\n              <form className=\"form-inline my-2 my-lg-0\">\n                <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n              </form>\n  \n            </div>\n          </nav>\n  \n        </div>\n      );\n    }\n  }\n  ","import React, { Component } from 'react';\n\nexport class NavBar extends Component {\n    render() {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\" data-sidebarClass=\"navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"#\">Telebuzz</a>\n            <button className=\"navbar-toggler leftNavbarToggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\"\n              aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span>\n                <a href=\"/\" className=\"text-light\"><i class=\"fas fa-arrow-left\"></i>  </a>\n              </span>\n            </button>\n          </nav>\n  \n        </div>\n      );\n    }\n  }\n  ","import React, { Component } from 'react';\nimport {MorseCode , char_to_morse} from '../../encode_message/MorseCode.jsx';\nimport { Link } from 'react-router-dom';\n//import data from '../data.json';\nimport { FavoriteMsg } from \"./FavoriteMsg\";\nimport { RegMsg } from \"./RegMsg\";\nimport { Nav } from \"./Nav\";\n\n\nexport class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: ''\n    }\n    this.deletemessage = this.deletemessage.bind(this);\n    this.editmessage = this.editmessage.bind(this);\n    this.changelocation = this.changelocation.bind(this);\n  }\n  componentDidMount() {\n    let key=\"messages\";\n    let messageST = localStorage.getItem(key);\n    if (messageST) {\n      let messagesOB = JSON.parse(messageST);\n      const messages = Object.keys(messagesOB).map(obj => messagesOB[obj]);\n      this.setState({ messages });\n    }\n    localStorage.setItem(\"Editmessage\",JSON.stringify(\"\"));\n  }\n  deletemessage(event, itemID, isFav) {\n      event.preventDefault();\n      let key=\"messages\";\n      let messages=this.state.messages;\n      let updatemessages=[];\n      messages.map(msg => {\n        if(msg.itemID !== itemID){\n          updatemessages.push(msg);\n      }\n    });\n    localStorage.setItem(key, JSON.stringify(updatemessages));\n    this.setState({messages:updatemessages});\n  }\n\n  editmessage(itemID, isFav) {\n    let key=\"Editmessage\";\n    let editmsg={};\n    this.state.messages.map(currmsg => {\n      if(currmsg.itemID === itemID)\n      {\n          editmsg=Object.assign({},currmsg);\n      }\n    } );\n    localStorage.setItem(key,JSON.stringify(editmsg));\n\n  }\n\n  changelocation(event, Itemid, isFav) {\n    event.preventDefault();\n    let key=\"messages\";\n    let messages=this.state.messages;\n    let updatemessages=[];\n    messages.map(msg => {\n      updatemessages.push(msg);\n      if(msg.itemID === Itemid){\n        updatemessages[updatemessages.length-1].isFav=!isFav;\n\n    }\n    //tempmessage=Object.assign({},currMg);\n  });\n  localStorage.setItem(key, JSON.stringify(updatemessages));\n  this.setState({messages:updatemessages});\n  \n  }\n\n  render() {\n    let favmessages = [];\n    let regmessages = [];\n    let msgkeys = Object.keys(this.state.messages)\n\n    msgkeys.forEach(key => {\n      let message = this.state.messages[key];\n      if (message.isFav)\n        favmessages.push(<FavoriteMsg key={key} isFav={message.isFav} itemID={message.itemID} header={message.header} description={message.description} icon={message.icon} color={message.color} deletemessage={this.deletemessage} editmessage={this.editmessage} changelocation={this.changelocation} />);\n      else\n        regmessages.push(<RegMsg key={key} isFav={message.isFav} itemID={message.itemID} header={message.header} description={message.description} icon={message.icon} color={message.color} deletemessage={this.deletemessage} editmessage={this.editmessage} changelocation={this.changelocation} />);\n    });\n\n    return (\n    <div style={{textAlign : \"right\"}}>\n        <Nav />\n        <p> מועדפים </p>\n        <div style={{textAlign : \"center\"}}>\n          {favmessages}\n        </div>\n        <hr /> <hr />\n        <p> עוד הודעות </p>\n        <div style={{textAlign : \"center\"}} >\n          {regmessages}\n        </div> \n\n        <div className=\"container\">\n          <Link to=\"/NewMessage\">\n            <button type=\"button\" className=\"btn btn-secondary btn-lg fixed-bottom btn-block\">הוסף הודעה</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\n\nlet iconame = [\n  \"microscope\",\n  \"anchor\",\n  \"basketball-ball\",\n  \"hourglass\",\n  \"bolt\",\n  \"award\",\n  \"bed\",\n  \"cannabis\",\n  \"fire\",\n  \"home\",\n  \"drumstick-bite\",\n  \"ghost\",\n  \"toilet-paper\"\n];\n\n\nexport class Icons extends Component {\n\n    render(){\n      return(\n        <div>\n        {iconame.map((currimage)=><Icon iconimage={currimage} onClick={()=>this.props.updateimg(currimage)}/>)}\n        </div>\n      );\n  \n    }\n  }\n  \n  class Icon extends Component {\n    render(){\n      return(\n        <button type=\"button\" class=\"btn btn-default \"  onClick={this.props.onClick}>\n            <i class={\"fas fa-\" + this.props.iconimage}></i>\n        </button>\n      );\n    }\n  }","import React, { Component } from 'react';\n\nlet deafultcolors = [\n  {\n    colorclass: \"dark\",\n    colorvalue: \"#343a40\"\n  },\n  {\n    colorclass: \"primary\",\n    colorvalue: \"#007bff\"\n\n  },\n  {\n    colorclass: \"success\",\n    colorvalue: \"#28a745\"\n  },\n  {\n\n    colorclass: \"info\",\n    colorvalue: \"#17a2b8\"\n  },\n  {\n    colorclass: \"warning\",\n    colorvalue: \"#ffc107\"\n  },\n  {\n    colorclass: \"danger\",\n    colorvalue: \"#dc3545\"\n  }];\n\nexport class Colors extends Component {\n    render() {\n      return (\n        <div>\n          {deafultcolors.map((currcolor) =>\n            <Color\n              colorclass={currcolor.colorclass}\n              colorvalue={currcolor.colorvalue}\n              onclicker={() => this.props.updatecolor(currcolor.colorvalue)} />)}\n  \n        </div>\n      );\n    }\n  }\n  \n  class Color extends Component {\n    render() {\n      return (\n        <button type=\"button\" onClick={this.props.onclicker} className={\"btn btn-circle btn-\" + this.props.colorclass} />\n      );\n    }\n  }","import React, { Component } from 'react';\n\nexport class FavoriteButton extends Component {\n\n    render() {\n      return (\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"defaultUnchecked\" checked={this.props.favbutt} onChange={this.props.onChange} />\n          <label class=\"custom-control-label pull-right\" for=\"defaultUnchecked\">הוספה למועדפים:</label>\n        </div>\n      );\n    }\n  }","import React, { Component } from 'react';\n// import Tone from './ToneReact';\nimport { IconPage } from \"./scenes/icon_page/IconPage\";\nimport { Route, HashRouter, Switch } from 'react-router-dom'\nimport { HomePage } from './scenes/home_page/HomePage.js';\nimport { NewMessage } from './scenes/new_message/NewMessage.js';\n\nimport './App.css';\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <HashRouter> */}\n        <h1>\n          oiuhfoidjspg[osjup]\n        </h1>\n          {/* <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/NewMessage\" component={NewMessage} />\n            <Route exact path=\"/NewMessage/IconPage/:id\" component={IconPage} />\n            <Route exact path=\"/Editmessage/:id\" component={NewMessage} />\n            <Route exact path=\"/Editmessage/IconPage/:id\" component={IconPage} />\n          </Switch> */}\n        {/* </HashRouter> */}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React, { Component } from 'react';\nimport './NewMessage.css';\n// import {Link} from 'react-router-dom';\nimport { HashRouter as Router, Link } from 'react-router-dom';\nimport { NavBar } from \"./NavBar\";\nimport { Icons } from \"./Icons\";\nimport { Colors } from \"./Colors\";\nimport { FavoriteButton } from \"./FavoriteButton\";\n\n\nexport class NewMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      header: '',\n      color: 'null',\n      isFav: false,\n      description: '',\n      icon: 'anchor',\n      favatfirst: false,\n      specialicon: false,\n      itemID: Date.now()\n    }\n\n    this.addtofavorite = this.addtofavorite.bind(this);\n    this.updatechosencolor = this.updatechosencolor.bind(this);\n    this.updatecolor = this.updatecolor.bind(this);\n    this.updatetext = this.updatetext.bind(this);\n    this.updateheader = this.updateheader.bind(this);\n    this.updateimg = this.updateimg.bind(this);\n    this.checkcondutions = this.checkcondutions.bind(this);\n    this.savedata = this.savedata.bind(this);\n  }\n\n\n  componentWillMount() {\n    if (this.props.match.params.id) {\n      let key = \"Editmessage\";\n      let editmessageST = localStorage.getItem(key);\n      if (editmessageST) {\n        let editmessageOB = JSON.parse(editmessageST);\n        this.setState({ description: editmessageOB.description });\n        this.setState({ header: editmessageOB.header });\n        this.setState({ color: editmessageOB.color });\n        this.setState({ isFav: editmessageOB.isFav });\n        this.setState({ icon: editmessageOB.icon });\n        this.setState({ favatfirst: editmessageOB.isFav });\n        this.setState({ itemID: this.props.match.params.id });\n        this.setState({ specialicon: editmessageOB.specialicon });\n      }\n    }\n  }\n\n  updatechosencolor(event) {\n    this.setState({ color: event.target.value });\n  }\n\n  addtofavorite() {\n    this.setState({ isFav: !this.state.isFav });\n  }\n\n  updatecolor(newcolor) {\n    this.setState({ color: newcolor });\n  }\n\n  updateheader(event) {\n    this.setState({ header: event.target.value });\n  }\n\n  updatetext(event) {\n    this.setState({ description: event.target.value });\n  }\n\n  checkcondutions() {\n    if (this.state.description.length > 10) {\n      alert(\"too many characters!\");\n    }\n  }\n\n  updateimg(iconimg) {\n    this.setState({ icon: iconimg });\n  }\n\n  savedata() {\n    let key = \"messages\";\n    let msg = {\n      header: this.state.header,\n      description: this.state.description,\n      isFav: this.state.isFav,\n      itemID: this.state.itemID,\n      icon: this.state.icon,\n      color: this.state.color\n    }\n    let messagesArr = [];\n    let tempmessage = [];\n    let messageST = localStorage.getItem(key);\n\n    if (messageST) {\n      let messagesOB = JSON.parse(messageST);\n      messagesArr = Object.keys(messagesOB).map(obj => messagesOB[obj]);\n    }\n\n    if (this.props.match.params.id) {\n      messagesArr.map(currmsg => {\n        if (currmsg.itemID == this.props.match.params.id) {\n          tempmessage.push(msg);\n        } else {\n          tempmessage.push(currmsg);\n        }\n      });\n      localStorage.setItem(key, JSON.stringify(tempmessage));\n    } else {\n      messagesArr.push(msg);\n      localStorage.setItem(key, JSON.stringify(messagesArr));\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n\n        <div className=\"container\">\n        \n          <div className=\"form-signin\">\n            <label for=\"exampleInputEmail1 text-right\">כותרת ההודעה:</label>\n            <input\n              type=\"text\"\n              onChange={this.updateheader}\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"הכנס/י כותרת להודעה\"\n              value={this.state.header}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">על הכותרת להיות קצרה ותמציתית.</small>\n          </div>\n          <br />\n\n          <div>\n            <label for=\"exampleInputPassword1\">תוכן ההודעה:</label>\n            <input\n              type=\"text\"\n              onChange={this.updatetext}\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n              placeholder=\"תוכן ההודעה\"\n              value={this.state.description}\n            />\n          </div>\n\n          <br />\n          <br />\n\n          <div class=\"row\">\n            <div class=\"col-11 text-center\">\n              <i style={{ color: this.state.color }} class={\"fas fa-\" + this.state.icon + \" fa-5x pull-left\"} /> <br />\n              <br />\n              <Link to={`/NewMessage/IconPage/${this.state.itemID}`}>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-info \">\n                  <i class=\"fas fa-pencil-alt\"></i>\n                  שנה/י אייקון\n                </button>\n              </Link>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <br />\n            <Colors updatecolor={this.updatecolor} />\n            <small id=\"emailHelp\" className=\"form-text text-muted text-center \">ביכולתך לבחור בצבע מוכן מראש או לחילופין לבחור צבע מותאם אישית.</small>\n          </div>\n\n          <FavoriteButton favbutt={this.state.isFav} onChange={this.addtofavorite} />\n\n        </div>\n\n\n        <div id=\"pictures\">\n          <div id=\"deafultimg\">\n            <Icons updateimg={this.updateimg} />\n          </div>\n        </div>\n\n        <Link to=\"/\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-secondary btn-lg btn-block\"\n            onClick={this.savedata}>\n            הוסף\n          </button>\n        </Link>\n\n      </div>\n    );\n  }\n}\n\nexport default NewMessage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\n\nReactDOM.render((\n    <HashRouter>\n      <App />\n    </HashRouter>\n  \n    \n  ), document.getElementById('root'));\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n serviceWorker.unregister();\n\n\n\n\n\n"],"sourceRoot":""}