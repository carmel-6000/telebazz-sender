{"version":3,"sources":["images/color-picker.png","scenes/NavBar.js","scenes/icon_page/iconsObj.js","scenes/icon_page/Filter.js","scenes/icon_page/Icon.js","scenes/icon_page/Icons.js","scenes/icon_page/IconPage.js","scenes/home_page/MsgCtrlButtons.js","scenes/home_page/Message.js","scenes/InternalStorage.js","scenes/home_page/HomePage.js","scenes/message_page/Colors.js","scenes/message_page/FavoriteButton.js","scenes/message_page/MessagePage.js","scenes/send_page/char_to_binary.js","scenes/send_page/Sound.js","scenes/send_page/BinaryBitsSender.js","scenes/send_page/SendPage.js","App.js","serviceWorker.js","stores/index.js","stores/MessageSending.store.js","stores/Settings.store.js","index.js"],"names":["module","exports","__webpack_require__","p","languages","require","NavBar","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","backClick","bind","assertThisInitialized","history","location","pathname","includes","goBack","replace","displayPageName","pageName","Settings","language","newMsgTitle","editMsgTitle","chooseIconTitle","sendingMsgTitle","undefined","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","Component","iconsObj","animals","dangers","religion","medicine","food","people","places","objects","hobbies","time","vehicles","chores","Filter","filterCategory","event","checked","target","categoryID","id","categoryFilter","updateCategoryFilter","concat","toConsumableArray","setState","currentIndex","findIndex","element","updatedCategoryFilter","splice","console","log","category","checkedCategory","state","onChange","htmlFor","Icon","_Component","apply","arguments","inherits","createClass","key","value","setIcon","iconimage","Icons","showIcons","map","icon","i","Icon_Icon","saveNewIcon","length","keys","checkCategoryFilter","IconPage","chosenIcon","showMenu","closeMenu","match","params","currmessST","localStorage","getItem","currmessOB","JSON","parse","setItem","stringify","_this2","preventDefault","document","addEventListener","_this3","dropdownMenu","contains","removeEventListener","_this4","scenes_NavBar","iconQuestionTitle","filterIcons","ref","icon_page_Filter","Icons_Icons","Link","to","continue","MsgCtrlButtons","itemID","editmessage","editMsgBtn","e","deletemessage","isFav","deleteMsgBtn","changelocation","removeFavsBtn","addFavsBtn","Message","MessageSending","messageSending","style","color","header","sendMessage","home_page_MsgCtrlButtons","scenes_InternalStorage","getSampleFile","fileURL","fileName","fetch","then","response","blob","file","saveFile","fileContent","cb","window","requestFileSystem","LocalFileSystem","PERSISTENT","fs","root","getFile","create","exclusive","fileEntry","createWriter","fileWriter","onwriteend","onerror","toString","write","err","readFile","reader","FileReader","onloadend","result","readAsText","HomePage","initializeUserData","Messages","saveMessagesToInternalStorage","updatemessages","InternalStorage","MESSAGES_FILE","initializeInternalStorage","userData","messages","sendMsg","currMsg","assign","msg","push","editMsg","Itemid","favmessages","regmessages","forEach","message","getMessage","home_page_Message","myFavsTitle","textAlign","myMessagesTitle","createMessage","deafultcolors","colorclass","colorvalue","Colors","currcolor","Colors_Color","onclicker","updatecolor","Color","FavoriteButton","favbutt","addToFavs","MessagePage","updateLocalStorage","messageOB","saveMessageData","messagesArr","tempmessage","messageExists","currmsg","alert","msgExistsAlert","_a","updateInfoEvent","defineProperty","updateInfoValue","addtofavorite","onChangeTextInput","allLetter","test","favatfirst","Date","now","messageST","theMsgSubtitle","placeholder","enterMsgPlaceholder","maxLength","msgRequirements","changeIcon","Colors_Colors","src","colorSmallText","message_page_FavoriteButton","addMsg","updateMsg","disabled","char_to_binary","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","*","#","Sound","context","oscillator","createOscillator","gainNode","createGain","connect","destination","onended","init","frequency","start","stop","BinaryBitsSender","TIME_INTERVAL","textToBinary","messageUpper","textInput","toUpperCase","codeString","playBit","currentChar","note","audioContext","currentTime","play","FREQUENCY_RATE","onEnded","setTimeout","playBinarySequence","isDone","currentBit","iterateChars","doneSendingMessage","generateBinarySequence","AudioContext","webkitAudioContext","SendPage","indexOf","msgSendingText","msgSentText","send_page_BinaryBitsSender","App","HashRouter","Switch","Route","exact","path","component","Boolean","hostname","stores","observable","startApp","ReactDOM","render","index_module","src_App_0","getElementById","cordova","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3b0844d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/color-picker.0fc36b2a.png\";","import React, { Component } from 'react';\n\n//mobx \nimport { observer } from 'mobx-react';\n\nconst languages = require('./Languages.json');\n\n@observer(['MessageSending', 'Settings'])\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.backClick = this.backClick.bind(this);\n    // this.settingsClick = this.settingsClick.bind(this);\n  }\n\n  backClick() {\n    if (this.props.history.location.pathname.includes(\"IconPage\")) {\n      this.props.history.goBack();\n    } else if (this.props.history.location.pathname.includes(\"NewMessage\")\n      || this.props.history.location.pathname.includes(\"EditMessage\")\n      // || this.props.history.location.pageName.includes(\"LanguageSettings\")\n    ) {\n      this.props.history.replace(\"/\");\n    } else {\n      this.props.history.goBack();\n    }\n  }\n\n  // settingsClick() {\n  //   window.location = \"/#/LanguageSettings\";\n  // }\n\n  render() {\n    //define the name of the page to show on the top navigation bar\n    let pageName = this.props.pageName;\n    let displayPageName = '';\n    switch (pageName) {\n      case \"HomePage\":\n        displayPageName = \"Telebuzz\";\n        break;\n      case \"NewMessage\":\n        displayPageName = languages[this.props.Settings.language].newMsgTitle;\n        break;\n      case \"EditMessage\":\n        displayPageName = languages[this.props.Settings.language].editMsgTitle;\n        break;\n      case \"IconPage\":\n        displayPageName = languages[this.props.Settings.language].chooseIconTitle;\n        break;\n      case \"SendPage\":\n        displayPageName = languages[this.props.Settings.language].sendingMsgTitle;\n        break;\n      // case \"LanguageSettings\":\n      //   displayPageName = \"Language Settings\";\n      //   break;\n      default:\n        displayPageName = \"\";\n    }\n\n    if (this.props.history === undefined) {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\">\n            {/* data-sidebarClass=\"navbar-dark bg-dark\"> */}\n            <div className=\"navbar-brand\" href=\"#\">{displayPageName}</div>\n\n            {/* <button\n              className=\"navbar-toggler leftNavbarToggler\"\n              type=\"button\">\n              <div\n                onClick={this.settingsClick}\n                className=\"text-light\">\n                <i className=\"fas fa-cog\" />\n              </div>\n            </button> */}\n\n          </nav>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\" >\n            {/* data-sidebarClass=\"navbar-dark bg-dark\"> */}\n            <div className=\"navbar-brand\" href=\"#\">{displayPageName}</div>\n            <button\n              className=\"navbar-toggler leftNavbarToggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarsExampleDefault\"\n              aria-controls=\"navbarsExampleDefault\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\">\n              <span>\n                <div\n                  onClick={this.backClick}\n                  className=\"text-light\">\n                  <i className=\"fas fa-arrow-left\" />\n                </div>\n              </span>\n            </button>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default NavBar;","export const iconsObj = {\n    \"animals\": [\"cat\", \"dog\", \"horse\", \"bug\"],\n    \"dangers\": [\"fire\", \"bolt\", \"bomb\", \"ban\", \"hand-paper\"],\n    \"religion\": [\"menorah\", \"synagogue\"],\n    \"medicine\": [\"capsules\", \"diagnoses\"],\n    \"food\": [\"lemon\", \"carrot\", \"drumstick-bite\", \"cookie\", \"beer\", \"birthday-cake\"],\n    \"people\": [\"user-injured\", \"user-tie\", \"blind\", \"heart\"],\n    \"places\": [\"university\", \"hospital\", \"home\"],\n    \"objects\": [\"bed\", \"bell\", \"camera\", \"mobile-alt\"],\n    \"hobbies\": [\"basketball-ball\", \"book-reader\", \"bowling-ball\", \"chess\"],\n    \"time\": [\"calendar-week\", \"battery-half\", \"clock\"],\n    \"vehicles\": [\"bus\", \"bicycle\", \"car\", \"motorcycle\"],\n    \"chores\": [\"broom\", \"cart-plus\", \"chalkboard-teacher\"]\n}\n\nexport default iconsObj;","import React, { Component } from 'react';\nimport './IconPage.css';\n\n//mobx \nimport { observer } from 'mobx-react';\n\nconst languages = require('./../Languages.json');\n\n@observer(['Settings'])\nclass Filter extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            checked: false\n        }\n    }\n\n    filterCategory = (event) => {\n        let checked = event.target.checked;\n        let categoryID = event.target.id;\n        let categoryFilter = this.props.categoryFilter;\n\n        //need to check category\n        if (checked && !categoryFilter.includes(categoryID)) {\n            this.props.updateCategoryFilter([...this.props.categoryFilter, categoryID]);\n            this.setState({checked: true});\n        } else { //need to uncheck category\n            let currentIndex = categoryFilter.findIndex((element) => {\n                return element === categoryID;\n            });\n\n            if (currentIndex < 0) {\n                this.setState({checked: true});\n                return;\n            } else {\n                let updatedCategoryFilter = this.props.categoryFilter;\n                updatedCategoryFilter.splice(currentIndex, 1);\n                this.props.updateCategoryFilter(updatedCategoryFilter);\n                this.setState({checked: false});\n            }\n        }\n        console.log(\"category: \", this.props.category);\n    }\n\n    //checks if the category chosen is included in the array of checked categories\n    checkedCategory = () => {\n        if (this.props.categoryFilter.includes(this.props.category)) {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n        return (\n            <div className=\"custom-control custom-checkbox dropdown-item\">\n                <input\n                    type=\"checkbox\"\n                    id={this.props.category}\n                    className=\"custom-control-input\"\n                    onChange={this.filterCategory}\n                    //if the category is in the array of checked categories - true, else - put it's value from the state\n                    checked={this.checkedCategory() || this.state.checked}\n                />\n                <label\n                    className=\"custom-control-label pull-right\"\n                    htmlFor={this.props.category}>\n                    <p className=\"icon-name\" htmlFor={this.props.category}>\n                        {languages[this.props.Settings.language][this.props.category]}\n                    </p>\n                </label>\n            </div>\n        );\n    }\n}\n\nexport default Filter;","import React, { Component } from 'react';\nimport './IconPage.css';\n\nexport class Icon extends Component {\n    render() {\n        return (\n            <button\n                onClick={this.props.setIcon}\n                id={this.props.category}\n                type=\"button\"\n                className=\"btn btn-default iconButton\" >\n\n                <i className={\"fas fa-\" + this.props.iconimage + \" fa-3x\"}></i>\n            </button>\n        );\n    }\n}\n\nexport default Icon;","import React, { Component } from 'react';\nimport './IconPage.css';\nimport iconsObj from './iconsObj';\nimport { Icon } from './Icon';\n\nexport class Icons extends Component {\n    checkCategoryFilter() {\n        let showIcons =\n            (category) => iconsObj[category].map(\n                (icon, i) =>\n                    <Icon\n                        key={i} //each child in an array or iterator should have a unique key prop\n                        iconimage={icon}\n                        category={category}\n                        setIcon={() => this.props.setIcon(icon)}\n                        saveNewIcon={() => this.props.saveNewIcon()}\n                    />\n            );\n\n        if (this.props.categoryFilter.length === 0) {\n            return (Object.keys(iconsObj).map(showIcons));\n        } else {\n            return (this.props.categoryFilter.map(showIcons));\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.checkCategoryFilter()}\n            </div>\n        );\n    }\n}\n\nexport default Icons;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport NavBar from '../NavBar';\nimport iconsObj from './iconsObj';\nimport Filter from './Filter';\nimport { Icons } from './Icons';\nimport './IconPage.css';\n\n//mobx \nimport { observer } from 'mobx-react';\n\nconst languages = require('./../Languages.json');\n\n@observer(['Settings'])\nclass IconPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryFilter: [], //the icons that were chosen in the filter are added to this array\n      chosenIcon: \"\",\n      showMenu: false\n    }\n\n    // this.filterCategory = this.filterCategory.bind(this);\n    this.setIcon = this.setIcon.bind(this);\n    this.saveNewIcon = this.saveNewIcon.bind(this);\n    this.showMenu = this.showMenu.bind(this);\n    this.closeMenu = this.closeMenu.bind(this);\n  }\n\n  updateCategoryFilter = (categoryFilter) => {\n    this.setState({ categoryFilter });\n    console.log(\"categoryFilter: \", categoryFilter);\n    console.log(\"iconsObj: \", iconsObj);\n  }\n\n  saveNewIcon() {\n    const key = this.props.match.params.id ? \"EditMessage\" : \"NewMessage\";\n    let currmessST = localStorage.getItem(key);\n    let currmessOB = JSON.parse(currmessST);\n\n    if (currmessOB == \"\")\n      currmessOB = {};\n    if (this.state.chosenIcon != \"\") {\n      currmessOB.icon = this.state.chosenIcon;\n    }\n\n    localStorage.setItem(key, JSON.stringify(currmessOB));\n    this.setIcon(\"\");\n  }\n\n  setIcon(chosenIcon) {\n    this.setState({ chosenIcon });\n  }\n\n  showMenu(event) {\n    event.preventDefault();\n\n    this.setState({ showMenu: true }, () => {\n      document.addEventListener('click', this.closeMenu);\n    });\n  }\n\n  closeMenu(event) {\n    if (!this.dropdownMenu.contains(event.target)) {\n      this.setState({ showMenu: false }, () => {\n        document.removeEventListener('click', this.closeMenu);\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar pageName=\"IconPage\" history={this.props.history} />\n        <div className=\"container\">\n          <h3>{languages[this.props.Settings.language].iconQuestionTitle}</h3>\n          <div className=\"dropdown show text-center\">\n            <div>\n              <button\n                className=\"btn btn-secondary dropdown-toggle \"\n                id=\"dropdownFilterIcon\"\n                onClick={this.showMenu}>\n                {languages[this.props.Settings.language].filterIcons}\n              </button>\n\n              {this.state.showMenu\n                ? <div className=\"dropdown-filter-menu\"\n                  ref={(element) => {\n                    this.dropdownMenu = element;\n                  }}\n                >\n                  {Object.keys(iconsObj).map((category, i) =>\n                    <Filter\n                      key={i} //each child in an array or iterator should have a unique key prop\n                      categoryFilter={this.state.categoryFilter}\n                      updateCategoryFilter={this.updateCategoryFilter}\n                      category={category}\n                    />\n                  )}\n                </div>\n                : null\n              }\n            </div>\n          </div>\n\n          <br />\n\n          <div className=\"scrollIcons\">\n            {/* <div className=\"row\"> */}\n              {/* <div className=\"col-sm\"> */}\n                <Icons\n                  categoryFilter={this.state.categoryFilter}\n                  setIcon={this.setIcon}\n                  saveNewIcon={this.saveNewIcon}\n                />\n              {/* </div> */}\n            {/* </div> */}\n          </div>\n          <br />\n          <Link to={`${this.props.match.params.id ? `/EditMessage/${this.props.match.params.id}` : '/NewMessage'}`}>\n            <button\n              type=\"button\"\n              className=\"btn btn-info btn-lg btn-block\"\n              onClick={this.saveNewIcon}>\n              {languages[this.props.Settings.language].continue}\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IconPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomePage.css';\n\n//mobx \nimport { observer } from 'mobx-react';\n\nconst languages = require('./../Languages.json');\n\n@observer(['Settings'])\nclass MsgCtrlButtons extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showMenu: false,\n        };\n\n        this.showMenu = this.showMenu.bind(this);\n        this.closeMenu = this.closeMenu.bind(this);\n    }\n\n    showMenu(event) {\n        event.preventDefault();\n\n        this.setState({ showMenu: true }, () => {\n            document.addEventListener('click', this.closeMenu);\n        });\n    }\n\n    closeMenu() {\n        this.setState({ showMenu: false }, () => {\n            document.removeEventListener('click', this.closeMenu);\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <button\n                    id=\"msg-ctrl-btn\"\n                    onClick={this.showMenu}\n                    className=\"btn btn-secondary dropdown-toggle\"\n                    type=\"button\"\n                >\n                    {/* <i class=\"fas fa-ellipsis-v\"></i> */}\n                </button>\n\n                {this.state.showMenu\n                    ?\n                    <div className=\"dropdown-message-menu\">\n                        <Link to={`/EditMessage/${this.props.itemID}`}>\n                            <button\n                                onClick={() =>\n                                    this.props.editmessage(this.props.itemID)}\n                                className=\"dropdown-item btn btn-primary dropdown-msg-control-item\" >\n                                {languages[this.props.Settings.language].editMsgBtn}\n                            </button>\n                        </Link>\n\n                        <button\n                            onClick={(e) =>\n                                this.props.deletemessage(e, this.props.itemID, this.props.isFav)}\n                            className=\"dropdown-item btn btn-primary dropdown-msg-control-item\" >\n                            {languages[this.props.Settings.language].deleteMsgBtn}\n                        </button>\n                        {this.props.isFav ?\n                            <button\n                                onClick={(e) =>\n                                    this.props.changelocation(e, this.props.itemID, this.props.isFav)}\n                                className=\"dropdown-item btn btn-primary dropdown-msg-control-item\" >\n                                {languages[this.props.Settings.language].removeFavsBtn}\n                            </button>\n                            :\n                            <button\n                                onClick={(e) =>\n                                    this.props.changelocation(e, this.props.itemID, this.props.isFav)}\n                                className=\"dropdown-item btn btn-primary dropdown-msg-control-item\" >\n                                {languages[this.props.Settings.language].addFavsBtn}\n                            </button>\n                        }\n                    </div>\n                    : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default MsgCtrlButtons;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport MsgCtrlButtons from \"./MsgCtrlButtons\";\nimport './HomePage.css';\n\n//mobx \nimport { observer } from 'mobx-react';\n\n@observer(['MessageSending'])\nclass Message extends Component {\n    render() {\n        return (\n            <div className=\"list-group\">\n                {this.props.MessageSending.messageSending ?\n                    //if message is sending - the user connot send another message at the same time\n                    <div className=\"list-group\">\n                        <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                            <div className=\"message-container d-flex w-100 justify-content-between\">\n                                <i style={{ color: this.props.color }} className={\"fas fa-\" + this.props.icon + \" fa-3x\"} />\n                                <h4 className=\"mb-3 message-text\">{this.props.header} </h4>\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    // if message not sending - use link to send the message\n                    <Link\n                        to={`/SendPage/${this.props.itemID}`}\n                        onClick={() => {\n                            this.props.MessageSending.messageSending = true;\n                            this.props.sendMessage(this.props.itemID);\n                        }}\n                    >\n                        <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                            <div className=\"message-container d-flex w-100 justify-content-between\">\n                                <i style={{ color: this.props.color }} className={\"fas fa-\" + this.props.icon + \" fa-3x\"} />\n                                <h4 className=\"mb-3 message-text\">{this.props.header} </h4>\n                            </div>\n                        </div>\n                    </Link>\n                }\n\n                <MsgCtrlButtons\n                    itemID={this.props.itemID}\n                    deletemessage={this.props.deletemessage}\n                    editmessage={this.props.editmessage}\n                    isFav={this.props.isFav}\n                    changelocation={this.props.changelocation}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Message;","class InternalStorage {\n\n    //WRITE TO FILE SYSTEM\n\n    getSampleFile = (fileURL, fileName) => {\n        console.log(\"fileURL\", fileURL);\n        // get image from url\n        fetch(fileURL)\n            //turn the image into binary information (similar to base 64)\n            .then(response => response.blob())\n            .then(file => {\n                // Then create a local URL for that image and print it\n\n                console.log(\"image?!\", file);\n                this.saveFile(file, fileName);\n            })\n    }\n\n    saveFile = (fileContent, fileName, cb) => {\n        //access phone’s file system\n        window.requestFileSystem(window.LocalFileSystem.PERSISTENT, 0, (fs) => {\n\n            // console.log('Request file system succeed, file system open: ' + fs.name);\n            //create new file in the file system which is accessible to this cordova app only\n\n            fs.root.getFile(fileName, { create: true, exclusive: false }, (fileEntry) => {\n                // console.log(\"fileEntry is file?\" + fileEntry.isFile.toString());\n                //erite to that file we have created\n                fileEntry.createWriter(fileWriter => {\n                    fileWriter.onwriteend = () => {\n                        // console.log(\"Successful file write...\");\n                        if(cb && typeof(cb) == \"function\"){\n                            cb(fileContent);\n                        }\n                    };\n                    fileWriter.onerror = e => {\n                        console.log(\"Failed file write: \" + e.toString());\n                    };\n\n                    fileWriter.write(fileContent);\n                });\n\n            }, (err) => {\n                console.log(\"Error creating a new file, with err\", err);\n            });\n\n        }, (err) => {\n            console.log(\"Error requesting file system ?! with err\", err);\n        });\n    }\n\n    //READ FROM FILE SYSTEM\n\n    readFile = (fileName, cb) => {\n        //accessing file system\n        window.requestFileSystem(window.LocalFileSystem.PERSISTENT, 0, (fs) => {\n            // console.log('Request file system succeed, file system open: ' + fs.name);\n            //get wanted file\n\n            fs.root.getFile(fileName, { create: true, exclusive: false }, fileEntry => {\n                \n                //Do something with the file/image (ex. save to state)\n\n                // var self = this;\n\n                //var displayImage = function (imageContent) {\n                //console.log(\"fileEntry on displayImage\", fileEntry);\n                // localStorage.setItem(\"messages\", JSON.stringify(imageContent));\n                // self.setState({ loadedImg: fileEntry.nativeURL });\n                //}\n\n                fileEntry.file(function (file) {\n\n                    let reader = new FileReader();\n\n                    reader.onloadend = () => {\n                        // console.log(\"Successful file read: \" + reader.result);\n                        //displayImage(reader.result);\n                        cb(reader.result);\n                    };\n\n                    reader.readAsText(file);\n\n                }, err => {\n                    console.log(\"Could not read file, err: \", err);\n\n                });\n\n            });\n\n        });\n    }\n}\n\nexport default new InternalStorage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Message from \"./Message\";\nimport NavBar from '../NavBar.js';\nimport InternalStorage from \"../InternalStorage.js\";\n\n//css\nimport \"./HomePage.css\";\n\n//mobx \nimport { observer } from 'mobx-react';\n\nconst languages = require('./../Languages.json');\n\n@observer(['MessageSending', 'Settings'])\nclass HomePage extends Component {\n\n  static MESSAGES_FILE = \"UserData.json\"\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      MessageSending: this.props.MessageSending.messageSending //true or false\n    }\n\n    this.deletemessage = this.deletemessage.bind(this);\n    this.editmessage = this.editmessage.bind(this);\n    this.changelocation = this.changelocation.bind(this);\n  }\n\n  initializeUserData = () => {\n    return {\n      Messages: []\n    };\n  }\n\n  saveMessagesToInternalStorage = (updatemessages) => {\n    InternalStorage.saveFile({ Messages: updatemessages }, HomePage.MESSAGES_FILE);\n  }\n\n  initializeInternalStorage = () => {\n\n    InternalStorage.readFile(HomePage.MESSAGES_FILE, (userData) => {\n      if (userData == \"\") {\n        console.log(\"saving info to UserData.json\");\n        userData = this.initializeUserData();\n        InternalStorage.saveFile(userData, HomePage.MESSAGES_FILE);\n      } else {\n        userData = JSON.parse(userData);\n        this.setState({ messages: userData.Messages });\n      }\n    });\n\n    // localStorage.setItem(\"EditMessage\", JSON.stringify(\"\"));\n    // localStorage.setItem(\"NewMessage\", JSON.stringify(\"\"));\n    // localStorage.setItem(\"SendMessage\", JSON.stringify(\"\"));\n  }\n\n  componentWillMount() {\n\n    this.initializeInternalStorage();\n\n    // this.setState({\n    //   messages:\n    //     [{ header: \"a\", isFav: false, itemID: 1546962908635111, icon: \"ghost\" },\n    //     { header: \"foo foo foo\", isFav: true, itemID: 1546962908635, icon: \"ghost\" },\n    //     { header: \"lets check this out\", isFav: false, itemID: 1546162908635, icon: \"ghost\" }\n    //     ]\n    // });\n  }\n\n  componentDidMount() {\n    localStorage.setItem(\"EditMessage\", JSON.stringify(\"\"));\n    localStorage.setItem(\"NewMessage\", JSON.stringify(\"\"));\n    localStorage.setItem(\"SendMessage\", JSON.stringify(\"\"));\n  }\n\n  deletemessage(event, itemID, isFav) {\n    event.preventDefault();\n\n    let messages = this.state.messages;\n    let updatemessages = [];\n\n    messages.map(msg => {\n      if (msg.itemID !== itemID) {\n        updatemessages.push(msg);\n      }\n    });\n\n    this.saveMessagesToInternalStorage(updatemessages);\n    this.setState({ messages: updatemessages });\n  }\n\n  editmessage(itemID) {\n    let key = \"EditMessage\";\n    let editMsg = {};\n\n    this.state.messages.map(currMsg => {\n      if (currMsg.itemID === itemID) {\n        editMsg = Object.assign({}, currMsg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(editMsg));\n  }\n\n\n  //this function changes between favorite messages and regular messages\n  changelocation(event, Itemid, isFav) {\n    event.preventDefault();\n\n    let messages = this.state.messages;\n    let updatemessages = [];\n\n    messages.map(msg => {\n      updatemessages.push(msg);\n      if (msg.itemID === Itemid) {\n        updatemessages[updatemessages.length - 1].isFav = !isFav;\n      }\n    });\n\n    this.saveMessagesToInternalStorage(updatemessages);\n    this.setState({ messages: updatemessages });\n  }\n\n  sendMessage = (itemID) => {\n    console.log(\"is send message launched?!\", itemID);\n    let key = \"SendMessage\";\n    let sendMsg = {};\n\n    this.state.messages.map(currMsg => {\n      if (currMsg.itemID === itemID) {\n        sendMsg = Object.assign({}, currMsg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(sendMsg));\n  }\n\n  render() {\n    let favmessages = [];\n    let regmessages = [];\n    let msgkeys = Object.keys(this.state.messages)\n\n    msgkeys.forEach(key => {\n      let message = this.state.messages[key];\n\n      let getMessage = (\n        <Message\n          key={key}\n          isFav={message.isFav}\n          itemID={message.itemID}\n          header={message.header}\n          icon={message.icon}\n          color={message.color}\n          deletemessage={this.deletemessage}\n          editmessage={this.editmessage}\n          changelocation={this.changelocation}\n          sendMessage={this.sendMessage}\n        />);\n\n      if (message.isFav) {\n        favmessages.push(getMessage);\n      } else {\n        regmessages.push(getMessage);\n      }\n    });\n\n    return (\n      // <div style={{ textAlign: \"right\" }}>\n      <div>\n        {/* <Nav /> */}\n        <NavBar pageName=\"HomePage\" />\n\n        {/* if there are no messages at all */}\n        {!favmessages[0] && !regmessages[0] ?\n          <Link to=\"/NewMessage\">\n            <button\n              type=\"button\"\n              className=\"new-message-btn\">\n              <i className=\"fas fa-plus\" />\n            </button>\n          </Link>\n          : null\n        }\n\n        {/* if there are no favorite messages */}\n        {favmessages[0] ?\n          <div>\n            <p className=\"main-title-messages\">\n              {languages[this.props.Settings.language].myFavsTitle}\n            </p>\n            <div style={{ textAlign: \"center\" }}>\n              {favmessages}\n            </div>\n          </div>\n          : <div></div>\n        }\n\n        {/* if there are no regular messages */}\n        {regmessages[0] ?\n          <div>\n            <p className=\"main-title-messages\">\n              {languages[this.props.Settings.language].myMessagesTitle}\n            </p>\n            <div style={{ textAlign: \"center\" }} >\n              {regmessages}\n            </div>\n          </div>\n          : <div></div>\n        }\n\n        <div className=\"container\">\n          <Link to=\"/NewMessage\">\n            <button\n              id=\"bottom-new-message-btn\"\n              type=\"button\"\n              className=\"btn btn-secondary btn-lg fixed-bottom btn-block\">\n              {/* הוסף/י הודעה */}\n              {languages[this.props.Settings.language].createMessage}\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport './MessagePage.css';\n\nlet deafultcolors = [\n  {\n    colorclass: \"dark\",\n    colorvalue: \"#343a40\"\n  },\n  {\n    colorclass: \"primary\",\n    colorvalue: \"#007bff\"\n\n  },\n  {\n    colorclass: \"success\",\n    colorvalue: \"#28a745\"\n  },\n  {\n\n    colorclass: \"info\",\n    colorvalue: \"#17a2b8\"\n  },\n  {\n    colorclass: \"warning\",\n    colorvalue: \"#ffc107\"\n  },\n  {\n    colorclass: \"danger\",\n    colorvalue: \"#dc3545\"\n  }\n];\n\nexport class Colors extends Component {\n  render() {\n    return (\n      <div className=\"colors\">\n        {deafultcolors.map((currcolor, i) =>\n          <Color\n            key={i} //each child in an array or iterator should have a unique key prop\n            colorclass={currcolor.colorclass}\n            colorvalue={currcolor.colorvalue}\n            onclicker={() => this.props.updatecolor(currcolor.colorvalue)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Color extends Component {\n  render() {\n    return (\n      <button\n        id=\"color\"\n        type=\"button\"\n        onClick={this.props.onclicker}\n        className={\"btn btn-circle btn-\" + this.props.colorclass}\n      />\n    );\n  }\n}","import React, { Component } from 'react';\nimport './MessagePage.css';\n\n//mobx \nimport { observer } from 'mobx-react';\n\nconst languages = require('./../Languages.json');\n\n@observer(['Settings'])\nclass FavoriteButton extends Component {\n\n  render() {\n    return (\n      // <div>\n      //   <button className=\"add-to-favorites\">הוספה למועדפים:</button>\n      // </div>\n      <div className=\"custom-control custom-checkbox\">\n        <input\n          type=\"checkbox\"\n          className=\"custom-control-input\"\n          id=\"defaultUnchecked\"\n          checked={this.props.favbutt}\n          onChange={this.props.onChange}\n        />\n        <label\n          className=\"custom-control-label pull-right\"\n          htmlFor=\"defaultUnchecked\">\n          <p className=\"add-to-favorites-lable\">\n            {languages[this.props.Settings.language].addToFavs}\n          </p>\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default FavoriteButton;","import React, { Component } from 'react';\nimport './MessagePage.css';\nimport { Link } from 'react-router-dom';\nimport NavBar from \"../NavBar\";\nimport { Colors } from \"./Colors\";\nimport FavoriteButton from \"./FavoriteButton\";\nimport InternalStorage from \"../InternalStorage.js\";\nimport HomePage from \"./../home_page/HomePage\";\n\n//mobx \nimport { observer } from 'mobx-react';\n\nconst languages = require('./../Languages.json');\n\n@observer(['Settings'])\nclass MessagePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            header: '',\n            color: 'null',\n            isFav: false,\n            icon: 'ghost',\n            favatfirst: false,\n            itemID: Date.now(),\n            key: \"\" //\"NewMessage\" || \"EditMessage\"\n        };\n    }\n\n    // Gets the values from the Local Storage\n    componentWillMount() {\n        let key = \"NewMessage\";\n        if (this.props.match.params.id) {\n            key = \"EditMessage\";\n        }\n\n        let messageST = localStorage.getItem(key);\n        if (messageST) {\n            let messageOB = JSON.parse(messageST);\n            this.setState({\n                header: messageOB.header,\n                color: messageOB.color,\n                isFav: messageOB.isFav || this.state.isFav,\n                icon: messageOB.icon || this.state.icon,\n                favatfirst: messageOB.isFav,\n                itemID: this.props.match.params.id ? this.props.match.params.id : Date.now(),\n                key: key //\"NewMessage\" || \"EditMessage\"\n            });\n        }\n    }\n\n    // Adding Event Listener so the storage will be updated\n    // if the component will unmount\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.updateLocalStorage);\n    }\n\n    componentWillUnmount() {\n        this.updateLocalStorage();\n        window.removeEventListener('beforeunload', this.updateLocalStorage);\n    }\n\n    updateLocalStorage = () => {\n        let messageOB = {\n            header: this.state.header,\n            color: this.state.color,\n            isFav: this.state.isFav,\n            icon: this.state.icon,\n            itemID: this.state.itemID\n        };\n\n        localStorage.setItem(this.state.key, JSON.stringify(messageOB));\n    }\n\n    saveMessageData = () => {\n        let msg = {\n            header: this.state.header,\n            isFav: this.state.isFav,\n            itemID: this.state.itemID,\n            icon: this.state.icon,\n            color: this.state.color\n        }\n        let messagesArr = [];\n        let tempmessage = [];\n\n        InternalStorage.readFile(HomePage.MESSAGES_FILE, (userData) => {\n            userData = JSON.parse(userData);\n            messagesArr = userData.Messages;\n\n            let messageExists = false;\n\n            //check if the message header already exists in the saved messages\n            messagesArr.map(currmsg => {\n                if (currmsg.header === this.state.header && this.state.key === \"NewMessage\") {\n                    messageExists = true;\n                }\n            });\n\n            //if the message exists - don't add it again\n            if (messageExists) {\n                alert(languages[this.props.Settings.language].msgExistsAlert);\n                this.props.history.push('/');\n            } else {\n                //if the message has an id then it is an \"EditMessage\" \n                if (this.props.match.params.id) {\n                    messagesArr.map(currmsg => {\n                        if (currmsg.itemID == this.props.match.params.id) {\n                            tempmessage.push(msg);\n                        } else {\n                            tempmessage.push(currmsg);\n                        }\n                    });\n                    messagesArr = tempmessage;\n                } else { //new message\n                    messagesArr.push(msg);\n                }\n\n                InternalStorage.saveFile({ Messages: messagesArr }, HomePage.MESSAGES_FILE, (_a) => {\n                    this.props.history.push(\"/\");\n                });\n            }\n        })\n\n    }\n\n    updateInfoEvent = (key, event) => {\n        this.setState({ [key]: event.target.value });\n    }\n\n    updateInfoValue = (key, value) => {\n        this.setState({ [key]: value });\n    }\n\n    addtofavorite = () => {\n        this.setState({ isFav: !this.state.isFav });\n    }\n\n    onChangeTextInput = (event) => {\n        if (!this.allLetter(event.target.value)) {\n            event.target.value = '';\n        } else {\n            this.updateInfoEvent(\"header\", event);\n            event.target.value = this.state.header;\n        }\n    }\n\n    allLetter = (value) => {\n        var letters = /^\\s*[A-Za-z]+\\s*$/;\n        \n        return letters.test(value)\n            ? true\n            : false;\n    }\n\n\n    render() {\n        return (\n\n            <div>\n                <NavBar pageName={this.state.key} history={this.props.history} />\n\n                <div className=\"container\">\n\n                    <label htmlFor=\"message-title text-right\">\n                        {languages[this.props.Settings.language].theMsgSubtitle}\n                    </label>\n                    <input\n                        type=\"text\"\n                        onChange={(event) => {\n                            // this.onChangeTextInput(event); //only letters in english - theres a problem with it\n                            this.updateInfoEvent(\"header\", event);\n                        }}\n                        className=\"form-control\"\n                        id=\"message-title\"\n                        placeholder={languages[this.props.Settings.language].enterMsgPlaceholder}\n                        value={this.state.header}\n                        maxLength=\"30\"\n                    />\n                    <small className=\"form-text text-muted\">\n                        {languages[this.props.Settings.language].msgRequirements}\n                    </small>\n                    <br />\n\n                    <div className=\"row\">\n                        <div className=\"col-11 text-center\">\n                            <i style={{ color: this.state.color }} className={\"fas fa-\" + this.state.icon + \" fa-5x pull-left\"} />\n                            <br /><br />\n\n                            <Link to={`/${this.state.key}/IconPage${this.state.key === \"EditMessage\" ? \"/\" + this.state.itemID : \"\"}`}>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-info \">\n                                    <i className=\"fas fa-pencil-alt\"></i>\n                                    {languages[this.props.Settings.language].changeIcon}\n                                </button>\n                            </Link>\n                        </div>\n                    </div>\n\n                    {/* the color picker */}\n\n                    <div className=\"colors-container\">\n                        <Colors updatecolor={(color) => this.updateInfoValue(\"color\", color)} />\n\n                        <div className=\"color-picker-container\">\n                            <img\n                                id=\"color-picker-img\"\n                                src={require('../../images/color-picker.png')}\n                            />\n                            <input\n                                id=\"color-picker\"\n                                className=\"btn-circle\"\n                                value=\"fff\"\n                                // value={this.state.color}\n                                onChange={(event) => this.updateInfoEvent(\"color\", event)}\n                                type=\"color\"\n                            />\n                        </div>\n                    </div>\n                    <small className=\"form-text text-muted text-center \">\n                        {languages[this.props.Settings.language].colorSmallText}\n                    </small>\n\n                    <br />\n\n                    <FavoriteButton favbutt={this.state.isFav} onChange={this.addtofavorite} />\n\n                </div>\n\n                {this.state.header ?\n                    <button\n                        type=\"submit\"\n                        className=\"submit-message-button btn btn-secondary btn-lg btn-block fixed-bottom\"\n                        onClick={this.saveMessageData}>\n                        {this.state.key === \"NewMessage\" ?\n                            languages[this.props.Settings.language].addMsg\n                            :\n                            languages[this.props.Settings.language].updateMsg\n                        }\n                    </button>\n                    : <button\n                        disabled\n                        type=\"submit\"\n                        className=\"submit-message-button btn btn-secondary btn-lg btn-block fixed-bottom\">\n                        {this.state.key === \"NewMessage\" ?\n                            languages[this.props.Settings.language].addMsg\n                            :\n                            languages[this.props.Settings.language].updateMsg\n                        }\n                    </button>\n                }\n            </div>\n        );\n    }\n}\n\nexport default MessagePage;","export const char_to_binary = {\n    //The numbers 1-26 in binary (for A-Z)\n    'A': \"00001\",\n    'B': \"00010\",\n    'C': \"00011\",\n    'D': \"00100\",\n    'E': \"00101\",\n    'F': \"00110\",\n    'G': \"00111\",\n    'H': \"01000\",\n    'I': \"01001\",\n    'J': \"01010\",\n    'K': \"01011\",\n    'L': \"01100\",\n    'M': \"01101\",\n    'N': \"01110\",\n    'O': \"01111\",\n    'P': \"10000\",\n    'Q': \"10001\",\n    'R': \"10010\",\n    'S': \"10011\",\n    'T': \"10100\",\n    'U': \"10101\",\n    'V': \"10110\",\n    'W': \"10111\",\n    'X': \"11000\",\n    'Y': \"11001\",\n    'Z': \"11010\",\n    ' ': \"@@@@@\",\n\n    //The numbers 31 and 0 (for * and #)\n    '*': '11111',\n    '#': '00000'\n\n    //The numbers 27-30 in binary (for 1-4)\n    // '1': '11011',\n    // '2': '11100',\n    // '3': '11101',\n    // '4': '11110'\n}\n\nexport default char_to_binary;","import BinaryBitsSender from \"./BinaryBitsSender\";\n\nclass Sound {\n    constructor(context) {\n        this.context = context;\n    }\n\n    init() {\n        this.oscillator = this.context.createOscillator();\n        this.gainNode = this.context.createGain();\n        this.oscillator.connect(this.gainNode);\n        this.gainNode.connect(this.context.destination);\n        this.oscillator.type = 'sine';\n    }\n\n    onEnded(cb) {\n        this.oscillator.onended = () => {\n            cb();\n        }\n    }\n\n    play(value, time) { //value- frequency, time- start time\n        this.init();\n        this.oscillator.frequency.value = value;\n        //this.gainNode.gain.setValueAtTime(1, this.context.currentTime);        \n        this.oscillator.start(time);\n        this.stop(time);\n    }\n\n    stop(time) {\n        //this.gainNode.gain.exponentialRampToValueAtTime(0.001, time + 1);\n        this.oscillator.stop(time + BinaryBitsSender.TIME_INTERVAL / 1000);\n    }\n}\n\nexport default Sound;","import React, { Component } from \"react\";\nimport char_to_binary from \"./char_to_binary\";\nimport { setTimeout } from \"timers\";\nimport Sound from \"./Sound\";\n//css\nimport \"./SendPage.css\";\n\nclass BinaryBitsSender extends Component {\n\n    static FREQUENCY_RATE = 18000;\n    static TIME_INTERVAL = 200;\n\n    constructor(props) {\n        super(props);\n\n        this.textInput = this.props.header;\n        this.codeString = \"\";\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    }\n\n    componentWillMount() {\n        this.generateBinarySequence();\n    }\n\n    textToBinary = () => {\n        let message = this.textInput;\n        let messageUpper = message.toUpperCase();\n        console.log(\"messageUpper: \", messageUpper);\n\n        for (let i = 0; i < messageUpper.length; i++) {\n            this.codeString += char_to_binary[messageUpper[i]] + \"~\";\n        }\n    }\n\n    playBit = (currentChar, cb) => {\n        if (currentChar == 1 || currentChar == \"start\") {\n            let note = new Sound(this.audioContext);\n            let now = this.audioContext.currentTime;\n            console.log(\"Playing a 1 signal\");\n            note.play(BinaryBitsSender.FREQUENCY_RATE, now);\n            note.onEnded(() => {\n                console.log(\"note on ended is launched\");\n                setTimeout(() => {\n                    if (cb) cb();\n                }, BinaryBitsSender.TIME_INTERVAL); //according to miliseconds\n            })\n            return;\n        }\n\n        console.log(\"Playing a 0 signal\");\n        setTimeout(() => {\n            cb();\n        }, BinaryBitsSender.TIME_INTERVAL * 2); //according to miliseconds\n    }\n\n    playBinarySequence = () => {\n        console.log(\"playBinarySequence is launched\");\n        let isDone = false;\n\n        this.playBit(\"start\");\n\n        let i = 0;\n        let currentBit = this.codeString[0];\n\n        let iterateChars = () => {\n            currentBit = this.codeString[i];\n            this.playBit(currentBit, () => {\n\n                if (this.codeString[i + 1]) {\n                    i++;\n                    return iterateChars();\n                } else {\n                    console.log(\"Done playing message\");\n                    this.props.doneSendingMessage();\n                    isDone = true;\n                }\n            });\n        }\n\n        if (!isDone) {\n            iterateChars();\n        }\n    }\n\n    generateBinarySequence = () => {\n        this.textToBinary();\n        console.log(\"this.codeString (binary message)\", this.codeString);\n        this.playBinarySequence();\n    }\n\n    render() { return (<div />); }\n}\n\nexport default BinaryBitsSender;\n","import React, { Component } from 'react';\nimport NavBar from '../NavBar.js';\nimport BinaryBitsSender from './BinaryBitsSender.js';\nimport \"./SendPage.css\";\n\n//mobx \nimport { observer } from 'mobx-react';\n\nconst languages = require('./../Languages.json');\n\n@observer(['MessageSending', 'Settings'])\nclass SendPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            header: '',\n            color: 'null',\n            icon: 'ghost'\n        }\n    }\n\n    componentWillMount() {\n        let key = '';\n        if (this.props.match.params.id) {\n            key = \"SendMessage\";\n        } else {\n            return;\n        }\n\n        let messageST = localStorage.getItem(key);\n        if (messageST) {\n            let messageOB = JSON.parse(messageST);\n            this.setState({\n                header: messageOB.header,\n                color: messageOB.color,\n                icon: messageOB.icon || this.state.icon,\n            });\n        }\n    }\n\n    doneSendingMessage = () => {\n        //if the user in the \n        if (window.location.href.indexOf(\"SendPage\") != -1) {\n            setTimeout(() => {\n                this.props.history.push('/');\n            }, 2000);\n        }\n\n        this.props.MessageSending.messageSending = false;\n    }\n\n    render() {\n        return (\n            <div>\n                <NavBar pageName=\"SendPage\" history={this.props.history} />\n\n                <div className=\"message-info-container\">\n                    <i\n                        style={{ color: this.state.color }}\n                        className={\"fas fa-\" + this.state.icon + \" fa-3x\"}\n                        id=\"message-icon\"\n                    />\n                    <h4 className=\"mb-3\" id=\"send-message-text\">{this.state.header} </h4>\n                </div>\n\n                {!this.props.MessageSending.messageSending ?\n                    <div>\n                        <div className=\"loading-check\">\n                            <i className=\"fa fa-check\" />\n                        </div>\n                        <p className=\"message-status\">\n                            {languages[this.props.Settings.language].msgSentText}\n                        </p>\n                    </div>\n                    :\n                    <div>\n                        <div className=\"loading-spinner\">\n                            <i className=\"fa fa-spinner fa-spin\" />\n                        </div>\n                        <p className=\"message-status\">\n                            {languages[this.props.Settings.language].msgSendingText}\n                        </p>\n                    </div>\n                }\n\n                <BinaryBitsSender\n                    header={this.state.header}\n                    doneSendingMessage={this.doneSendingMessage}\n                />\n\n            </div>\n        );\n    }\n}\n\nexport default SendPage;","import React, { Component } from 'react';\nimport IconPage from \"./scenes/icon_page/IconPage\";\nimport { Route, Switch } from 'react-router-dom'\nimport HomePage from './scenes/home_page/HomePage.js';\nimport MessagePage from './scenes/message_page/MessagePage.js';\nimport SendPage from \"./scenes/send_page/SendPage.js\";\n// import LanguageSettings from './scenes/LanguageSettings';\n\nimport { HashRouter } from 'react-router-dom';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/NewMessage\" component={MessagePage} />\n            <Route exact path=\"/NewMessage/IconPage\" component={IconPage} />\n            <Route exact path=\"/EditMessage/:id\" component={MessagePage} />\n            <Route exact path=\"/EditMessage/IconPage/:id\" component={IconPage} />\n            <Route exact path=\"/SendPage/:id\" component={SendPage} />\n            {/* <Route exact path=\"/LanguageSettings\" component={LanguageSettings} /> */}\n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import MessageSending from './MessageSending.store.js';\nimport Settings from './Settings.store.js';\n\nexport default {MessageSending, Settings};","import { observable } from 'mobx';\n\nclass MessageSending {\n    @observable messageSending = false;\n}\n\nexport default new MessageSending;\n\n","import { observable } from 'mobx';\n\nclass Settings {\n    @observable language = \"he\";\n}\n\nexport default new Settings;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//mobx\nimport stores from './stores';\nimport { Provider } from 'mobx-react';\n\nfunction startApp() {\n  ReactDOM.render(\n    <Provider {...stores}>\n      <App />\n    </Provider>\n    , document.getElementById('root'));\n}\n\nif (window.cordova) {\n  document.addEventListener('deviceready', function () {\n    startApp();\n  }, false);\n\n} else {\n  startApp();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}