{"version":3,"sources":["images/color-picker.png","NavBar.js","scenes/icon_page/iconsObj.js","scenes/icon_page/Filter.js","scenes/icon_page/Icon.js","scenes/icon_page/Icons.js","scenes/icon_page/IconPage.js","scenes/home_page/MsgCtrlButtons.js","scenes/home_page/Message.js","scenes/home_page/HomePage.js","scenes/message_page/Colors.js","scenes/message_page/FavoriteButton.js","scenes/message_page/MessagePage.js","scenes/send_page/morse_code_dict.js","scenes/send_page/Morse.js","scenes/send_page/SendPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","click","bind","assertThisInitialized","inherits","createClass","key","value","history","location","pathname","includes","goBack","replace","displayPageName","pageName","undefined","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","Component","iconsObj","בעלי חיים","סכנות","דת","רפואה","אוכל","אנשים","מקומות","חפצים","Filter","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","filterCategory","event","checked","target","categoryID","id","categoryFilter","updateCategoryFilter","toConsumableArray","currentIndex","findIndex","element","updatedCategoryFilter","splice","console","log","category","checkedCategory","onChange","for","Icon","setIcon","iconimage","Icons","keys","map","icon","Icon_Icon","saveNewIcon","checkCategoryFilter","IconPage","setState","state","chosenIcon","showMenu","closeMenu","match","params","currmessST","localStorage","getItem","currmessOB","JSON","parse","setItem","stringify","_this2","preventDefault","document","addEventListener","_this3","dropdownMenu","contains","removeEventListener","_this4","NavBar_NavBar","ref","Filter_Filter","Icons_Icons","Link","to","MsgCtrlButtons","itemID","editmessage","e","deletemessage","isFav","changelocation","Message","sendMessage","style","color","header","MsgCtrlButtons_MsgCtrlButtons","HomePage","sendMsg","messages","currMsg","assign","messageST","messagesOB","obj","updatemessages","msg","push","editMsg","Itemid","favmessages","regmessages","forEach","message","getMessage","Message_Message","textAlign","class","deafultcolors","colorclass","colorvalue","Colors","currcolor","Colors_Color","onclicker","updatecolor","Color","FavoriteButton","favbutt","MessagePage","updateStorage","updateLocalStorage","messageOB","updateInfoEvent","defineProperty","updateInfoValue","addtofavorite","saveMessageData","messagesArr","tempmessage","messageExists","currmsg","alert","favatfirst","Date","now","window","placeholder","Colors_Colors","src","require","FavoriteButton_FavoriteButton","disabled","char_to_morse","!","\"","$","&","'","(",")","+",",","-",".","/","0","1","2","3","4","5","6","7","8","9",":",";","=","?","@","_","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","dotTime","dashTime","interElemTime","spaceTime","initialDelay","codeArray","Morse","toneChar","time","char","charTime","osc","start","stop","stopMorse","textToMorse","messageUpper","textInput","toUpperCase","i","generateSequence","t","codeChar","j","playMorseSequence","Tone","Oscillator","toMaster","SendPage","Morse_Morse","App","Switch","Route","exact","path","component","Boolean","hostname","ReactDOM","render","HashRouter","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da513549.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/color-picker.0fc36b2a.png\";","import React, { Component } from 'react';\n\nexport class NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.click = this.click.bind(this);\n  }\n\n  click() {\n    if (this.props.history.location.pathname.includes(\"IconPage\")) {\n      this.props.history.goBack();\n    } else if (this.props.history.location.pathname.includes(\"NewMessage\") || this.props.history.location.pathname.includes(\"EditMessage\")) {\n      this.props.history.replace(\"/\");\n    } else {\n      this.props.history.goBack();\n    }\n  }\n\n  render() {\n    //define the name of the page to show on the top navigation bar\n    let pageName = this.props.pageName;\n    let displayPageName = '';\n    switch (pageName) {\n      case \"HomePage\":\n        displayPageName = \"Telebuzz\";\n        break;\n      case \"NewMessage\":\n        displayPageName = \"הודעה חדשה\";\n        break;\n      case \"EditMessage\":\n        displayPageName = \"עריכת הודעה\";\n        break;\n      case \"IconPage\":\n        displayPageName = \"בחירת אייקון\";\n        break;\n      case \"SendPage\":\n        displayPageName = \"שולח הודעה\";\n        break;\n      default:\n        displayPageName = \"\";\n    }\n\n    if (this.props.history === undefined) {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\">\n           {/* data-sidebarClass=\"navbar-dark bg-dark\"> */}\n            <a className=\"navbar-brand\" href=\"#\">{displayPageName}</a>\n          </nav>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\" >\n          {/* data-sidebarClass=\"navbar-dark bg-dark\"> */}\n            <div className=\"navbar-brand\" href=\"#\">{displayPageName}</div>\n            <button\n              className=\"navbar-toggler leftNavbarToggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarsExampleDefault\"\n              aria-controls=\"navbarsExampleDefault\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\">\n              <span>\n                <div\n                  onClick={this.click}\n                  className=\"text-light\">\n                  <i className=\"fas fa-arrow-left\" />\n                </div>\n              </span>\n            </button>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n","export const iconsObj = {\n    \"בעלי חיים\": [\"cat\", \"dog\", \"horse\"],\n    \"סכנות\": [\"fire\", \"bolt\", \"ghost\"],\n    \"דת\": [\"cross\", \"menorah\", \"pray\", \"bible\"],\n    \"רפואה\": [\"pills\", \"cannabis\", \"capsules\"],\n    \"אוכל\": [\"lemon\", \"drumstick-bite\", \"cookie\"],\n    \"אנשים\": [\"user-injured\", \"user-tie\", \"blind\"],\n    \"מקומות\": [\"university\", \"church\", \"hospital\", \"home\"],\n    \"חפצים\": [\"toilet-paper\", \"bed\", \"basketball-ball\", \"microscope\"]\n}\n\nexport default iconsObj;","import React, { Component } from 'react';\nimport './IconPage.css';\n\nexport class Filter extends Component {\n    \n    filterCategory = (event) => {\n        let checked = event.target.checked;\n        let categoryID = event.target.id;\n        let categoryFilter = this.props.categoryFilter;\n\n        if (checked && !categoryFilter.includes(categoryID)) {\n            this.props.updateCategoryFilter([...this.props.categoryFilter, categoryID]);\n        } else {\n            let currentIndex = categoryFilter.findIndex((element) => {\n                return element === categoryID;\n            });\n\n            if (currentIndex < 0) {\n                return;\n            } else {\n                let updatedCategoryFilter = this.props.categoryFilter;\n                updatedCategoryFilter.splice(currentIndex, 1);\n                this.props.updateCategoryFilter(updatedCategoryFilter);\n            }\n        }\n        console.log(\"category: \", this.props.category);\n    }\n\n    checkedCategory = () => {\n        console.log(\"checkedCategory\");\n        if(this.props.categoryFilter.includes(this.props.category)){\n            return true;\n        } \n        return false;\n    }\n\n    render() {\n        return (\n            <div className=\"custom-control custom-checkbox dropdown-item\">\n                {this.checkedCategory() ?\n                    <input\n                        type=\"checkbox\"\n                        id={this.props.category}\n                        className=\"custom-control-input\"\n                        onChange={this.filterCategory}\n                        checked\n                    />\n                    : <input\n                        type=\"checkbox\"\n                        id={this.props.category}\n                        className=\"custom-control-input\"\n                        onChange={this.filterCategory}\n                    />\n                }\n                <label\n                    className=\"custom-control-label pull-right\"\n                    for={this.props.category}>\n                    <p className=\"icon-name\" for={this.props.category}>\n                        {this.props.category}\n                    </p>\n                </label>\n            </div>\n        );\n    }\n}\n\nexport default Filter;","import React, { Component } from 'react';\nimport './IconPage.css';\n\nexport class Icon extends Component {\n    render() {\n        return (\n            <button\n                onClick={this.props.setIcon}\n                id={this.props.category}\n                type=\"button\"\n                className=\"btn btn-default iconButton\" >\n\n                <i className={\"fas fa-\" + this.props.iconimage + \" fa-3x\"}></i>\n            </button>\n        );\n    }\n}\n\nexport default Icon;","import React, { Component } from 'react';\nimport './IconPage.css';\nimport iconsObj from './iconsObj';\nimport { Icon } from './Icon';\n\nexport class Icons extends Component {\n    checkCategoryFilter() {\n        if (this.props.categoryFilter.length === 0) {\n            return (\n                Object.keys(iconsObj).map(\n                    (category) => iconsObj[category].map(\n                        (icon) =>\n                            <Icon\n                                iconimage={icon}\n                                category={category}\n                                setIcon={() => this.props.setIcon(icon)}\n                                saveNewIcon={() => this.props.saveNewIcon()}\n                            />\n                    )\n                )\n            );\n        } else {\n            return (\n                this.props.categoryFilter.map(\n                    (category) => iconsObj[category].map(\n                        (icon) =>\n                            <Icon\n                                iconimage={icon}\n                                category={category}\n                                setIcon={() => this.props.setIcon(category.iconimage)}\n                                saveNewIcon={() => this.props.saveNewIcon()}\n                            />\n                    )\n                )\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.checkCategoryFilter()}\n            </div>\n        );\n    }\n}\n\nexport default Icons;","import React, { Component } from 'react';\nimport './IconPage.css';\nimport { Link } from 'react-router-dom';\nimport { NavBar } from '../../NavBar.js';\nimport iconsObj from './iconsObj';\nimport { Filter } from './Filter';\nimport { Icons } from './Icons';\n\nexport class IconPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryFilter: [],\n      chosenIcon: \"\",\n      showMenu: false\n    }\n\n    // this.filterCategory = this.filterCategory.bind(this);\n    this.setIcon = this.setIcon.bind(this);\n    this.saveNewIcon = this.saveNewIcon.bind(this);\n    this.showMenu = this.showMenu.bind(this);\n    this.closeMenu = this.closeMenu.bind(this);\n  }\n\n  updateCategoryFilter = (categoryFilter) => {\n    this.setState({ categoryFilter });\n  }\n\n  saveNewIcon() {\n    const key = this.props.match.params.id ? \"EditMessage\" : \"NewMessage\";\n    let currmessST = localStorage.getItem(key);\n    let currmessOB = JSON.parse(currmessST);\n\n    if (currmessOB == \"\")\n      currmessOB = {};\n    if (this.state.chosenIcon != \"\") {\n      currmessOB.icon = this.state.chosenIcon;\n    }\n\n    localStorage.setItem(key, JSON.stringify(currmessOB));\n    this.setIcon(\"\");\n    console.log(\"icon page\" + localStorage.getItem(key));\n  }\n\n  setIcon(chosenIcon) {\n    this.setState({ chosenIcon });\n  }\n\n  showMenu(event) {\n    event.preventDefault();\n\n    this.setState({ showMenu: true }, () => {\n      document.addEventListener('click', this.closeMenu);\n    });\n  }\n\n  closeMenu(event) {\n    if (!this.dropdownMenu.contains(event.target)) {\n      this.setState({ showMenu: false }, () => {\n        document.removeEventListener('click', this.closeMenu);\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar pageName=\"IconPage\" history={this.props.history} />\n        <div className=\"container\">\n          <h3>איזה אייקון תרצו להציג?</h3>\n          <div className=\"dropdown show text-center\">\n            <div>\n              <button\n                className=\"btn btn-secondary dropdown-toggle \"\n                id=\"dropdownFilterIcon\"\n                onClick={this.showMenu}>\n                סנן/י\n              </button>\n\n              {this.state.showMenu\n                ? <div className=\"dropdown-filter-menu\"\n                  ref={(element) => {\n                    this.dropdownMenu = element;\n                  }}\n                >\n                  {Object.keys(iconsObj).map((category) =>\n                    <Filter\n                      categoryFilter={this.state.categoryFilter}\n                      updateCategoryFilter={this.updateCategoryFilter}\n                      category={category}\n                    />\n                  )}\n                </div>\n\n                : null\n              }\n            </div>\n          </div>\n\n          <br />\n\n          <div className=\"scrollIcons\">\n            {/* <div className=\"row\"> */}\n              {/* <div className=\"col-sm\"> */}\n                <Icons\n                  categoryFilter={this.state.categoryFilter}\n                  setIcon={this.setIcon}\n                  saveNewIcon={this.saveNewIcon}\n                />\n              {/* </div> */}\n            {/* </div> */}\n          </div>\n          <br />\n          <Link to={`${this.props.match.params.id ? `/EditMessage/${this.props.match.params.id}` : '/NewMessage'}`}>\n            <button\n              type=\"button\"\n              className=\"btn btn-info btn-lg btn-block\"\n              onClick={this.saveNewIcon}>\n              המשך\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IconPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomePage.css';\n\nexport class MsgCtrlButtons extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showMenu: false,\n        };\n\n        this.showMenu = this.showMenu.bind(this);\n        this.closeMenu = this.closeMenu.bind(this);\n    }\n\n    showMenu(event) {\n        event.preventDefault();\n\n        this.setState({ showMenu: true }, () => {\n            document.addEventListener('click', this.closeMenu);\n        });\n    }\n\n    closeMenu() {\n        this.setState({ showMenu: false }, () => {\n            document.removeEventListener('click', this.closeMenu);\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <button\n                    onClick={this.showMenu}\n                    className=\"btn btn-secondary dropdown-toggle\"\n                    type=\"button\"\n                    id=\"dropdownMessageCtrl\"\n                />\n\n                {this.state.showMenu\n                    ?\n                    <div className=\"dropdown-message-menu\">\n                        <Link to={`/EditMessage/${this.props.itemID}`}>\n                            <button onClick={() => this.props.editmessage(this.props.itemID)} className=\"dropdown-item btn btn-primary\" >ערוך/י</button>\n                        </Link>\n\n                        <button onClick={(e) => this.props.deletemessage(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >מחק/י</button>\n                        {this.props.isFav ?\n                            <button onClick={(e) => this.props.changelocation(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >הסר/י ממועדפים</button>\n                            :\n                            <button onClick={(e) => this.props.changelocation(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >הוסף/י למועדפים</button>\n                        }\n                    </div>\n                    : null\n                }\n            </div>\n        );\n    }\n}\n    // render() {\n    //     return (\n    //         <div>\n    //             <div className=\"dropdown-ctrl-message\">\n    //                 <button\n    //                     className=\"btn btn-secondary dropdown-toggle\"\n    //                     type=\"button\"\n    //                     id=\"dropdownMenuButton\"\n    //                     data-toggle=\"dropdown\"\n    //                     aria-haspopup=\"true\"\n    //                     aria-expanded=\"false\"\n    //                 />\n\n    //                 <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n    //                     <Link to={`/EditMessage/${this.props.itemID}`}>\n    //                         <button onClick={() => this.props.editmessage(this.props.itemID)} className=\"dropdown-item btn btn-primary\" >ערוך/י</button>\n    //                     </Link>\n\n    //                     <button onClick={(e) => this.props.deletemessage(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >מחק/י</button>\n    //                     {this.props.isFav ?\n    //                         <button onClick={(e) => this.props.changelocation(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >הסר/י ממועדפים</button>\n    //                         :\n    //                         <button onClick={(e) => this.props.changelocation(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >הוסף/י למועדפים</button>\n    //                     }\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     );\n    // }","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MsgCtrlButtons } from \"./MsgCtrlButtons\";\nimport './HomePage.css';\n\nexport class Message extends Component {\n    render() {\n        // if (this.props.codeRunning) {\n        //     return (\n        //         <div className=\"list-group\" onClick={alert(\"A message is being sent right now, please resend the message later\")}>\n        //             <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\n        //                 <div className=\"d-flex w-100 justify-content-between\">\n        //                     <i style={{ color: this.props.color }} className={\"fas fa-\" + this.props.icon + \" fa-3x\"} />\n        //                     <h4 className=\"mb-3 message-text\">{this.props.header} </h4>\n        //                     <MsgCtrlButtons\n        //                         itemID={this.props.itemID}\n        //                         deletemessage={this.props.deletemessage}\n        //                         editmessage={this.props.editmessage}\n        //                         isFav={this.props.isFav}\n        //                         changelocation={this.props.changelocation}\n        //                     />\n        //                 </div>\n        //             </div>\n        //         </div>\n        //     );\n        // } else {\n        return (\n            <div className=\"list-group\">\n                <Link\n                    to={`/SendPage/${this.props.itemID}`}\n                    // to={{\n                    //     pathname: `/SendPage/${this.props.itemID}`,\n                    //     state: {\n                    //         setCodeRunning: this.props.setCodeRunning\n                    //     }\n                    // }} //these are props passed to SendPage \n                    onClick={() => this.props.sendMessage(this.props.itemID)}\n                >\n                    <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                        <div className=\"d-flex w-100 justify-content-between\">\n                            <i style={{ color: this.props.color }} className={\"fas fa-\" + this.props.icon + \" fa-3x\"} />\n                            <h4 className=\"mb-3 message-text\">{this.props.header} </h4>\n                            <MsgCtrlButtons\n                                itemID={this.props.itemID}\n                                deletemessage={this.props.deletemessage}\n                                editmessage={this.props.editmessage}\n                                isFav={this.props.isFav}\n                                changelocation={this.props.changelocation}\n                            />\n                        </div>\n                    </div>\n                </Link>\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n//import data from '../data.json';\n// import { Nav } from \"./Nav\";\nimport { Message } from \"./Message\";\nimport { NavBar } from '../../NavBar.js';\nimport \"./HomePage.css\";\n\nexport class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: '',\n      // codeRunning: false\n    }\n\n    this.deletemessage = this.deletemessage.bind(this);\n    this.editmessage = this.editmessage.bind(this);\n    this.changelocation = this.changelocation.bind(this);\n  }\n\n  componentDidMount() {\n    let key = \"messages\";\n    let messageST = localStorage.getItem(key);\n\n    if (messageST) {\n      let messagesOB = JSON.parse(messageST);\n      const messages = Object.keys(messagesOB).map(obj => messagesOB[obj]);\n      this.setState({ messages });\n    } /*else {\n      window.NativeStorage.getItem(key,\n        (arr) => { this.setState({ messages: arr }) },\n        (error) => { console.log(\"homepage: cant access native storage: \", error) }\n      );\n    }*/\n\n    localStorage.setItem(\"EditMessage\", JSON.stringify(\"\"));\n    localStorage.setItem(\"NewMessage\", JSON.stringify({}));\n    localStorage.setItem(\"SendMessage\", JSON.stringify(\"\"));\n  }\n\n  deletemessage(event, itemID, isFav) {\n    event.preventDefault();\n    let key = \"messages\";\n    let messages = this.state.messages;\n    let updatemessages = [];\n\n    messages.map(msg => {\n      if (msg.itemID !== itemID) {\n        updatemessages.push(msg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(updatemessages));\n    this.setState({ messages: updatemessages });\n  }\n\n  editmessage(itemID) {\n    let key = \"EditMessage\";\n    let editMsg = {};\n\n    this.state.messages.map(currMsg => {\n      if (currMsg.itemID === itemID) {\n        editMsg = Object.assign({}, currMsg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(editMsg));\n  }\n\n  changelocation(event, Itemid, isFav) {\n    event.preventDefault();\n    let key = \"messages\";\n    let messages = this.state.messages;\n    let updatemessages = [];\n\n    messages.map(msg => {\n      updatemessages.push(msg);\n      if (msg.itemID === Itemid) {\n        updatemessages[updatemessages.length - 1].isFav = !isFav;\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(updatemessages));\n    this.setState({ messages: updatemessages });\n  }\n\n  // setCodeRunning = (value) => {\n  //   localStorage.setItem(\"codeRunning\",value);\n  // }\n\n  sendMessage = (itemID) => {\n    // this.setCodeRunning(true);\n    // console.log(\"sendMessage: \", this.state.codeRunning);\n    let key = \"SendMessage\";\n    let sendMsg = {};\n\n    this.state.messages.map(currMsg => {\n      if (currMsg.itemID === itemID) {\n        sendMsg = Object.assign({}, currMsg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(sendMsg));\n  }\n\n  render() {\n    let favmessages = [];\n    let regmessages = [];\n    let msgkeys = Object.keys(this.state.messages)\n\n    msgkeys.forEach(key => {\n      let message = this.state.messages[key];\n\n      let getMessage = (\n        <Message\n          key={key}\n          isFav={message.isFav}\n          itemID={message.itemID}\n          header={message.header}\n          icon={message.icon}\n          color={message.color}\n          deletemessage={this.deletemessage}\n          editmessage={this.editmessage}\n          changelocation={this.changelocation}\n          sendMessage={this.sendMessage}\n        // codeRunning={this.state.codeRunning}\n        // setCodeRunning={this.setCodeRunning}\n        />);\n\n      if (message.isFav) {\n        favmessages.push(getMessage);\n      } else {\n        regmessages.push(getMessage);\n      }\n    });\n\n    return (\n      <div style={{ textAlign: \"right\" }}>\n        {/* <Nav /> */}\n        <NavBar pageName=\"HomePage\" />\n\n        {/* if there are no messages at all */}\n        {!favmessages[0] && !regmessages[0] ?\n          <Link to=\"/NewMessage\">\n            <button\n              type=\"button\"\n              className=\"new-message-btn\">\n              <i class=\"fas fa-plus\" />\n            </button>\n          </Link>\n          : null\n        }\n\n        {/* if there are no favorite messages */}\n        {favmessages[0] ?\n          <div>\n            <p className=\"main-title-messages\"> מועדפים </p>\n            <div style={{ textAlign: \"center\" }}>\n              {favmessages}\n            </div>\n          </div>\n          : <div></div>\n        }\n\n        {/* if there are no regular messages */}\n        {regmessages[0] ?\n          <div>\n            <p className=\"main-title-messages\"> ההודעות שלי </p>\n            <div style={{ textAlign: \"center\" }} >\n              {regmessages}\n            </div>\n          </div>\n          : <div></div>\n        }\n\n        <div className=\"container\">\n          <Link to=\"/NewMessage\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary btn-lg fixed-bottom btn-block\">\n              הוסף/י הודעה\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport './MessagePage.css';\n\nlet deafultcolors = [\n  {\n    colorclass: \"dark\",\n    colorvalue: \"#343a40\"\n  },\n  {\n    colorclass: \"primary\",\n    colorvalue: \"#007bff\"\n\n  },\n  {\n    colorclass: \"success\",\n    colorvalue: \"#28a745\"\n  },\n  {\n\n    colorclass: \"info\",\n    colorvalue: \"#17a2b8\"\n  },\n  {\n    colorclass: \"warning\",\n    colorvalue: \"#ffc107\"\n  },\n  {\n    colorclass: \"danger\",\n    colorvalue: \"#dc3545\"\n  }\n];\n\nexport class Colors extends Component {\n  render() {\n    return (\n      <div className=\"colors\">\n        {deafultcolors.map((currcolor) =>\n          <Color\n            colorclass={currcolor.colorclass}\n            colorvalue={currcolor.colorvalue}\n            onclicker={() => this.props.updatecolor(currcolor.colorvalue)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Color extends Component {\n  render() {\n    return (\n      <button\n        id=\"color\"\n        type=\"button\"\n        onClick={this.props.onclicker}\n        className={\"btn btn-circle btn-\" + this.props.colorclass}\n      />\n    );\n  }\n}","import React, { Component } from 'react';\nimport './MessagePage.css';\n\nexport class FavoriteButton extends Component {\n\n  render() {\n    return (\n      // <div>\n      //   <button className=\"add-to-favorites\">הוספה למועדפים:</button>\n      // </div>\n      <div className=\"custom-control custom-checkbox\">\n        <input\n          type=\"checkbox\"\n          className=\"custom-control-input\"\n          id=\"defaultUnchecked\"\n          checked={this.props.favbutt}\n          onChange={this.props.onChange}\n        />\n        <label\n          className=\"custom-control-label pull-right\"\n          for=\"defaultUnchecked\">\n          <p className=\"add-to-favorites-lable\">\n            הוספה למועדפים:\n          </p>\n        </label>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './MessagePage.css';\nimport { Link } from 'react-router-dom';\nimport { NavBar } from \"../../NavBar\";\nimport { Colors } from \"./Colors\";\nimport { FavoriteButton } from \"./FavoriteButton\";\n\nexport class MessagePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            header: '',\n            color: 'null',\n            isFav: false,\n            icon: 'ghost',\n            favatfirst: false,\n            itemID: Date.now(),\n            key: \"\", //\"NewMessage\" || \"EditMessage\"\n            messageExists: false\n        };\n    }\n\n    componentWillMount() {\n        let key = \"NewMessage\";\n        if (this.props.match.params.id) {\n            key = \"EditMessage\";\n        }\n\n        let messageST = localStorage.getItem(key);\n        if (messageST) {\n            let messageOB = JSON.parse(messageST);\n            this.setState({\n                header: messageOB.header,\n                color: messageOB.color,\n                isFav: messageOB.isFav || this.state.isFav,\n                icon: messageOB.icon || this.state.icon,\n                favatfirst: messageOB.isFav,\n                itemID: this.props.match.params.id ? this.props.match.params.id : Date.now(),\n                key: key //\"NewMessage\" || \"EditMessage\"\n            });\n        }\n    }\n\n    //the storage will be updated also when reloading the page\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.updateStorage);\n    }\n\n    componentWillUnmount() {\n        this.updateStorage();\n        window.removeEventListener('beforeunload', this.updateStorage);\n    }\n\n    updateStorage = () => {\n        console.log(\"update storage\");\n        this.updateLocalStorage();\n        //this.updateFileSystem();\n        //this.updateNativeStorage();\n    }\n\n    /*\n    errorHandler = (fileName, e) => {  \n        let msg = '';\n    \n        switch (e.code) {\n            case FileError.QUOTA_EXCEEDED_ERR:\n                msg = 'Storage quota exceeded';\n                break;\n            case FileError.NOT_FOUND_ERR:\n                msg = 'File not found';\n                break;\n            case FileError.SECURITY_ERR:\n                msg = 'Security error';\n                break;\n            case FileError.INVALID_MODIFICATION_ERR:\n                msg = 'Invalid modification';\n                break;\n            case FileError.INVALID_STATE_ERR:\n                msg = 'Invalid state';\n                break;\n            default:\n                msg = 'Unknown error';\n                break;\n        };\n    \n        console.log('Error (' + fileName + '): ' + msg);\n    }\n\n    readFromFile = (fileName, cb) => {\n        var pathToFile = cordova.file.dataDirectory + fileName;\n        window.resolveLocalFileSystemURL(pathToFile, function (fileEntry) {\n            fileEntry.file(function (file) {\n                var reader = new FileReader();\n\n                reader.onloadend = function (e) {\n                    cb(JSON.parse(this.result));\n                };\n\n                reader.readAsText(file);\n            }, this.errorHandler.bind(null, fileName));\n        }, this.errorHandler.bind(null, fileName));\n    }\n\n    onDeviceReady = () => {\n        let fileData;\n        this.readFromFile('data.json', (data) => {\n            fileData = data;\n        });\n    }\n\n    updateFileSystem = () => {\n        document.addEventListener('deviceready', this.onDeviceReady(), false);\n\n        if (localStorage.getItem(\"messages\") != null) {\n            console.log(\"messages\", localStorage.getItem(\"messages\"));\n        }\n    }\n    */\n\n\n    /*\n    updateNativeStorage = () => {\n        if (localStorage.getItem(\"messages\") != null) {\n            console.log(\"messages\", localStorage.getItem(\"messages\"));\n            window.NativeStorage.setItem(\"messages\",\n                localStorage.getItem(\"messages\"),\n                () => { console.log(\"native storage success\") },\n                () => { console.log(\"native storage error\") }\n            );\n        }\n    }*/\n\n    updateLocalStorage = () => {\n        let messageOB = {\n            header: this.state.header,\n            color: this.state.color,\n            isFav: this.state.isFav,\n            icon: this.state.icon,\n            itemID: this.state.itemID\n        };\n\n        localStorage.setItem(this.state.key, JSON.stringify(messageOB));\n    }\n\n    updateInfoEvent = (key, event) => {\n        this.setState({ [key]: event.target.value });\n    }\n\n    updateInfoValue = (key, value) => {\n        this.setState({ [key]: value });\n    }\n\n    addtofavorite = () => {\n        this.setState({ isFav: !this.state.isFav });\n    }\n\n    saveMessageData = () => {\n        let key = \"messages\";\n        let msg = {\n            header: this.state.header,\n            isFav: this.state.isFav,\n            itemID: this.state.itemID,\n            icon: this.state.icon,\n            color: this.state.color\n        }\n        let messagesArr = [];\n        let tempmessage = [];\n        let messageST = localStorage.getItem(key);\n\n        if (messageST) {\n            let messagesOB = JSON.parse(messageST);\n            messagesArr = Object.keys(messagesOB).map(obj => messagesOB[obj]);\n        }\n\n        let messageExists = this.state.messageExists;\n        //check if the message header already exists in the saved messages\n        messagesArr.map(currmsg => {\n            if (currmsg.header === this.state.header && this.state.key === \"NewMessage\") {\n                messageExists = true;\n                this.setState({ messageExists });\n            }\n        });\n\n        //if the message exists - don't add it again\n        if (messageExists) {\n            alert(\"הודעה זו כבר קיימת במערכת\");\n            return;\n        } else {\n            //if the message has an id then it is an \"EditMessage\" \n            if (this.props.match.params.id) {\n                messagesArr.map(currmsg => {\n                    if (currmsg.itemID == this.props.match.params.id) {\n                        tempmessage.push(msg);\n                    } else {\n                        tempmessage.push(currmsg);\n                    }\n                });\n                localStorage.setItem(key, JSON.stringify(tempmessage));\n            } else { //new message\n                messagesArr.push(msg);\n                localStorage.setItem(key, JSON.stringify(messagesArr));\n            }\n        }\n    }\n\n    render() {\n        return (\n\n            <div>\n                <NavBar pageName={this.state.key} history={this.props.history} />\n\n                <div className=\"container\">\n\n                    <label for=\"message-title text-right\">ההודעה:</label>\n                    <input\n                        type=\"text\"\n                        onChange={(event) => this.updateInfoEvent(\"header\", event)}\n                        className=\"form-control\"\n                        id=\"message-title\"\n                        placeholder=\"הכנס/י הודעה\"\n                        value={this.state.header}\n                    />\n                    <small className=\"form-text text-muted\">על ההודעה להיות קצרה ותמציתית.</small>\n                    <br />\n\n                    <div className=\"row\">\n                        <div className=\"col-11 text-center\">\n                            <i style={{ color: this.state.color }} className={\"fas fa-\" + this.state.icon + \" fa-5x pull-left\"} />\n                            <br /><br />\n\n                            <Link to={`/${this.state.key}/IconPage${this.state.key === \"EditMessage\" ? \"/\" + this.state.itemID : \"\"}`}>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-info \">\n                                    <i className=\"fas fa-pencil-alt\"></i>\n                                    שנה/י אייקון\n                                </button>\n                            </Link>\n                        </div>\n                    </div>\n\n                    {/* the color picker */}\n\n                    <div className=\"colors-container\">\n                        <Colors updatecolor={(color) => this.updateInfoValue(\"color\", color)} />\n\n                        <div className=\"color-picker-container\">\n                            <img\n                                id=\"color-picker-img\"\n                                src={require('../../images/color-picker.png')}\n                            />\n                            <input\n                                id=\"color-picker\"\n                                className=\"btn-circle\"\n                                value={this.state.color}\n                                onChange={(event) => this.updateInfoEvent(\"color\", event)}\n                                type=\"color\"\n                            />\n                        </div>\n                    </div>\n                    <small className=\"form-text text-muted text-center \">ביכולתך לבחור בצבע מוכן מראש או לחילופין לבחור צבע מותאם אישית.</small>\n\n                    <br />\n\n                    <FavoriteButton favbutt={this.state.isFav} onChange={this.addtofavorite} />\n\n                </div>\n\n                {this.state.header ?\n                    <Link to=\"/\">\n                        <button\n                            type=\"submit\"\n                            className=\"submit-message-button btn btn-secondary btn-lg btn-block fixed-bottom\"\n                            onClick={this.saveMessageData}>\n                            {this.state.key === \"NewMessage\" ? \"הוסף/י\" : \"עדכן/י\"}\n                        </button>\n                    </Link>\n                    : <button\n                        disabled\n                        type=\"submit\"\n                        className=\"submit-message-button btn btn-secondary btn-lg btn-block fixed-bottom\">\n                        {this.state.key === \"NewMessage\" ? \"הוסף/י\" : \"עדכן/י\"}\n                    </button>\n                }\n            </div>\n        );\n    }\n}\n\nexport default MessagePage;","export const char_to_morse = {\n    '!': \"-.-.--\",\n    '\"': \".-..-.\",\n    '$': \"...-..-\",\n    '&': \".-...\",\n    \"'\": \".----.\",\n    '(': \"-.--.\",\n    ')': \"-.--.-\",\n    '+': \".-.-.\",\n    ',': \"--..--\",\n    '-': \"-....-\",\n    '.': \".-.-.-\",\n    '/': \"-..-.\",\n    '0': \"-----\",\n    '1': \".----\",\n    '2': \"..---\",\n    '3': \"...--\",\n    '4': \"....-\",\n    '5': \".....\",\n    '6': \"-....\",\n    '7': \"--...\",\n    '8': \"---..\",\n    '9': \"----.\",\n    ':': \"---...\",\n    ';': \"-.-.-.\",\n    '=': \"-...-\",\n    '?': \"..--..\",\n    '@': \".--.-.\",\n    '_': \"..--.-\",\n    'A': \".-\",\n    'B': \"-...\",\n    'C': \"-.-.\",\n    'D': \"-..\",\n    'E': \".\",\n    'F': \"..-.\",\n    'G': \"--.\",\n    'H': \"....\",\n    'I': \"..\",\n    'J': \".---\",\n    'K': \"-.-\",\n    'L': \".-..\",\n    'M': \"--\",\n    'N': \"-.\",\n    'O': \"---\",\n    'P': \".--.\",\n    'Q': \"--.-\",\n    'R': \".-.\",\n    'S': \"...\",\n    'T': \"-\",\n    'U': \"..-\",\n    'V': \"...-\",\n    'W': \".--\",\n    'X': \"-..-\",\n    'Y': \"-.--\",\n    'Z': \"--..\",\n    ' ': \" \",\n}\n\nexport default char_to_morse;","import React, { Component } from \"react\";\nimport char_to_morse from \"./morse_code_dict\";\n\n//morse times in seconds\nlet longerBy = 10;\nlet dotTime = 0.07 * longerBy;\nlet dashTime = dotTime * 3;\nlet interElemTime = 0.09 * longerBy;\nlet spaceTime = dotTime;\n\n//initial delay before starting playing the morse code\nlet initialDelay = 0.1;\nlet codeArray = [];\n\nexport class Morse extends Component {\n    // The Morse Code tone to use, xHz sine wave\n    //static osc = new window.Tone.Oscillator(8000, \"sine\").toMaster();\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            textInput: this.props.header,\n            // codeArray: [],\n            // running: false // Track whether morse code is running\n        }\n\n        this.osc = new window.Tone.Oscillator(8000, \"sine\").toMaster();\n        console.log(\"osc\", this.osc);\n        //console.log(\"tone\",window.Tone.Transport);\n    }\n\n    toneChar = (time, char) => {\n        let charTime;\n        if (char === \".\") {\n            charTime = dotTime;\n        } else if (char === \"-\") {\n            charTime = dashTime;\n        }\n        this.osc.start(time);\n        this.osc.stop(time + charTime);\n        // window.Tone.Transport.start();\n        // console.log(\"char\", char, \"time\", time, \"charTime\", charTime);\n    }\n\n    stopMorse = () => {\n        codeArray = [];\n        // window.Tone.Transport.cancel();\n        // this.setState({running: false, codeArray: []});\n    }\n\n    textToMorse = () => {\n        let message = this.state.textInput;\n        let messageUpper = message.toUpperCase();\n        // let codeArray = this.state.codeArray;\n        console.log(\"messageUpper: \", messageUpper);\n\n        for (let i = 0; i < messageUpper.length; i++) {\n            // if (messageUpper[i] === \" \") {\n            //     codeArray.push(<br />);\n            // } else {\n            codeArray.push(char_to_morse[messageUpper[i]]);\n            codeArray.push(\" \");\n            // }\n        }\n        console.log(\"codeArray: \", codeArray);\n\n        // this.setState({ codeArray });\n    }\n\n    generateSequence = () => {\n        let t = initialDelay; //the current time in the morse code sequence\n        // let codeArray = this.state.codeArray;\n\n        for (let i = 0; i < codeArray.length; i++) {\n            let codeChar = codeArray[i]; //morse char (dash and dots)\n            if (codeChar === \" \") {\n                t += spaceTime;\n            } else {\n                for (let j = 0; j < codeChar.length; j++) {\n                    let char = codeChar[j];\n\n                    switch (char) {\n                        case \".\":\n                            this.toneChar(t, char);\n                            t += dotTime;\n                            break;\n                        case \"-\":\n                            this.toneChar(t, char);\n                            t += dashTime;\n                            break;\n                        default:\n                            console.log(\"Unexpected character in morse code message\", char);\n                    }\n                    // Add inter element pause between characters\n                    t += interElemTime;\n                }\n            }\n        }\n    }\n\n    playMorseSequence = () => {\n        // if (this.props.codeRunning) {\n        //     return;\n        // }\n\n        // clear previous\n        this.stopMorse();\n\n        // this.setState({ running: true });\n        this.textToMorse();\n\n        //to update the progress bar\n        // let codeArray = this.state.codeArray;\n        //let totalLength = codeArray.join('').length - 1;\n\n        this.generateSequence();\n    }\n\n    render() {\n        this.playMorseSequence();\n\n        return (\n            <div>\n                {/* <h1>{this.props.codeRunning ? this.state.codeArray : \"\"}</h1> */}\n            </div>\n        );\n    }\n}\n\nexport default Morse;\n","import React, { Component } from 'react';\nimport { NavBar } from '../../NavBar.js';\n// import { MorseCode } from '../../encode_message/MorseCode.jsx';\nimport { Morse } from './Morse.js';\nimport \"./SendPage.css\";\n\nexport class SendPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            header: '',\n            color: 'null',\n            icon: 'ghost'\n        }\n    }\n\n    componentWillMount() {\n        let key = '';\n        if (this.props.match.params.id) {\n            key = \"SendMessage\";\n        } else {\n            return;\n        }\n\n        let messageST = localStorage.getItem(key);\n        if (messageST) {\n            let messageOB = JSON.parse(messageST);\n            this.setState({\n                header: messageOB.header,\n                color: messageOB.color,\n                icon: messageOB.icon || this.state.icon,\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <NavBar pageName=\"SendPage\" history={this.props.history} />\n\n                <div className=\"message-info-container\">\n                    <i\n                        style={{ color: this.state.color }}\n                        className={\"fas fa-\" + this.state.icon + \" fa-3x\"}\n                        id=\"message-icon\"\n                    />\n                    <h4 className=\"mb-3\" id=\"message-text\">{this.state.header} </h4>\n                </div>\n\n                <div className=\"loading-spinner\">\n                    <i className=\"fa fa-spinner fa-spin\" />\n                </div>\n\n\n                <Morse header={this.state.header} />\n                {/* onFinish={()=>this.props.location.state.setCodeRunning(false)}/> */}\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default SendPage;","import React, { Component } from 'react';\n// import Tone from './ToneReact';\nimport { IconPage } from \"./scenes/icon_page/IconPage\";\nimport { Route, Switch } from 'react-router-dom'\nimport { HomePage } from './scenes/home_page/HomePage.js';\nimport { MessagePage } from './scenes/message_page/MessagePage.js';\nimport { SendPage } from \"./scenes/send_page/SendPage.js\";\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/NewMessage\" component={MessagePage} />\n          <Route exact path=\"/NewMessage/IconPage\" component={IconPage} />\n          <Route exact path=\"/EditMessage/:id\" component={MessagePage} />\n          <Route exact path=\"/EditMessage/IconPage/:id\" component={IconPage} />\n          <Route exact path=\"/SendPage/:id\" component={SendPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\n// const startApp = () => {\n//   console.log(window.NativeStorage);\n  ReactDOM.render((\n    <HashRouter>\n      <App />\n    </HashRouter>\n  ), document.getElementById('root'));\n// }\n\n// if (!window.cordova) {\n//   startApp();\n// } else {\n//   document.addEventListener('deviceready', startApp, false);\n// }\n\n\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n\n"],"sourceRoot":""}