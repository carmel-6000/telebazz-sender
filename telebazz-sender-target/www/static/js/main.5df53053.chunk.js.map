{"version":3,"sources":["scenes/message_page/NavBar.js","scenes/icon_page/iconsObj.js","scenes/icon_page/Filter.js","scenes/icon_page/Icon.js","scenes/icon_page/Icons.js","scenes/icon_page/IconPage.js","scenes/send_page/morse_code_dict.js","scenes/home_page/MsgCtrlButtons.js","encode_message/MorseCode.jsx","scenes/home_page/Message.js","scenes/home_page/HomePage.js","scenes/message_page/Colors.js","scenes/message_page/FavoriteButton.js","scenes/message_page/MessagePage.js","scenes/send_page/Morse.js","scenes/send_page/SendPage.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","click","bind","assertThisInitialized","inherits","createClass","key","value","history","location","pathname","includes","goBack","replace","undefined","react_default","a","createElement","className","data-sidebarClass","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","Component","iconsObj","בעלי חיים","סכנות","דת","רפואה","אוכל","אנשים","מקומות","חפצים","Filter","apply","arguments","onChange","filterCategory","id","category","for","Icon","setIcon","iconimage","Icons","categoryFilter","length","keys","map","icon","Icon_Icon","saveNewIcon","checkCategoryFilter","IconPage","state","chosenIcon","event","checked","target","categoryID","setState","toConsumableArray","concat","currentIndex","findIndex","element","updatedCategoryFilter","splice","match","params","currmessST","localStorage","getItem","currmessOB","JSON","parse","setItem","stringify","console","log","_this2","NavBar_NavBar","role","aria-haspopup","aria-labelledby","Filter_Filter","isCategryChecked","Icons_Icons","Link","to","char_to_morse","!","\"","$","&","'","(",")","+",",","-",".","/","0","1","2","3","4","5","6","7","8","9",":",";","=","?","@","_","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","MsgCtrlButtons","itemID","editmessage","e","deletemessage","isFav","changelocation","Message","query","sendMessage","style","color","header","MsgCtrlButtons_MsgCtrlButtons","description","HomePage","sendMsg","messages","currMsg","assign","messageST","messagesOB","obj","preventDefault","updatemessages","msg","push","editMsg","Itemid","favmessages","regmessages","forEach","message","Message_Message","textAlign","deafultcolors","colorclass","colorvalue","Colors","currcolor","Colors_Color","onclicker","updatecolor","Color","FavoriteButton","favbutt","MessagePage","updateStorage","updateLocalStorage","messageOB","updateInfoEvent","defineProperty","updateInfoValue","addtofavorite","saveMessageData","messagesArr","tempmessage","messageExists","currmsg","alert","favatfirst","Date","now","window","addEventListener","removeEventListener","placeholder","rgba","Colors_Colors","FavoriteButton_FavoriteButton","disabled","Morse","textToMorse","messageUpper","textInput","toUpperCase","codeArray","i","playMorseSequence","showCode","SendPage","dir","Morse_Morse","App","Switch","Route","exact","path","component","Boolean","hostname","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5df53053.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.click = this.click.bind(this);\n  }\n\n  click() {\n    if (this.props.history.location.pathname.includes(\"IconPage\")) {     \n      this.props.history.goBack();\n    } else if (this.props.history.location.pathname.includes(\"NewMessage\") || this.props.history.location.pathname.includes(\"EditMessage\")) {\n      this.props.history.replace(\"/\");\n    } else {\n      this.props.history.goBack();\n    }\n  }\n\n  render() {\n    if (this.props.history === undefined) {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\" data-sidebarClass=\"navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"#\">Telebuzz</a>\n          </nav>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\" data-sidebarClass=\"navbar-dark bg-dark\">\n            <div className=\"navbar-brand\" href=\"#\">Telebuzz</div>\n            <button\n              className=\"navbar-toggler leftNavbarToggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarsExampleDefault\"\n              aria-controls=\"navbarsExampleDefault\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\">\n              <span>\n                <div\n                  onClick={this.click}\n                  className=\"text-light\">\n                  <i className=\"fas fa-arrow-left\" />\n                </div>\n              </span>\n            </button>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n","export const iconsObj = {\n    \"בעלי חיים\": [\"cat\", \"dog\", \"horse\"],\n    \"סכנות\": [\"fire\", \"bolt\", \"ghost\"],\n    \"דת\": [\"cross\", \"menorah\", \"pray\", \"bible\"],\n    \"רפואה\": [\"pills\", \"cannabis\", \"capsules\"],\n    \"אוכל\": [\"lemon\", \"drumstick-bite\", \"cookie\"],\n    \"אנשים\": [\"user-injured\", \"user-tie\", \"blind\"],\n    \"מקומות\": [\"university\", \"church\", \"hospital\", \"home\"],\n    \"חפצים\": [\"toilet-paper\", \"bed\", \"basketball-ball\", \"microscope\"]\n}\n\nexport default iconsObj;","import React, { Component } from 'react';\nimport './IconPage.css';\n\nexport class Filter extends Component {\n    render() {\n        return (\n            <div className=\"dropdown-item\">\n                <input\n                    className=\"checkboxer\"\n                    onChange={this.props.filterCategory}\n                    id={this.props.category}\n                    type=\"checkbox\"\n                />\n                <label for={this.props.category}>\n                    {this.props.category}\n                </label>\n            </div>\n        );\n    }\n}\n\nexport default Filter;","import React, { Component } from 'react';\nimport './IconPage.css';\n\nexport class Icon extends Component {\n    render() {\n        return (\n            <button\n                onClick={this.props.setIcon}\n                id={this.props.category}\n                type=\"button\"\n                className=\"btn btn-default iconButton\" >\n\n                <i className={\"fas fa-\" + this.props.iconimage + \" fa-3x\"}></i>\n            </button>\n        );\n    }\n}\n\nexport default Icon;","import React, { Component } from 'react';\nimport './IconPage.css';\nimport iconsObj from './iconsObj';\nimport { Icon } from './Icon';\n\nexport class Icons extends Component {\n    checkCategoryFilter() {\n        if (this.props.categoryFilter.length === 0) {\n            return (\n                Object.keys(iconsObj).map(\n                    (category) => iconsObj[category].map(\n                        (icon) =>\n                            <Icon\n                                iconimage={icon}\n                                category={category}\n                                setIcon={() => this.props.setIcon(icon)}\n                                saveNewIcon={() => this.props.saveNewIcon()}\n                            />\n                    )\n                )\n            );\n        } else {\n            return (\n                this.props.categoryFilter.map(\n                    (category) => iconsObj[category].map(\n                        (icon) =>\n                            <Icon\n                                iconimage={icon}\n                                category={category}\n                                setIcon={() => this.props.setIcon(category.iconimage)}\n                                saveNewIcon={() => this.props.saveNewIcon()}\n                            />\n                    )\n                )\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.checkCategoryFilter()}\n            </div>\n        );\n    }\n}\n\nexport default Icons;","import React, { Component } from 'react';\nimport './IconPage.css';\nimport { Link } from 'react-router-dom';\nimport { NavBar } from '../message_page/NavBar.js';\nimport iconsObj from './iconsObj';\nimport { Filter } from './Filter';\nimport { Icons } from './Icons';\n\nexport class IconPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryFilter: [],\n      chosenIcon: \"\"\n    }\n\n    this.filterCategory = this.filterCategory.bind(this);\n    this.setIcon = this.setIcon.bind(this);\n    this.saveNewIcon = this.saveNewIcon.bind(this);\n  }\n\n  filterCategory(event) {\n    let checked = event.target.checked;\n    let categoryID = event.target.id;\n\n    if (checked && !this.state.categoryFilter.includes(categoryID)) {\n      this.setState({\n        categoryFilter: [...this.state.categoryFilter, categoryID]\n      })\n    } else {\n      let currentIndex = this.state.categoryFilter.findIndex((element) => {\n        return element === categoryID;\n      });\n\n      if (currentIndex < 0) {\n        return;\n      } else {\n        let updatedCategoryFilter = this.state.categoryFilter;\n        updatedCategoryFilter.splice(currentIndex, 1);\n        this.setState({ categoryFilter: updatedCategoryFilter });\n      }\n    }\n  }\n\n  saveNewIcon() {\n    const key = this.props.match.params.id ? \"EditMessage\" : \"NewMessage\";\n    let currmessST = localStorage.getItem(key);\n    let currmessOB = JSON.parse(currmessST);\n\n    if (currmessOB == \"\")\n      currmessOB = {};\n    if (this.state.chosenIcon != \"\") {\n      currmessOB.icon = this.state.chosenIcon;\n    }\n\n    localStorage.setItem(key, JSON.stringify(currmessOB));\n    this.setIcon(\"\");\n    console.log(\"icon page\" + localStorage.getItem(key));\n  }\n\n  setIcon(chosenIcon) {\n    this.setState({ chosenIcon },\n      console.log(\"after setState: \", this.state.chosenIcon)\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar history={this.props.history} />\n        <div className=\"container\">\n          <h3>איזה אייקון תרצו להציג?</h3>\n          <div className=\"dropdown show text-center\">\n            <a\n              className=\"btn btn-secondary dropdown-toggle \"\n              href=\"#\"\n              role=\"button\"\n              id=\"dropdownMenuLink\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\">\n              סנן\n            </a>\n            <div className=\"dropdown-menu dropdown-menu-center \" aria-labelledby=\"dropdownMenuLink\">\n              {Object.keys(iconsObj).map((category) =>\n                <Filter\n                  isCategryChecked={this.state.isCategryChecked}\n                  filterCategory={this.filterCategory}\n                  category={category}\n                />\n              )}\n            </div>\n          </div>\n          <br />\n          <div className=\"scrollIcons\">\n            <div className=\"row\">\n              <div className=\"col-sm\">\n                <Icons\n                  categoryFilter={this.state.categoryFilter}\n                  setIcon={this.setIcon}\n                  saveNewIcon={this.saveNewIcon}\n                />\n              </div>\n            </div>\n          </div>\n          <br />\n          <Link to={`${this.props.match.params.id ? `/EditMessage/${this.props.match.params.id}` : '/NewMessage'}`}>\n            <button\n              type=\"button\"\n              className=\"btn btn-info btn-lg btn-block\"\n              onClick={this.saveNewIcon}>\n              המשך\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IconPage;","export const char_to_morse = {\n    '!': \"-.-.--\",\n    '\"': \".-..-.\",\n    '$': \"...-..-\",\n    '&': \".-...\",\n    \"'\": \".----.\",\n    '(': \"-.--.\",\n    ')': \"-.--.-\",\n    '+': \".-.-.\",\n    ',': \"--..--\",\n    '-': \"-....-\",\n    '.': \".-.-.-\",\n    '/': \"-..-.\",\n    '0': \"-----\",\n    '1': \".----\",\n    '2': \"..---\",\n    '3': \"...--\",\n    '4': \"....-\",\n    '5': \".....\",\n    '6': \"-....\",\n    '7': \"--...\",\n    '8': \"---..\",\n    '9': \"----.\",\n    ':': \"---...\",\n    ';': \"-.-.-.\",\n    '=': \"-...-\",\n    '?': \"..--..\",\n    '@': \".--.-.\",\n    '_': \"..--.-\",\n    'A': \".-\",\n    'B': \"-...\",\n    'C': \"-.-.\",\n    'D': \"-..\",\n    'E': \".\",\n    'F': \"..-.\",\n    'G': \"--.\",\n    'H': \"....\",\n    'I': \"..\",\n    'J': \".---\",\n    'K': \"-.-\",\n    'L': \".-..\",\n    'M': \"--\",\n    'N': \"-.\",\n    'O': \"---\",\n    'P': \".--.\",\n    'Q': \"--.-\",\n    'R': \".-.\",\n    'S': \"...\",\n    'T': \"-\",\n    'U': \"..-\",\n    'V': \"...-\",\n    'W': \".--\",\n    'X': \"-..-\",\n    'Y': \"-.--\",\n    'Z': \"--..\",\n    ' ': \" \",\n}\n\nexport default char_to_morse;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class MsgCtrlButtons extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"dropdown\">\n                    <button\n                        className=\"btn btn-secondary dropdown-toggle\"\n                        type=\"button\"\n                        id=\"dropdownMenuButton\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                    />\n\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                        <Link to={`/EditMessage/${this.props.itemID}`}>\n                            <button onClick={() => this.props.editmessage(this.props.itemID)} className=\"dropdown-item btn btn-primary\" >ערוך/י</button>\n                        </Link>\n\n                        <button onClick={(e) => this.props.deletemessage(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >מחק/י</button>\n                        {this.props.isFav ?\n                            <button onClick={(e) => this.props.changelocation(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >הסר/י ממועדפים</button>\n                            :\n                            <button onClick={(e) => this.props.changelocation(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >הוסף/י למועדפים</button>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport char_to_morse from \"../scenes/send_page/morse_code_dict.js\";\n// import { Tone } from \"./Tone.min.js\";\n\nexport class MorseCode extends Component {\n  // The Morse Code tone to use, xHz sine wave\n  // static osc = new Tone.Oscillator(8000, \"sine\").toMaster();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      textMessageInput: \"the users input\", //need to change!!\n      codeMessageArray: [],\n      codeIsRunning: false, // Track whether morse code is running\n      initialDelay: 0.1, // Initial delay before starting morse code sequence\n\n      //tone times\n      dotTime: 0.070,\n      spaceTime: 0.49, //dotTime*7 \n      dashTime: 0.21,\n      interElemTime: 0.090,\n    };\n  }\n\n  componentWillMount() {\n    this.setState({ textMessageInput: this.props.header });\n  }\n\n  textMessageToMorse = () => {\n    let message = this.state.textMessageInput;\n    let messageUpper = message.toUpperCase();\n    let codeMessageArray = this.state.codeMessageArray;\n    console.log(\"messageUpper: \", messageUpper);\n\n    for (let i = 0; i < messageUpper.length; i++) {\n      codeMessageArray.push(char_to_morse[messageUpper[i]]);\n    }\n\n    console.log(\"codeMessageArray: \", codeMessageArray);\n    this.setState({ codeMessageArray: codeMessageArray });\n  }\n\n  tone_updateProgress = (time, pos, totalLength) => {\n    var ratio = 100 * pos / totalLength; //position the text\n\n    //TODO - change this line\n    // document.querySelector('#p1').MaterialProgress.setProgress(ratio);\n  }\n\n  //TODO\n  addMorseText = (morseText) => {\n    console.log(\"addMorseText: \", morseText);\n  }\n\n  tone_word_space = () => {\n    this.addMorseText('<br />');\n  }\n\n  tone_dot = (time, char) => {\n    // this.osc.start(time);\n    console.log(\"time dot\", time);\n    // osc.stop(time+dot_time);\n    this.addMorseText('• ', char);\n  }\n\n  tone_dash = (time, char) => {\n    // osc.start(time);\n    console.log(\"time dash\", time);\n    // osc.stop(time + dash_time);\n    this.addMorseText('▬ ', char);\n  }\n\n  tone_letter_space = (time) => {\n    this.addMorseText(' ');\n  }\n\n  tone_fin = (time) => {\n    this.setState({ codeIsRunning: false });\n  }\n\n  generateSequence = () => {\n    let codeMessageArray = this.state.codeMessageArray;\n    let seq = [];\n    let initialDelay = this.state.initialDelay; // Our current time in the morse code sequence\n    let pos = 0;\n\n    for (let i = 0; i < codeMessageArray.length; i++) {\n      let codeChar = codeMessageArray[i]; // morse code codeChar dash and dots\n\n      // If the codeChar is just a space, handle differently\n      if (codeChar === ' ') {\n        // Push codeChar space\n        seq.push({ \"time\": initialDelay, \"func\": this.tone_word_space });\n        // this.tone_word_space();\n        initialDelay += this.state.space_time;\n      } else {\n        // We have a morse code codeChar\n        if (typeof codeChar == 'undefined') {\n          console.log(\"Skip\", codeMessageArray[i]);\n          continue;\n        }\n        for (let j = 0; j < codeChar.length; j++) {\n          let char = codeChar[j]; // morse code character\n          if (char === '.') {\n            // Push a tone_dot\n            seq.push({ \"time\": initialDelay, \"func\": this.tone_dot });\n            // this.tone_dot();\n            initialDelay += this.state.dotTime;\n            console.log(\"initialDelay: \", initialDelay);\n\n          } else if (char === '-') {\n            // Push tone_dash\n            seq.push({ \"time\": initialDelay, \"func\": this.tone_dash });\n            // this.tone_dash();\n            initialDelay += this.state.dashTime;\n          } else {\n            console.log('Unexpected character in morse code message:', char);\n          }\n          // Add inter element pause between characters\n          initialDelay += this.state.interElemTime;\n          pos += 1;\n          // Add update to progress bar\n          seq.push({\n            \"time\": initialDelay,\n            \"func\": this.tone_updateProgress,\n            \"msg_char\": pos\n          });\n          // this.tone_updateProgress();\n          // console.log(\"seq: \", seq);\n        }\n        // Add inter-letter space\n        if (i < codeMessageArray.length - 1 && codeMessageArray[i + 1] !== ' ') {\n          seq.push({ \"time\": initialDelay, \"func\": this.tone_letter_space });\n          // this.tone_letter_space();\n          initialDelay += this.state.space_time;\n        }\n      }\n    }\n    seq.push({ \"time\": initialDelay, \"func\": this.tone_fin });\n    // this.tone_fin();\n\n    /*var part = new Tone.Part(function (time, obj) {\n      if (typeof obj.msg_char != 'undefined') {\n        obj.func(time, obj.msg_char);\n        // console.log(time.toFixed(3), obj.func.name, obj.msg_char);\n      } else {\n        obj.func(time);\n        // console.log(time.toFixed(3), obj.func.name);\n      }\n    }, seq).start();\n\n    // Start sequence\n    Tone.start();*/\n  }\n\n  playMorseSequence = () => {\n    console.log(\"playMorseSequence\");\n    if (!this.state.codeIsRunning) {\n      //TODO - stopMorse()\n\n      this.setState({ codeIsRunning: true });\n      this.textMessageToMorse();\n\n      let codeMessageArray = this.state.codeMessageArray;\n      let totalLength = codeMessageArray.join('').length - 1;\n\n      this.tone_updateProgress(totalLength);\n      this.generateSequence();\n    } else {\n      console.log(\"morse code is running: \", this.state.codeIsRunning);\n    }\n  }\n\n  clearCodeText = () => {\n    this.setState({ codeIsRunning: false, codeMessageArray: [] });\n  }\n\n  render() {\n    if (!this.state.codeIsRunning) {\n      return (\n        <div>\n          <button onClick={this.playMorseSequence}>play morse sequence</button>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <button onClick={this.clearCodeText}>clear morse</button>\n          <p id=\"msg\">{this.state.textMessageInput}</p>\n          <div id=\"morse\">{this.state.codeMessageArray}</div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default MorseCode;\n\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MsgCtrlButtons } from \"./MsgCtrlButtons\";\n\nexport class Message extends Component {\n    render() {\n        return (\n            <div className=\"list-group\">\n                <Link\n                    to={`/SendPage/${this.props.itemID}`}\n                    query={{ itemID: this.props.itemID }} //this is props passed to SendPage \n                    onClick={() => this.props.sendMessage(this.props.itemID)}\n                >\n                    <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                        <div className=\"d-flex w-100 justify-content-between\">\n                            <i style={{ color: this.props.color }} className={\"fas fa-\" + this.props.icon + \" fa-3x\"} />\n                            <h4 className=\"mb-3 \">{this.props.header} </h4>\n                            <MsgCtrlButtons\n                                itemID={this.props.itemID}\n                                deletemessage={this.props.deletemessage}\n                                editmessage={this.props.editmessage}\n                                isFav={this.props.isFav}\n                                changelocation={this.props.changelocation}\n                            />\n                        </div>\n                        <p className=\"mb-1\"> {this.props.description} </p>\n                    </div>\n                </Link>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { MorseCode, char_to_morse } from '../../encode_message/MorseCode.jsx';\nimport { Link } from 'react-router-dom';\n//import data from '../data.json';\n// import { Nav } from \"./Nav\";\nimport { Message } from \"./Message\";\nimport { NavBar } from '../message_page/NavBar.js';\n\n\nexport class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: ''\n    }\n\n    this.deletemessage = this.deletemessage.bind(this);\n    this.editmessage = this.editmessage.bind(this);\n    this.changelocation = this.changelocation.bind(this);\n  }\n\n  componentDidMount() {\n    let key = \"messages\";\n    let messageST = localStorage.getItem(key);\n\n    if (messageST) {\n      let messagesOB = JSON.parse(messageST);\n      const messages = Object.keys(messagesOB).map(obj => messagesOB[obj]);\n      this.setState({ messages });\n    } /*else {\n      window.NativeStorage.getItem(key,\n        (arr) => { this.setState({ messages: arr }) },\n        (error) => { console.log(\"homepage: cant access native storage: \", error) }\n      );\n    }*/\n\n    localStorage.setItem(\"EditMessage\", JSON.stringify(\"\"));\n    localStorage.setItem(\"NewMessage\", JSON.stringify({}));\n  }\n\n  deletemessage(event, itemID, isFav) {\n    event.preventDefault();\n    let key = \"messages\";\n    let messages = this.state.messages;\n    let updatemessages = [];\n\n    messages.map(msg => {\n      if (msg.itemID !== itemID) {\n        updatemessages.push(msg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(updatemessages));\n    this.setState({ messages: updatemessages });\n  }\n\n  editmessage(itemID) {\n    let key = \"EditMessage\";\n    let editMsg = {};\n\n    this.state.messages.map(currMsg => {\n      if (currMsg.itemID === itemID) {\n        editMsg = Object.assign({}, currMsg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(editMsg));\n  }\n\n  changelocation(event, Itemid, isFav) {\n    event.preventDefault();\n    let key = \"messages\";\n    let messages = this.state.messages;\n    let updatemessages = [];\n\n    messages.map(msg => {\n      updatemessages.push(msg);\n      if (msg.itemID === Itemid) {\n        updatemessages[updatemessages.length - 1].isFav = !isFav;\n\n      }\n      //tempmessage=Object.assign({},currMg);\n    });\n\n    localStorage.setItem(key, JSON.stringify(updatemessages));\n    this.setState({ messages: updatemessages });\n  }\n\n  sendMessage = (itemID) => {\n    let key = \"SendMessage\";\n    let sendMsg = {};\n\n    this.state.messages.map(currMsg => {\n      if (currMsg.itemID === itemID) {\n        sendMsg = Object.assign({}, currMsg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(sendMsg));\n  }\n\n  render() {\n    let favmessages = [];\n    let regmessages = [];\n    let msgkeys = Object.keys(this.state.messages)\n\n    msgkeys.forEach(key => {\n      let message = this.state.messages[key];\n      if (message.isFav) {\n        favmessages.push(\n          <Message\n            key={key}\n            isFav={message.isFav}\n            itemID={message.itemID}\n            header={message.header}\n            description={message.description}\n            icon={message.icon}\n            color={message.color}\n            deletemessage={this.deletemessage}\n            editmessage={this.editmessage}\n            changelocation={this.changelocation}\n            sendMessage={this.sendMessage}\n          />);\n      } else {\n        regmessages.push(\n          <Message\n            key={key}\n            isFav={message.isFav}\n            itemID={message.itemID}\n            header={message.header}\n            description={message.description}\n            icon={message.icon}\n            color={message.color}\n            deletemessage={this.deletemessage}\n            editmessage={this.editmessage}\n            changelocation={this.changelocation}\n            sendMessage={this.sendMessage}\n          />);\n      }\n    });\n\n    return (\n      <div style={{ textAlign: \"right\" }}>\n        {/* <Nav /> */}\n        <NavBar />\n        <p> מועדפים </p>\n        <div style={{ textAlign: \"center\" }}>\n          {favmessages}\n        </div>\n\n        <br />\n\n        <p> עוד הודעות </p>\n        <div style={{ textAlign: \"center\" }} >\n          {regmessages}\n        </div>\n\n        <div className=\"container\">\n          <Link to=\"/NewMessage\">\n            <button type=\"button\" className=\"btn btn-secondary btn-lg fixed-bottom btn-block\">הוסף/י הודעה</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\n\nlet deafultcolors = [\n  {\n    colorclass: \"dark\",\n    colorvalue: \"#343a40\"\n  },\n  {\n    colorclass: \"primary\",\n    colorvalue: \"#007bff\"\n\n  },\n  {\n    colorclass: \"success\",\n    colorvalue: \"#28a745\"\n  },\n  {\n\n    colorclass: \"info\",\n    colorvalue: \"#17a2b8\"\n  },\n  {\n    colorclass: \"warning\",\n    colorvalue: \"#ffc107\"\n  },\n  {\n    colorclass: \"danger\",\n    colorvalue: \"#dc3545\"\n  }\n];\n\nexport class Colors extends Component {\n  render() {\n    return (\n      <div>\n        {deafultcolors.map((currcolor) =>\n          <Color\n            colorclass={currcolor.colorclass}\n            colorvalue={currcolor.colorvalue}\n            onclicker={() => this.props.updatecolor(currcolor.colorvalue)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Color extends Component {\n  render() {\n    return (\n      <button\n        type=\"button\"\n        onClick={this.props.onclicker}\n        className={\"btn btn-circle btn-\" + this.props.colorclass}\n      />\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport class FavoriteButton extends Component {\n\n  render() {\n    return (\n      <div className=\"custom-control custom-checkbox\">\n        <input\n          type=\"checkbox\"\n          className=\"custom-control-input\"\n          id=\"defaultUnchecked\"\n          checked={this.props.favbutt}\n          onChange={this.props.onChange}\n        />\n        <label\n          className=\"custom-control-label pull-right\"\n          for=\"defaultUnchecked\">\n          הוספה למועדפים:\n        </label>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './MessagePage.css';\nimport { Link } from 'react-router-dom';\nimport { NavBar } from \"./NavBar\";\nimport { Colors } from \"./Colors\";\nimport { FavoriteButton } from \"./FavoriteButton\";\n\nexport class MessagePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            header: '',\n            color: 'null',\n            isFav: false,\n            description: '',\n            icon: 'ghost',\n            favatfirst: false,\n            itemID: Date.now(),\n            key: \"\", //\"NewMessage\" || \"EditMessage\"\n            messageExists: false,\n        };\n    }\n\n    componentWillMount() {\n        let key = \"NewMessage\";\n        if (this.props.match.params.id) {\n            key = \"EditMessage\";\n        }\n\n        let messageST = localStorage.getItem(key);\n        if (messageST) {\n            let messageOB = JSON.parse(messageST);\n            this.setState({\n                description: messageOB.description,\n                header: messageOB.header,\n                color: messageOB.color,\n                isFav: messageOB.isFav || this.state.isFav,\n                icon: messageOB.icon || this.state.icon,\n                favatfirst: messageOB.isFav,\n                itemID: this.props.match.params.id ? this.props.match.params.id : Date.now(),\n                key: key //\"NewMessage\" || \"EditMessage\"\n            });\n        }\n    }\n\n    //the storage will be updated also when reloading the page\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.updateStorage);\n    }\n\n    componentWillUnmount() {\n        this.updateStorage();\n        window.removeEventListener('beforeunload', this.updateStorage);\n    }\n\n    updateStorage = () => {\n        console.log(\"update storage\");\n        this.updateLocalStorage();\n        //this.updateFileSystem();\n        //this.updateNativeStorage();\n    }\n\n    /*\n    errorHandler = (fileName, e) => {  \n        let msg = '';\n    \n        switch (e.code) {\n            case FileError.QUOTA_EXCEEDED_ERR:\n                msg = 'Storage quota exceeded';\n                break;\n            case FileError.NOT_FOUND_ERR:\n                msg = 'File not found';\n                break;\n            case FileError.SECURITY_ERR:\n                msg = 'Security error';\n                break;\n            case FileError.INVALID_MODIFICATION_ERR:\n                msg = 'Invalid modification';\n                break;\n            case FileError.INVALID_STATE_ERR:\n                msg = 'Invalid state';\n                break;\n            default:\n                msg = 'Unknown error';\n                break;\n        };\n    \n        console.log('Error (' + fileName + '): ' + msg);\n    }\n\n    readFromFile = (fileName, cb) => {\n        var pathToFile = cordova.file.dataDirectory + fileName;\n        window.resolveLocalFileSystemURL(pathToFile, function (fileEntry) {\n            fileEntry.file(function (file) {\n                var reader = new FileReader();\n\n                reader.onloadend = function (e) {\n                    cb(JSON.parse(this.result));\n                };\n\n                reader.readAsText(file);\n            }, this.errorHandler.bind(null, fileName));\n        }, this.errorHandler.bind(null, fileName));\n    }\n\n    onDeviceReady = () => {\n        let fileData;\n        this.readFromFile('data.json', (data) => {\n            fileData = data;\n        });\n    }\n\n    updateFileSystem = () => {\n        document.addEventListener('deviceready', this.onDeviceReady(), false);\n\n        if (localStorage.getItem(\"messages\") != null) {\n            console.log(\"messages\", localStorage.getItem(\"messages\"));\n        }\n    }\n    */\n\n\n    /*\n    updateNativeStorage = () => {\n        if (localStorage.getItem(\"messages\") != null) {\n            console.log(\"messages\", localStorage.getItem(\"messages\"));\n            window.NativeStorage.setItem(\"messages\",\n                localStorage.getItem(\"messages\"),\n                () => { console.log(\"native storage success\") },\n                () => { console.log(\"native storage error\") }\n            );\n        }\n    }*/\n\n    updateLocalStorage = () => {\n        let messageOB = {\n            description: this.state.description,\n            header: this.state.header,\n            color: this.state.color,\n            isFav: this.state.isFav,\n            icon: this.state.icon,\n            itemID: this.state.itemID\n        };\n\n        localStorage.setItem(this.state.key, JSON.stringify(messageOB));\n    }\n\n    updateInfoEvent = (key, event) => {\n        this.setState({ [key]: event.target.value });\n    }\n\n    updateInfoValue = (key, value) => {\n        this.setState({ [key]: value });\n    }\n\n    addtofavorite = () => {\n        this.setState({ isFav: !this.state.isFav });\n    }\n\n    saveMessageData = () => {\n        let key = \"messages\";\n        let msg = {\n            header: this.state.header,\n            description: this.state.description,\n            isFav: this.state.isFav,\n            itemID: this.state.itemID,\n            icon: this.state.icon,\n            color: this.state.color\n        }\n        let messagesArr = [];\n        let tempmessage = [];\n        let messageST = localStorage.getItem(key);\n\n        if (messageST) {\n            let messagesOB = JSON.parse(messageST);\n            messagesArr = Object.keys(messagesOB).map(obj => messagesOB[obj]);\n        }\n\n        let messageExists = this.state.messageExists;\n        //check if the message header already exists in the saved messages\n        messagesArr.map(currmsg => {\n            if (currmsg.header === this.state.header && this.state.key === \"NewMessage\") {\n                messageExists = true;\n                this.setState({ messageExists });\n            }\n        });\n\n        //if the message exists - don't add it again\n        if (messageExists) {\n            alert(\"הודעה זו כבר קיימת במערכת\");\n            return;\n        } else {\n            //if the message has an id then it is an \"EditMessage\" \n            if (this.props.match.params.id) {\n                messagesArr.map(currmsg => {\n                    if (currmsg.itemID == this.props.match.params.id) {\n                        tempmessage.push(msg);\n                    } else {\n                        tempmessage.push(currmsg);\n                    }\n                });\n                localStorage.setItem(key, JSON.stringify(tempmessage));\n            } else { //new message\n                messagesArr.push(msg);\n                localStorage.setItem(key, JSON.stringify(messagesArr));\n            }\n        }\n    }\n\n    render() {\n        return (\n\n            <div>\n                <NavBar history={this.props.history} />\n\n                <div className=\"container\">\n\n                    <label for=\"message-title text-right\">כותרת ההודעה:</label>\n                    <input\n                        type=\"text\"\n                        onChange={(event) => this.updateInfoEvent(\"header\", event)}\n                        className=\"form-control\"\n                        id=\"message-title\"\n                        placeholder=\"הכנס/י כותרת להודעה\"\n                        value={this.state.header}\n                    />\n                    <small className=\"form-text text-muted\">על הכותרת להיות קצרה ותמציתית.</small>\n                    <br />\n\n                    <label for=\"message-description\">תוכן ההודעה:</label>\n                    <input\n                        type=\"text\"\n                        onChange={(event) => this.updateInfoEvent(\"description\", event)}\n                        className=\"form-control\"\n                        id=\"message-description\"\n                        placeholder=\"תוכן ההודעה\"\n                        value={this.state.description}\n                    />\n\n                    <br />\n                    <br />\n\n                    <div className=\"row\">\n                        <div className=\"col-11 text-center\">\n                            <i style={{ color: this.state.color }} className={\"fas fa-\" + this.state.icon + \" fa-5x pull-left\"} />\n                            <br /><br />\n\n                            <Link to={`/${this.state.key}/IconPage${this.state.key === \"EditMessage\" ? \"/\" + this.state.itemID : \"\"}`}>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-info \">\n                                    <i className=\"fas fa-pencil-alt\"></i>\n                                    שנה/י אייקון\n                                </button>\n                            </Link>\n                        </div>\n                    </div>\n\n                    {/* the color picker */}\n                    <input\n                        type=\"color\"\n                        className=\"btn-circle\"\n                        rgba\n                        value={this.state.color}\n                        onChange={(event) => this.updateInfoEvent(\"color\", event)}\n                    />\n                    <br />\n\n                    <Colors updatecolor={(color) => this.updateInfoValue(\"color\", color)} />\n                    <small className=\"form-text text-muted text-center \">ביכולתך לבחור בצבע מוכן מראש או לחילופין לבחור צבע מותאם אישית.</small>\n\n                    <FavoriteButton favbutt={this.state.isFav} onChange={this.addtofavorite} />\n\n                </div>\n\n                {this.state.header && this.state.description ?\n                    <Link to=\"/\">\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-secondary btn-lg btn-block\"\n                            onClick={this.saveMessageData}>\n                            {this.state.key === \"NewMessage\" ? \"הוסף/י\" : \"עדכן/י\"}\n                        </button>\n                    </Link>\n                    : <button\n                        disabled\n                        type=\"submit\"\n                        className=\"btn btn-secondary btn-lg btn-block\">\n                        {this.state.key === \"NewMessage\" ? \"הוסף/י\" : \"עדכן/י\"}\n                    </button>\n                }\n            </div>\n        );\n    }\n}\n\nexport default MessagePage;","import React, { Component } from \"react\";\nimport char_to_morse from \"./morse_code_dict\";\n\nexport class Morse extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textInput: this.props.header,\n            codeArray: [],\n            showCode: false\n        }\n    }\n\n    textToMorse = () => {\n        let message = this.state.textInput;\n        let messageUpper = message.toUpperCase();\n        let codeArray = this.state.codeArray;\n        console.log(\"messageUpper: \", messageUpper);\n\n        for (let i = 0; i < messageUpper.length; i++) {\n            if (messageUpper[i] === \" \") {\n                codeArray.push(<br/>);\n            } else {\n                codeArray.push(char_to_morse[messageUpper[i]] + \" \");\n            }\n        }\n\n        console.log(\"codeArray: \", codeArray);\n        this.setState({ codeArray: codeArray });\n    }\n\n    playMorseSequence = () => {\n        if (this.state.showCode) {\n            return;\n        }\n        this.setState({ showCode: true });\n        this.textToMorse();\n\n        // let codeArray = this.state.codeArray;\n        // let totalLength = codeArray.join('').length - 1;\n\n        // this.tone_updateProgress(totalLength);\n        // this.generateSequence();\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.playMorseSequence}>Send</button>\n                <br />\n                <h1>{this.state.showCode ? this.state.codeArray : \"\"}</h1>\n            </div>\n        );\n    }\n}\n\nexport default Morse;\n","import React, { Component } from 'react';\nimport { NavBar } from '../message_page/NavBar.js';\n// import { MorseCode } from '../../encode_message/MorseCode.jsx';\nimport { Morse } from './Morse.js';\n\nexport class SendPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            header: '',\n            description: '',\n            color: 'null',\n            icon: 'ghost'\n        }\n    }\n\n    componentWillMount() {\n        let key = '';\n        if (this.props.match.params.id) {\n            key = \"SendMessage\";\n        } else {\n            return;\n        }\n\n        let messageST = localStorage.getItem(key);\n        if (messageST) {\n            let messageOB = JSON.parse(messageST);\n            this.setState({\n                header: messageOB.header,\n                description: messageOB.description,\n                color: messageOB.color,\n                icon: messageOB.icon || this.state.icon,\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <NavBar history={this.props.history} />\n                <i style={{ color: this.state.color }} className={\"fas fa-\" + this.state.icon + \" fa-3x\"} />\n                <h4 className=\"mb-3 \">{this.state.header} </h4>\n                <p className=\"mb-1\"> {this.state.description} </p>\n\n                <div dir=\"ltr\">\n                    <Morse header={this.state.header} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SendPage;","import React, { Component } from 'react';\n// import Tone from './ToneReact';\nimport { IconPage } from \"./scenes/icon_page/IconPage\";\nimport { Route, Switch } from 'react-router-dom'\nimport { HomePage } from './scenes/home_page/HomePage.js';\nimport { MessagePage } from './scenes/message_page/MessagePage.js';\nimport { SendPage } from \"./scenes/send_page/SendPage.js\";\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/NewMessage\" component={MessagePage} />\n          <Route exact path=\"/NewMessage/IconPage\" component={IconPage} />\n          <Route exact path=\"/EditMessage/:id\" component={MessagePage} />\n          <Route exact path=\"/EditMessage/IconPage/:id\" component={IconPage} />\n          <Route exact path=\"/SendPage/:id\" component={SendPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\n// const startApp = () => {\n//   console.log(window.NativeStorage);\n  ReactDOM.render((\n    <HashRouter>\n      <App />\n    </HashRouter>\n  ), document.getElementById('root'));\n// }\n\n// if (!window.cordova) {\n//   startApp();\n// } else {\n//   document.addEventListener('deviceready', startApp, false);\n// }\n\n\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n\n"],"sourceRoot":""}