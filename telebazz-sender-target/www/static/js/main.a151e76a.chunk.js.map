{"version":3,"sources":["images/color-picker.png","scenes/NavBar.js","scenes/icon_page/iconsObj.js","scenes/icon_page/Filter.js","scenes/icon_page/Icon.js","scenes/icon_page/Icons.js","scenes/icon_page/IconPage.js","scenes/home_page/MsgCtrlButtons.js","scenes/home_page/Message.js","scenes/InternalStorage.js","scenes/home_page/HomePage.js","scenes/message_page/Colors.js","scenes/message_page/FavoriteButton.js","scenes/message_page/MessagePage.js","scenes/send_page/char_to_binary.js","scenes/send_page/Morse.js","scenes/send_page/SendPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","click","bind","assertThisInitialized","inherits","createClass","key","value","history","location","pathname","includes","goBack","replace","displayPageName","pageName","undefined","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","Component","iconsObj","בעלי חיים","סכנות","דת","רפואה","אוכל","אנשים","מקומות","חפצים","תחביבים","זמן","כלי תחבורה","מטלות","Filter","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","filterCategory","event","checked","target","categoryID","id","categoryFilter","updateCategoryFilter","toConsumableArray","currentIndex","findIndex","element","updatedCategoryFilter","splice","console","log","category","checkedCategory","onChange","htmlFor","Icon","setIcon","iconimage","Icons","showIcons","map","icon","i","Icon_Icon","saveNewIcon","keys","checkCategoryFilter","IconPage","setState","state","chosenIcon","showMenu","closeMenu","match","params","currmessST","localStorage","getItem","currmessOB","JSON","parse","setItem","stringify","_this2","preventDefault","document","addEventListener","_this3","dropdownMenu","contains","removeEventListener","_this4","NavBar_NavBar","ref","Filter_Filter","Icons_Icons","Link","to","MsgCtrlButtons","itemID","editmessage","e","deletemessage","isFav","changelocation","Message","sendMessage","style","color","header","MsgCtrlButtons_MsgCtrlButtons","scenes_InternalStorage","getSampleFile","fileURL","fileName","fetch","then","response","blob","file","saveFile","fileContent","cb","window","requestFileSystem","LocalFileSystem","PERSISTENT","fs","root","getFile","create","exclusive","fileEntry","createWriter","fileWriter","onwriteend","onerror","toString","write","err","readFile","reader","FileReader","onloadend","result","readAsText","HomePage","initializeUserData","Messages","saveMessagesToInternalStorage","updatemessages","InternalStorage","SETTINGS_FILE","initializeInternalStorage","userData","messages","sendMsg","currMsg","assign","msg","push","editMsg","Itemid","favmessages","regmessages","forEach","message","getMessage","Message_Message","textAlign","deafultcolors","colorclass","colorvalue","Colors","currcolor","Colors_Color","onclicker","updatecolor","Color","FavoriteButton","favbutt","MessagePage","updateLocalStorage","messageOB","updateStorage","saveMessageData","messagesArr","tempmessage","messageExists","currmsg","alert","_a","updateInfoEvent","defineProperty","updateInfoValue","addtofavorite","favatfirst","Date","now","messageST","placeholder","maxLength","Colors_Colors","src","require","FavoriteButton_FavoriteButton","disabled","char_to_binary","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","Morse","textToMorse","messageUpper","textInput","toUpperCase","codeString","playBit","currentChar","context","AudioContext","osc","createOscillator","frequency","FREQUENCY_RATE","connect","destination","createGain","gain","start","stop","TIME_INTERVAL","onended","close","setTimeout","fetchNextBit","charsArr","shift","bitIndex","playMorseSequence","isDone","currentBit","iterateChars","generateMorseSequence","messageEnded","messageError","SendPage","Morse_Morse","App","HashRouter","Switch","Route","exact","path","component","Boolean","hostname","startApp","ReactDOM","render","src_App_0","getElementById","cordova","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a151e76a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/color-picker.0fc36b2a.png\";","import React, { Component } from 'react';\n\nexport class NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.click = this.click.bind(this);\n  }\n\n  click() {\n    if (this.props.history.location.pathname.includes(\"IconPage\")) {\n      this.props.history.goBack();\n    } else if (this.props.history.location.pathname.includes(\"NewMessage\") || this.props.history.location.pathname.includes(\"EditMessage\")) {\n      this.props.history.replace(\"/\");\n    } else {\n      this.props.history.goBack();\n    }\n  }\n\n  render() {\n    //define the name of the page to show on the top navigation bar\n    let pageName = this.props.pageName;\n    let displayPageName = '';\n    switch (pageName) {\n      case \"HomePage\":\n        displayPageName = \"Telebuzz\";\n        break;\n      case \"NewMessage\":\n        displayPageName = \"הודעה חדשה\";\n        break;\n      case \"EditMessage\":\n        displayPageName = \"עריכת הודעה\";\n        break;\n      case \"IconPage\":\n        displayPageName = \"בחירת אייקון\";\n        break;\n      case \"SendPage\":\n        displayPageName = \"שולח הודעה\";\n        break;\n      default:\n        displayPageName = \"\";\n    }\n\n    if (this.props.history === undefined) {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\">\n           {/* data-sidebarClass=\"navbar-dark bg-dark\"> */}\n            <a className=\"navbar-brand\" href=\"#\">{displayPageName}</a>\n          </nav>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\" >\n          {/* data-sidebarClass=\"navbar-dark bg-dark\"> */}\n            <div className=\"navbar-brand\" href=\"#\">{displayPageName}</div>\n            <button\n              className=\"navbar-toggler leftNavbarToggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarsExampleDefault\"\n              aria-controls=\"navbarsExampleDefault\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\">\n              <span>\n                <div\n                  onClick={this.click}\n                  className=\"text-light\">\n                  <i className=\"fas fa-arrow-left\" />\n                </div>\n              </span>\n            </button>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n","// export const iconsObj = {\n//     \"בעלי חיים\": [\"cat\", \"dog\", \"horse\"],\n//     \"סכנות\": [\"fire\", \"bolt\", \"ghost\"],\n//     \"דת\": [\"cross\", \"menorah\", \"pray\", \"bible\"],\n//     \"רפואה\": [\"pills\", \"cannabis\", \"capsules\"],\n//     \"אוכל\": [\"lemon\", \"drumstick-bite\", \"cookie\"],\n//     \"אנשים\": [\"user-injured\", \"user-tie\", \"blind\"],\n//     \"מקומות\": [\"university\", \"church\", \"hospital\", \"home\"],\n//     \"חפצים\": [\"toilet-paper\", \"bed\", \"basketball-ball\", \"microscope\"]\n// }\n\nexport const iconsObj = {\n    \"בעלי חיים\": [\"cat\", \"dog\", \"horse\", \"bug\"],\n    \"סכנות\": [\"fire\", \"bolt\", \"bomb\", \"ban\", \"hand-paper\"],\n    \"דת\": [\"menorah\"],\n    \"רפואה\": [\"capsules\"],\n    \"אוכל\": [\"lemon\", \"carrot\", \"drumstick-bite\", \"cookie\", \"beer\", \"birthday-cake\"],\n    \"אנשים\": [\"user-injured\", \"user-tie\", \"blind\"],\n    \"מקומות\": [\"university\", \"hospital\", \"home\"],\n    \"חפצים\": [\"bed\", \"bell\", \"camera\"],\n    \"תחביבים\": [\"basketball-ball\", \"book-reader\", \"bowling-ball\", \"chess\"],\n    \"זמן\": [\"calendar-week\", \"battery-half\", \"clock\"],\n    \"כלי תחבורה\": [\"bus\", \"bicycle\", \"car\"],\n    \"מטלות\": [\"broom\", \"cart-plus\", \"chalkboard-teacher\"]\n}\n\nexport default iconsObj;","import React, { Component } from 'react';\nimport './IconPage.css';\n\nexport class Filter extends Component {\n    \n    filterCategory = (event) => {\n        let checked = event.target.checked;\n        let categoryID = event.target.id;\n        let categoryFilter = this.props.categoryFilter;\n\n        if (checked && !categoryFilter.includes(categoryID)) {\n            this.props.updateCategoryFilter([...this.props.categoryFilter, categoryID]);\n        } else {\n            let currentIndex = categoryFilter.findIndex((element) => {\n                return element === categoryID;\n            });\n\n            if (currentIndex < 0) {\n                return;\n            } else {\n                let updatedCategoryFilter = this.props.categoryFilter;\n                updatedCategoryFilter.splice(currentIndex, 1);\n                this.props.updateCategoryFilter(updatedCategoryFilter);\n            }\n        }\n        console.log(\"category: \", this.props.category);\n    }\n\n    checkedCategory = () => {\n        if(this.props.categoryFilter.includes(this.props.category)){\n            return true;\n        } \n        return false;\n    }\n\n    render() {\n        return (\n            <div className=\"custom-control custom-checkbox dropdown-item\">\n                {this.checkedCategory() ?\n                    <input\n                        type=\"checkbox\"\n                        id={this.props.category}\n                        className=\"custom-control-input\"\n                        onChange={this.filterCategory}\n                        checked\n                    />\n                    : <input\n                        type=\"checkbox\"\n                        id={this.props.category}\n                        className=\"custom-control-input\"\n                        onChange={this.filterCategory}\n                    />\n                }\n                <label\n                    className=\"custom-control-label pull-right\"\n                    htmlFor={this.props.category}>\n                    <p className=\"icon-name\" htmlFor={this.props.category}>\n                        {this.props.category}\n                    </p>\n                </label>\n            </div>\n        );\n    }\n}\n\nexport default Filter;","import React, { Component } from 'react';\nimport './IconPage.css';\n\nexport class Icon extends Component {\n    render() {\n        return (\n            <button\n                onClick={this.props.setIcon}\n                id={this.props.category}\n                type=\"button\"\n                className=\"btn btn-default iconButton\" >\n\n                <i className={\"fas fa-\" + this.props.iconimage + \" fa-3x\"}></i>\n            </button>\n        );\n    }\n}\n\nexport default Icon;","import React, { Component } from 'react';\nimport './IconPage.css';\nimport iconsObj from './iconsObj';\nimport { Icon } from './Icon';\n\nexport class Icons extends Component {\n    checkCategoryFilter() {\n        let showIcons =\n            (category) => iconsObj[category].map(\n                (icon, i) =>\n                    <Icon\n                        key={i} //each child in an array or iterator should have a unique key prop\n                        iconimage={icon}\n                        category={category}\n                        setIcon={() => this.props.setIcon(icon)}\n                        saveNewIcon={() => this.props.saveNewIcon()}\n                    />\n            );\n\n        if (this.props.categoryFilter.length === 0) {\n            return (Object.keys(iconsObj).map(showIcons));\n        } else {\n            return (this.props.categoryFilter.map(showIcons));\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.checkCategoryFilter()}\n            </div>\n        );\n    }\n}\n\nexport default Icons;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavBar } from '../NavBar';\nimport iconsObj from './iconsObj';\nimport { Filter } from './Filter';\nimport { Icons } from './Icons';\nimport './IconPage.css';\n\nexport class IconPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryFilter: [],\n      chosenIcon: \"\",\n      showMenu: false\n    }\n\n    // this.filterCategory = this.filterCategory.bind(this);\n    this.setIcon = this.setIcon.bind(this);\n    this.saveNewIcon = this.saveNewIcon.bind(this);\n    this.showMenu = this.showMenu.bind(this);\n    this.closeMenu = this.closeMenu.bind(this);\n  }\n\n  updateCategoryFilter = (categoryFilter) => {\n    this.setState({ categoryFilter });\n    console.log(\"categoryFilter: \", categoryFilter);\n    console.log(\"iconsObj: \", iconsObj);\n  }\n\n  saveNewIcon() {\n    const key = this.props.match.params.id ? \"EditMessage\" : \"NewMessage\";\n    let currmessST = localStorage.getItem(key);\n    let currmessOB = JSON.parse(currmessST);\n\n    if (currmessOB == \"\")\n      currmessOB = {};\n    if (this.state.chosenIcon != \"\") {\n      currmessOB.icon = this.state.chosenIcon;\n    }\n\n    localStorage.setItem(key, JSON.stringify(currmessOB));\n    this.setIcon(\"\");\n  }\n\n  setIcon(chosenIcon) {\n    this.setState({ chosenIcon });\n  }\n\n  showMenu(event) {\n    event.preventDefault();\n\n    this.setState({ showMenu: true }, () => {\n      document.addEventListener('click', this.closeMenu);\n    });\n  }\n\n  closeMenu(event) {\n    if (!this.dropdownMenu.contains(event.target)) {\n      this.setState({ showMenu: false }, () => {\n        document.removeEventListener('click', this.closeMenu);\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar pageName=\"IconPage\" history={this.props.history} />\n        <div className=\"container\">\n          <h3>איזה אייקון תרצו להציג?</h3>\n          <div className=\"dropdown show text-center\">\n            <div>\n              <button\n                className=\"btn btn-secondary dropdown-toggle \"\n                id=\"dropdownFilterIcon\"\n                onClick={this.showMenu}>\n                סנן/י\n              </button>\n\n              {this.state.showMenu\n                ? <div className=\"dropdown-filter-menu\"\n                  ref={(element) => {\n                    this.dropdownMenu = element;\n                  }}\n                >\n                  {Object.keys(iconsObj).map((category, i) =>\n                    <Filter\n                      key={i} //each child in an array or iterator should have a unique key prop\n                      categoryFilter={this.state.categoryFilter}\n                      updateCategoryFilter={this.updateCategoryFilter}\n                      category={category}\n                    />\n                  )}\n                </div>\n                : null\n              }\n            </div>\n          </div>\n\n          <br />\n\n          <div className=\"scrollIcons\">\n            {/* <div className=\"row\"> */}\n              {/* <div className=\"col-sm\"> */}\n                <Icons\n                  categoryFilter={this.state.categoryFilter}\n                  setIcon={this.setIcon}\n                  saveNewIcon={this.saveNewIcon}\n                />\n              {/* </div> */}\n            {/* </div> */}\n          </div>\n          <br />\n          <Link to={`${this.props.match.params.id ? `/EditMessage/${this.props.match.params.id}` : '/NewMessage'}`}>\n            <button\n              type=\"button\"\n              className=\"btn btn-info btn-lg btn-block\"\n              onClick={this.saveNewIcon}>\n              המשך\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IconPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomePage.css';\n\nexport class MsgCtrlButtons extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showMenu: false,\n        };\n\n        this.showMenu = this.showMenu.bind(this);\n        this.closeMenu = this.closeMenu.bind(this);\n    }\n\n    showMenu(event) {\n        event.preventDefault();\n\n        this.setState({ showMenu: true }, () => {\n            document.addEventListener('click', this.closeMenu);\n        });\n    }\n\n    closeMenu() {\n        this.setState({ showMenu: false }, () => {\n            document.removeEventListener('click', this.closeMenu);\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <button\n                    onClick={this.showMenu}\n                    className=\"btn btn-secondary dropdown-toggle\"\n                    type=\"button\"\n                />\n\n                {this.state.showMenu\n                    ?\n                    <div className=\"dropdown-message-menu\">\n                        <Link to={`/EditMessage/${this.props.itemID}`}>\n                            <button\n                                onClick={() =>\n                                    this.props.editmessage(this.props.itemID)}\n                                className=\"dropdown-item btn btn-primary dropdown-msg-control-item\" >\n                                ערוך/י\n                            </button>\n                        </Link>\n\n                        <button\n                            onClick={(e) =>\n                                this.props.deletemessage(e, this.props.itemID, this.props.isFav)}\n                            className=\"dropdown-item btn btn-primary dropdown-msg-control-item\" >\n                            מחק/י\n                        </button>\n                        {this.props.isFav ?\n                            <button\n                                onClick={(e) =>\n                                    this.props.changelocation(e, this.props.itemID, this.props.isFav)}\n                                className=\"dropdown-item btn btn-primary dropdown-msg-control-item\" >\n                                הסר/י ממועדפים\n                            </button>\n                            :\n                            <button\n                                onClick={(e) =>\n                                    this.props.changelocation(e, this.props.itemID, this.props.isFav)}\n                                className=\"dropdown-item btn btn-primary dropdown-msg-control-item\" >\n                                הוסף/י למועדפים\n                            </button>\n                        }\n                    </div>\n                    : null\n                }\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MsgCtrlButtons } from \"./MsgCtrlButtons\";\nimport './HomePage.css';\n\nexport class Message extends Component {\n    render() {\n        return (\n            <div className=\"list-group\">\n                <Link\n                    to={`/SendPage/${this.props.itemID}`}\n                    onClick={() => this.props.sendMessage(this.props.itemID)}\n                >\n                    <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                        <div className=\"message-container d-flex w-100 justify-content-between\">\n                            <i style={{ color: this.props.color }} className={\"fas fa-\" + this.props.icon + \" fa-3x\"} />\n                            <h4 className=\"mb-3 message-text\">{this.props.header} </h4>\n                            <MsgCtrlButtons\n                                itemID={this.props.itemID}\n                                deletemessage={this.props.deletemessage}\n                                editmessage={this.props.editmessage}\n                                isFav={this.props.isFav}\n                                changelocation={this.props.changelocation}\n                            />\n                        </div>\n                    </div>\n                </Link>\n            </div>\n        );\n    }\n}\n\n","class InternalStorage {\n\n    //WRITE TO FILE SYSTEM\n\n    getSampleFile = (fileURL, fileName) => {\n        console.log(\"fileURL\", fileURL);\n        // get image from url\n        fetch(fileURL)\n            //turn the image into binary information (similar to base 64)\n            .then(response => response.blob())\n            .then(file => {\n                // Then create a local URL for that image and print it\n\n                console.log(\"image?!\", file);\n                this.saveFile(file, fileName);\n            })\n    }\n\n    saveFile = (fileContent, fileName, cb) => {\n        //access phone’s file system\n        window.requestFileSystem(window.LocalFileSystem.PERSISTENT, 0, (fs) => {\n\n            // console.log('Request file system succeed, file system open: ' + fs.name);\n            //create new file in the file system which is accessible to this cordova app only\n\n            fs.root.getFile(fileName, { create: true, exclusive: false }, (fileEntry) => {\n                // console.log(\"fileEntry is file?\" + fileEntry.isFile.toString());\n                //erite to that file we have created\n                fileEntry.createWriter(fileWriter => {\n                    fileWriter.onwriteend = () => {\n                        // console.log(\"Successful file write...\");\n                        if(cb && typeof(cb) == \"function\"){\n                            cb(fileContent);\n                        }\n                    };\n                    fileWriter.onerror = e => {\n                        console.log(\"Failed file write: \" + e.toString());\n                    };\n\n                    fileWriter.write(fileContent);\n                });\n\n            }, (err) => {\n                console.log(\"Error creating a new file, with err\", err);\n            });\n\n        }, (err) => {\n            console.log(\"Error requesting file system ?! with err\", err);\n        });\n    }\n\n    //READ FROM FILE SYSTEM\n\n    readFile = (fileName, cb) => {\n        //accessing file system\n        window.requestFileSystem(window.LocalFileSystem.PERSISTENT, 0, (fs) => {\n            // console.log('Request file system succeed, file system open: ' + fs.name);\n            //get wanted file\n\n            fs.root.getFile(fileName, { create: true, exclusive: false }, fileEntry => {\n                \n                //Do something with the file/image (ex. save to state)\n\n                // var self = this;\n\n                //var displayImage = function (imageContent) {\n                //console.log(\"fileEntry on displayImage\", fileEntry);\n                // localStorage.setItem(\"messages\", JSON.stringify(imageContent));\n                // self.setState({ loadedImg: fileEntry.nativeURL });\n                //}\n\n                fileEntry.file(function (file) {\n\n                    let reader = new FileReader();\n\n                    reader.onloadend = () => {\n                        // console.log(\"Successful file read: \" + reader.result);\n                        //displayImage(reader.result);\n                        cb(reader.result);\n                    };\n\n                    reader.readAsText(file);\n\n                }, err => {\n                    console.log(\"Could not read file, err: \", err);\n\n                });\n\n            });\n\n        });\n    }\n}\n\nexport default new InternalStorage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Message } from \"./Message\";\nimport { NavBar } from '../NavBar.js';\nimport InternalStorage from \"../InternalStorage.js\";\nimport \"./HomePage.css\";\n\nexport class HomePage extends Component {\n\n  static SETTINGS_FILE = \"UserData.json\"\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [] \n    }\n\n    this.deletemessage = this.deletemessage.bind(this);\n    this.editmessage = this.editmessage.bind(this);\n    this.changelocation = this.changelocation.bind(this);\n  }\n\n  initializeUserData = () => {\n    return {\n      Messages: []\n    };\n  }\n\n  saveMessagesToInternalStorage = (updatemessages) => {\n    InternalStorage.saveFile({ Messages: updatemessages }, HomePage.SETTINGS_FILE);\n  }\n\n  initializeInternalStorage = () => {\n    \n    InternalStorage.readFile(HomePage.SETTINGS_FILE, (userData) => {\n      if (userData == \"\") {\n        console.log(\"saving info to UserData.json\");\n        userData = this.initializeUserData();\n        InternalStorage.saveFile(userData, HomePage.SETTINGS_FILE);\n      } else {\n        userData = JSON.parse(userData);\n        this.setState({ messages: userData.Messages });\n      }\n    });\n\n    localStorage.setItem(\"EditMessage\", JSON.stringify(\"\"));\n    localStorage.setItem(\"NewMessage\", JSON.stringify({}));\n    localStorage.setItem(\"SendMessage\", JSON.stringify(\"\"));\n  }\n\n  componentWillMount() {\n    \n    // this.initializeInternalStorage();\n\n    this.setState({messages:\n      [{header: \"Lalala\", isFav: false, itemID: 1546962908635111, icon: \"ghost\"},\n      {header: \"foo foo foo \", isFav: false, itemID: 1546962908635, icon: \"ghost\"}]\n  });\n  }\n\n  // componentDidMount(){\n    // this.initializeInternalStorage();\n  // }\n\n  deletemessage(event, itemID, isFav) {\n    event.preventDefault();\n\n    let messages = this.state.messages;\n    let updatemessages = [];\n\n    messages.map(msg => {\n      if (msg.itemID !== itemID) {\n        updatemessages.push(msg);\n      }\n    });\n\n    this.saveMessagesToInternalStorage(updatemessages);\n    this.setState({ messages: updatemessages });\n  }\n\n  editmessage(itemID) {\n    let key = \"EditMessage\";\n    let editMsg = {};\n\n    this.state.messages.map(currMsg => {\n      if (currMsg.itemID === itemID) {\n        editMsg = Object.assign({}, currMsg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(editMsg));\n  }\n\n\n  //this function changes between favorite messages and regular messages\n  changelocation(event, Itemid, isFav) {\n    event.preventDefault();\n\n    let messages = this.state.messages;\n    let updatemessages = [];\n\n    messages.map(msg => {\n      updatemessages.push(msg);\n      if (msg.itemID === Itemid) {\n        updatemessages[updatemessages.length - 1].isFav = !isFav;\n      }\n    });\n\n    this.saveMessagesToInternalStorage(updatemessages);\n    this.setState({ messages: updatemessages });\n  }\n\n  sendMessage = (itemID) => {\n    console.log(\"is send message launched?!\");\n    let key = \"SendMessage\";\n    let sendMsg = {};\n\n    this.state.messages.map(currMsg => {\n      if (currMsg.itemID === itemID) {\n        sendMsg = Object.assign({}, currMsg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(sendMsg));\n  }\n\n  render() {\n    let favmessages = [];\n    let regmessages = [];\n    let msgkeys = Object.keys(this.state.messages)\n\n    msgkeys.forEach(key => {\n      let message = this.state.messages[key];\n\n      let getMessage = (\n        <Message\n          key={key}\n          isFav={message.isFav}\n          itemID={message.itemID}\n          header={message.header}\n          icon={message.icon}\n          color={message.color}\n          deletemessage={this.deletemessage}\n          editmessage={this.editmessage}\n          changelocation={this.changelocation}\n          sendMessage={this.sendMessage}\n        />);\n\n      if (message.isFav) {\n        favmessages.push(getMessage);\n      } else {\n        regmessages.push(getMessage);\n      }\n    });\n\n    return (\n      <div style={{ textAlign: \"right\" }}>\n        {/* <Nav /> */}\n        <NavBar pageName=\"HomePage\" />\n\n        {/* if there are no messages at all */}\n        {!favmessages[0] && !regmessages[0] ?\n          <Link to=\"/NewMessage\">\n            <button\n              type=\"button\"\n              className=\"new-message-btn\">\n              <i className=\"fas fa-plus\" />\n            </button>\n          </Link>\n          : null\n        }\n\n        {/* if there are no favorite messages */}\n        {favmessages[0] ?\n          <div>\n            <p className=\"main-title-messages\"> מועדפים </p>\n            <div style={{ textAlign: \"center\" }}>\n              {favmessages}\n            </div>\n          </div>\n          : <div></div>\n        }\n\n        {/* if there are no regular messages */}\n        {regmessages[0] ?\n          <div>\n            <p className=\"main-title-messages\"> ההודעות שלי </p>\n            <div style={{ textAlign: \"center\" }} >\n              {regmessages}\n            </div>\n          </div>\n          : <div></div>\n        }\n\n        <div className=\"container\">\n          <Link to=\"/NewMessage\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary btn-lg fixed-bottom btn-block\">\n              הוסף/י הודעה\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport './MessagePage.css';\n\nlet deafultcolors = [\n  {\n    colorclass: \"dark\",\n    colorvalue: \"#343a40\"\n  },\n  {\n    colorclass: \"primary\",\n    colorvalue: \"#007bff\"\n\n  },\n  {\n    colorclass: \"success\",\n    colorvalue: \"#28a745\"\n  },\n  {\n\n    colorclass: \"info\",\n    colorvalue: \"#17a2b8\"\n  },\n  {\n    colorclass: \"warning\",\n    colorvalue: \"#ffc107\"\n  },\n  {\n    colorclass: \"danger\",\n    colorvalue: \"#dc3545\"\n  }\n];\n\nexport class Colors extends Component {\n  render() {\n    return (\n      <div className=\"colors\">\n        {deafultcolors.map((currcolor, i) =>\n          <Color\n            key={i} //each child in an array or iterator should have a unique key prop\n            colorclass={currcolor.colorclass}\n            colorvalue={currcolor.colorvalue}\n            onclicker={() => this.props.updatecolor(currcolor.colorvalue)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Color extends Component {\n  render() {\n    return (\n      <button\n        id=\"color\"\n        type=\"button\"\n        onClick={this.props.onclicker}\n        className={\"btn btn-circle btn-\" + this.props.colorclass}\n      />\n    );\n  }\n}","import React, { Component } from 'react';\nimport './MessagePage.css';\n\nexport class FavoriteButton extends Component {\n\n  render() {\n    return (\n      // <div>\n      //   <button className=\"add-to-favorites\">הוספה למועדפים:</button>\n      // </div>\n      <div className=\"custom-control custom-checkbox\">\n        <input\n          type=\"checkbox\"\n          className=\"custom-control-input\"\n          id=\"defaultUnchecked\"\n          checked={this.props.favbutt}\n          onChange={this.props.onChange}\n        />\n        <label\n          className=\"custom-control-label pull-right\"\n          htmlFor=\"defaultUnchecked\">\n          <p className=\"add-to-favorites-lable\">\n            הוספה למועדפים:\n          </p>\n        </label>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './MessagePage.css';\nimport { Link } from 'react-router-dom';\nimport { NavBar } from \"../NavBar\";\nimport { Colors } from \"./Colors\";\nimport { FavoriteButton } from \"./FavoriteButton\";\nimport InternalStorage from \"../InternalStorage.js\";\nimport HomePage from \"./../home_page/HomePage\";\n\nexport class MessagePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            header: '',\n            color: 'null',\n            isFav: false,\n            icon: 'ghost',\n            favatfirst: false,\n            itemID: Date.now(),\n            key: \"\" //\"NewMessage\" || \"EditMessage\"\n        };\n    }\n\n    // Gets the values from the Local Storage\n    componentWillMount() {\n        let key = \"NewMessage\";\n        if (this.props.match.params.id) {\n            key = \"EditMessage\";\n        }\n\n        let messageST = localStorage.getItem(key);\n        if (messageST) {\n            let messageOB = JSON.parse(messageST);\n            this.setState({\n                header: messageOB.header,\n                color: messageOB.color,\n                isFav: messageOB.isFav || this.state.isFav,\n                icon: messageOB.icon || this.state.icon,\n                favatfirst: messageOB.isFav,\n                itemID: this.props.match.params.id ? this.props.match.params.id : Date.now(),\n                key: key //\"NewMessage\" || \"EditMessage\"\n            });\n        }\n    }\n\n    // Adding Event Listener so the storage will be updated\n    // if the component will unmount\n    componentDidMount() {\n        window.addEventListener(\"beforeunload\", this.updateStorage);\n    }\n\n    componentWillUnmount() {\n        this.updateStorage();\n        window.removeEventListener('beforeunload', this.updateStorage);\n    }\n\n    updateLocalStorage = (messageOB) => {\n        localStorage.setItem(this.state.key, JSON.stringify(messageOB));\n    }\n\n    updateStorage = () => {\n        let messageOB = {\n            header: this.state.header,\n            color: this.state.color,\n            isFav: this.state.isFav,\n            icon: this.state.icon,\n            itemID: this.state.itemID\n        };\n\n        this.updateLocalStorage(messageOB);\n    }\n\n    saveMessageData = () => {\n        let msg = {\n            header: this.state.header,\n            isFav: this.state.isFav,\n            itemID: this.state.itemID,\n            icon: this.state.icon,\n            color: this.state.color\n        }\n        let messagesArr = [];\n        let tempmessage = [];\n\n        InternalStorage.readFile(HomePage.SETTINGS_FILE, (userData) => {\n            userData = JSON.parse(userData);\n            messagesArr = userData.Messages;\n\n            let messageExists = false;\n\n            //check if the message header already exists in the saved messages\n            messagesArr.map(currmsg => {\n                if (currmsg.header === this.state.header && this.state.key === \"NewMessage\") {\n                    messageExists = true;\n                }\n            });\n\n            //if the message exists - don't add it again\n            if (messageExists) {\n                alert(\"הודעה זו כבר קיימת במערכת\");\n                this.props.history.push('/');\n            } else {\n                //if the message has an id then it is an \"EditMessage\" \n                if (this.props.match.params.id) {\n                    messagesArr.map(currmsg => {\n                        if (currmsg.itemID == this.props.match.params.id) {\n                            tempmessage.push(msg);\n                        } else {\n                            tempmessage.push(currmsg);\n                        }\n                    });\n                    messagesArr = tempmessage;\n                } else { //new message\n                    messagesArr.push(msg);\n                }\n\n                InternalStorage.saveFile({ Messages: messagesArr }, HomePage.SETTINGS_FILE, (_a) => {\n                    this.props.history.push(\"/\");\n                });\n            }\n        })\n\n    }\n\n    updateInfoEvent = (key, event) => {\n        this.setState({ [key]: event.target.value });\n    }\n\n    updateInfoValue = (key, value) => {\n        this.setState({ [key]: value });\n    }\n\n    addtofavorite = () => {\n        this.setState({ isFav: !this.state.isFav });\n    }\n\n  \n\n    render() {\n        return (\n\n            <div>\n                <NavBar pageName={this.state.key} history={this.props.history} />\n\n                <div className=\"container\">\n\n                    <label htmlFor=\"message-title text-right\">ההודעה:</label>\n                    <input\n                        type=\"text\"\n                        onChange={(event) => this.updateInfoEvent(\"header\", event)}\n                        className=\"form-control\"\n                        id=\"message-title\"\n                        placeholder=\"הכנס/י הודעה\"\n                        value={this.state.header}\n                        maxLength=\"30\"\n                    />\n                    <small className=\"form-text text-muted\">על ההודעה להיות קצרה ותמציתית.</small>\n                    <br />\n\n                    <div className=\"row\">\n                        <div className=\"col-11 text-center\">\n                            <i style={{ color: this.state.color }} className={\"fas fa-\" + this.state.icon + \" fa-5x pull-left\"} />\n                            <br /><br />\n\n                            <Link to={`/${this.state.key}/IconPage${this.state.key === \"EditMessage\" ? \"/\" + this.state.itemID : \"\"}`}>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-info \">\n                                    <i className=\"fas fa-pencil-alt\"></i>\n                                    שנה/י אייקון\n                                </button>\n                            </Link>\n                        </div>\n                    </div>\n\n                    {/* the color picker */}\n\n                    <div className=\"colors-container\">\n                        <Colors updatecolor={(color) => this.updateInfoValue(\"color\", color)} />\n\n                        <div className=\"color-picker-container\">\n                            <img\n                                id=\"color-picker-img\"\n                                src={require('../../images/color-picker.png')}\n                            />\n                            <input\n                                id=\"color-picker\"\n                                className=\"btn-circle\"\n                                value=\"fff\"\n                                // value={this.state.color}\n                                onChange={(event) => this.updateInfoEvent(\"color\", event)}\n                                type=\"color\"\n                            />\n                        </div>\n                    </div>\n                    <small className=\"form-text text-muted text-center \">ביכולתך לבחור בצבע מוכן מראש או לחילופין לבחור צבע מותאם אישית.</small>\n\n                    <br />\n\n                    <FavoriteButton favbutt={this.state.isFav} onChange={this.addtofavorite} />\n\n                </div>\n\n                {this.state.header ?\n                    // <Link to=\"/\">\n                    <button\n                        type=\"submit\"\n                        className=\"submit-message-button btn btn-secondary btn-lg btn-block fixed-bottom\"\n                        onClick={this.saveMessageData}>\n                        {this.state.key === \"NewMessage\" ? \"הוסף/י\" : \"עדכן/י\"}\n                    </button>\n                    // </Link>\n                    : <button\n                        disabled\n                        type=\"submit\"\n                        className=\"submit-message-button btn btn-secondary btn-lg btn-block fixed-bottom\">\n                        {this.state.key === \"NewMessage\" ? \"הוסף/י\" : \"עדכן/י\"}\n                    </button>\n                }\n            </div>\n        );\n    }\n}\n\nexport default MessagePage;","export const char_to_binary = {\n    //The numbers 1-26 in binary (for A-Z)\n    'A': \"00001\",\n    'B': \"00010\",\n    'C': \"00011\",\n    'D': \"00100\",\n    'E': \"00101\",\n    'F': \"00110\",\n    'G': \"00111\",\n    'H': \"01000\",\n    'I': \"01001\",\n    'J': \"01010\",\n    'K': \"01011\",\n    'L': \"01100\",\n    'M': \"01101\",\n    'N': \"01110\",\n    'O': \"01111\",\n    'P': \"10000\",\n    'Q': \"10001\",\n    'R': \"10010\",\n    'S': \"10011\",\n    'T': \"10100\",\n    'U': \"10101\",\n    'V': \"10110\",\n    'W': \"10111\",\n    'X': \"11000\",\n    'Y': \"11001\",\n    'Z': \"11010\",\n    ' ': \"@@@@@\"\n}\n\nexport default char_to_binary;","import React, { Component } from \"react\";\nimport char_to_binary from \"./char_to_binary\";\nimport { setTimeout } from \"timers\";\n\nimport \"./SendPage.css\";\n\nexport class Morse extends Component {\n\n    static FREQUENCY_RATE = 700;\n    static TIME_INTERVAL = 100;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            textInput: this.props.header,\n            messageEnded: false,\n            messageError: false\n        }\n\n        this.codeString = \"\";\n    }\n\n    componentWillMount() {\n        console.log(\"textInput\", this.state.textInput);\n        this.generateMorseSequence();\n    }\n\n    textToMorse = () => {\n        let message = this.state.textInput;\n        let messageUpper = message.toUpperCase();\n        console.log(\"messageUpper: \", messageUpper);\n\n        for (let i = 0; i < messageUpper.length; i++) {\n            this.codeString += char_to_binary[messageUpper[i]] + \"~\";\n        }\n    }\n\n    playBit = (currentChar, cb) => {\n        console.log(\"Playing bit:%s\", currentChar);\n        if (currentChar == 1) {\n            var context = new AudioContext();\n            var osc = context.createOscillator();\n            osc.type = \"sine\";\n            osc.frequency.value = Morse.FREQUENCY_RATE;\n            osc.connect(context.destination);\n            \n            let g = context.createGain();\n            g.gain.value = 1;\n            \n            osc.start(); //now -> time = 0\n            osc.stop(Morse.TIME_INTERVAL / 1000);\n            osc.onended = () => {\n                console.log(\"on ended is launched\");\n                context.close();\n                setTimeout(() => {\n                    cb();\n                }, Morse.TIME_INTERVAL);\n            }\n            return;\n        }\n\n        setTimeout(() => {\n            cb();\n        }, Morse.TIME_INTERVAL * 2);\n    }\n\n    fetchNextBit = (currentChar) => {\n        if (currentChar.length != 0) {\n\n        } else {\n            currentChar = this.charsArr.shift();\n            this.bitIndex = 0;\n\n        }\n\n        this.bitIndex++;\n    }\n    playMorseSequence = () => {\n        console.log(\"playMorseSequence is launched\");\n        let isDone = false;\n\n        let i = 0;\n        let currentBit = this.codeString[0];\n\n\n        let iterateChars = () => {\n\n            currentBit = this.codeString[i];\n            this.playBit(currentBit, () => {\n\n                if (this.codeString[i + 1]) {\n                    i++;\n                    return iterateChars();\n                } else {\n                    console.log(\"Done playing message\");\n                    isDone = true;\n\n                    // setTimeout(() => {\n                    //     this.props.history.push('/');\n                    // }, 2000);\n                }\n\n            });\n        }\n\n        if (!isDone) {\n            iterateChars();\n        }\n    }\n\n    generateMorseSequence = () => {\n        ///HERE\n        this.textToMorse();\n        console.log(\"this.codeString (binary message)\", this.codeString);\n        this.playMorseSequence();\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.messageEnded ?\n                    <div>\n                        <div className=\"loading-check\">\n                            <i className=\"fa fa-check\" />\n                        </div>\n                        <p className=\"message-status\">ההודעה נשלחה בהצלחה</p>\n                    </div>\n                    :\n                    <div>\n                        <div className=\"loading-spinner\">\n                            <i className=\"fa fa-spinner fa-spin\" />\n                        </div>\n                        <p className=\"message-status\">ההודעה בשליחה</p>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Morse;\n","import React, { Component } from 'react';\nimport { NavBar } from '../NavBar.js';\n// import { MorseCode } from '../../encode_message/MorseCode.jsx';\nimport { Morse } from './Morse.js';\nimport \"./SendPage.css\";\n\nexport class SendPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            header: '',\n            color: 'null',\n            icon: 'ghost'\n        }\n    }\n\n    componentWillMount() {\n        console.log(\"props\", this.props);\n        let key = '';\n        if (this.props.match.params.id) {\n            key = \"SendMessage\";\n        } else {\n            return;\n        }\n\n        let messageST = localStorage.getItem(key);\n        if (messageST) {\n            let messageOB = JSON.parse(messageST);\n            this.setState({\n                header: messageOB.header,\n                color: messageOB.color,\n                icon: messageOB.icon || this.state.icon,\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <NavBar pageName=\"SendPage\" history={this.props.history} />\n\n                <div className=\"message-info-container\">\n                    <i\n                        style={{ color: this.state.color }}\n                        className={\"fas fa-\" + this.state.icon + \" fa-3x\"}\n                        id=\"message-icon\"\n                    />\n                    <h4 className=\"mb-3\" id=\"send-message-text\">{this.state.header} </h4>\n                </div>\n            \n                <Morse header={this.state.header} history={this.props.history}/>\n            </div>\n        );\n    }\n}\n\nexport default SendPage;","import React, { Component } from 'react';\nimport { IconPage } from \"./scenes/icon_page/IconPage\";\nimport { Route, Switch } from 'react-router-dom'\nimport { HomePage } from './scenes/home_page/HomePage.js';\nimport { MessagePage } from './scenes/message_page/MessagePage.js';\nimport { SendPage } from \"./scenes/send_page/SendPage.js\";\nimport { HashRouter } from 'react-router-dom';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/NewMessage\" component={MessagePage} />\n            <Route exact path=\"/NewMessage/IconPage\" component={IconPage} />\n            <Route exact path=\"/EditMessage/:id\" component={MessagePage} />\n            <Route exact path=\"/EditMessage/IconPage/:id\" component={IconPage} />\n            <Route exact path=\"/SendPage/:id\" component={SendPage} />\n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nfunction startApp() {\n  ReactDOM.render(<App />, document.getElementById('root'));\n}\n\n\nif (window.cordova) {\n  document.addEventListener('deviceready', function(){\n    startApp();\n  }, false);\n  \n} else {\n  startApp();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n\n"],"sourceRoot":""}