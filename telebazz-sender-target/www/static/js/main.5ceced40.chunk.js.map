{"version":3,"sources":["scenes/new_message/NavBar.js","scenes/icon_page/IconPage.js","encode_message/morse_code_dict.js","scenes/home_page/MsgCtrlButtons.js","encode_message/MorseCode.jsx","scenes/home_page/Message.js","scenes/home_page/HomePage.js","scenes/new_message/Icons.js","scenes/new_message/Colors.js","scenes/new_message/FavoriteButton.js","scenes/new_message/NewMessage.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","click","bind","assertThisInitialized","inherits","createClass","key","value","history","location","pathname","includes","goBack","replace","undefined","react_default","a","createElement","className","data-sidebarClass","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","class","Component","icons","בעלי חיים","סכנות","דת","רפואה","אוכל","אנשים","מקומות","חפצים","IconPage","state","categoryFilter","chosenIcon","filterCategory","setIcon","savenewicon","event","checked","target","categoryID","id","setState","toConsumableArray","concat","currentIndex","findIndex","element","updatedCategoryFilter","splice","currmessST","localStorage","getItem","currmessOB","JSON","parse","icon","setItem","stringify","console","log","_this2","NavBar_NavBar","role","aria-haspopup","aria-labelledby","keys","map","category","IconPage_Filter","isCategryChecked","IconPage_Icons","Link","to","match","params","Filter","onChange","Icons","_this3","length","IconPage_Icon","iconimage","checkCategoryFilter","Icon","char_to_morse","!","\"","$","&","'","(",")","+",",","-",".","/","0","1","2","3","4","5","6","7","8","9",":",";","=","?","@","_","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","MsgCtrlButtons","apply","arguments","itemID","editmessage","isFav","e","deletemessage","changelocation","Message","style","color","header","MsgCtrlButtons_MsgCtrlButtons","description","HomePage","messages","messageST","messagesOB","obj","preventDefault","updatemessages","msg","push","editmsg","currmsg","assign","Itemid","favmessages","regmessages","forEach","message","Message_Message","textAlign","iconame","currimage","Icons_Icon","updateimg","deafultcolors","colorclass","colorvalue","Colors","currcolor","Colors_Color","onclicker","updatecolor","Color","FavoriteButton","favbutt","for","NewMessage","favatfirst","specialicon","Date","now","addtofavorite","updatechosencolor","updatetext","updateheader","checkcondutions","savedata","editmessageST","editmessageOB","newcolor","alert","iconimg","messagesArr","tempmessage","aria-describedby","placeholder","rgba","Colors_Colors","FavoriteButton_FavoriteButton","Icons_Icons","App","Switch","Route","exact","path","component","Boolean","window","hostname","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ceced40.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.click = this.click.bind(this);\n  }\n\n  click() {\n    if (this.props.history.location.pathname.includes(\"IconPage\")) {\n      this.props.history.goBack();\n    } else if (this.props.history.location.pathname.includes(\"NewMessage\") || this.props.history.location.pathname.includes(\"EditMessage\")) {\n      this.props.history.replace(\"/\");\n    } else {\n      this.props.history.goBack();\n    }\n  }\n\n  render() {\n    if (this.props.history === undefined) {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\" data-sidebarClass=\"navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"#\">Telebuzz</a>\n          </nav>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sidebarNavigation\" data-sidebarClass=\"navbar-dark bg-dark\">\n            <div className=\"navbar-brand\" href=\"#\">Telebuzz</div>\n            <button\n              className=\"navbar-toggler leftNavbarToggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarsExampleDefault\"\n              aria-controls=\"navbarsExampleDefault\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\">\n              <span>\n                <div\n                  onClick={this.click}\n                  className=\"text-light\">\n                  <i class=\"fas fa-arrow-left\" />\n                </div>\n              </span>\n            </button>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport './IconPage.css';\nimport { Link } from 'react-router-dom';\nimport { NavBar } from '../new_message/NavBar.js'\n\nlet icons = {\n  \"בעלי חיים\": [\"cat\", \"dog\", \"horse\"],\n  \"סכנות\": [\"fire\", \"bolt\", \"ghost\"],\n  \"דת\": [\"cross\", \"menorah\", \"pray\", \"bible\"],\n  \"רפואה\": [\"pills\", \"cannabis\", \"capsules\"],\n  \"אוכל\": [\"lemon\", \"drumstick-bite\", \"cookie\"],\n  \"אנשים\": [\"user-injured\", \"user-tie\", \"blind\"],\n  \"מקומות\": [\"university\", \"church\", \"hospital\", \"home\"],\n  \"חפצים\": [\"toilet-paper\", \"bed\", \"basketball-ball\", \"microscope\"]\n}\n\nexport class IconPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryFilter: [],\n      chosenIcon: \"\"\n    }\n\n    this.filterCategory = this.filterCategory.bind(this);\n    this.setIcon = this.setIcon.bind(this);\n    this.savenewicon = this.savenewicon.bind(this);\n  }\n\n  filterCategory(event) {\n    let checked = event.target.checked;\n    let categoryID = event.target.id;\n\n    if (checked === true && this.state.categoryFilter.includes(categoryID) === false) {\n      this.setState({\n        categoryFilter: [...this.state.categoryFilter, categoryID]\n      })\n    } else {\n      let currentIndex = this.state.categoryFilter.findIndex(function (element) {\n        return element === categoryID;\n      });\n\n      if (currentIndex < 0) {\n        return;\n      } else {\n        let updatedCategoryFilter = this.state.categoryFilter;\n        updatedCategoryFilter.splice(currentIndex, 1);\n        this.setState({ categoryFilter: updatedCategoryFilter });\n      }\n    }\n  }\n\n  savenewicon() {\n    const key = \"Editmessage\"; //Editmessages\n    let currmessST = localStorage.getItem(key);\n    let currmessOB = JSON.parse(currmessST);\n\n    if (currmessOB == \"\")\n      currmessOB = {};\n    if (this.state.chosenIcon != \"\") {\n      currmessOB.icon = this.state.chosenIcon;\n    }\n\n    localStorage.setItem(key, JSON.stringify(currmessOB));\n    this.setIcon(\"\");\n    console.log(\"icon page\" + localStorage.getItem(\"Editmessage\")); //Editmessages\n  }\n\n  setIcon(chosenIcon) {\n    this.setState({ chosenIcon },\n      console.log(\"after setState: \", this.state.chosenIcon)\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar history={this.props.history} />\n        <div className=\"container\">\n          <h3>איזה אייקון תרצו להציג?</h3>\n          <div class=\"dropdown show text-center\">\n            <a\n              class=\"btn btn-secondary dropdown-toggle \"\n              href=\"#\"\n              role=\"button\"\n              id=\"dropdownMenuLink\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\">\n              סנן\n            </a>\n            <div class=\"dropdown-menu dropdown-menu-center \" aria-labelledby=\"dropdownMenuLink\">\n              {Object.keys(icons).map((category) =>\n                <Filter\n                  isCategryChecked={this.state.isCategryChecked}\n                  filterCategory={this.filterCategory}\n                  category={category}\n                />\n              )}\n            </div>\n          </div>\n          <br />\n          <div className=\"scrollIcons\">\n            <div class=\"row\">\n              <div class=\"col-sm\">\n                <Icons\n                  categoryFilter={this.state.categoryFilter}\n                  setIcon={this.setIcon}\n                  savenewicon={this.savenewicon}\n                />\n              </div>\n            </div>\n          </div>\n          <br />\n          <Link to={`/EditMessage/${this.props.match.params.id}`}>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-lg btn-block\"\n              onClick={this.savenewicon}>\n              המשך\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Filter extends Component {\n  render() {\n    return (\n      <button class=\"dropdown-item\" type=\"button\" >\n        <input\n          class=\"checkboxer\"\n          onChange={this.props.filterCategory}\n          id={this.props.category}\n          type=\"checkbox\"\n        />\n        <label>\n          {this.props.category}\n        </label>\n      </button>\n    );\n  }\n}\n\nclass Icons extends Component {\n  checkCategoryFilter() {\n    if (this.props.categoryFilter.length === 0) {\n      return (\n        Object.keys(icons).map(\n          (category) => icons[category].map(\n            (icon) =>\n              <Icon\n                iconimage={icon}\n                category={category}\n                setIcon={() => this.props.setIcon(icon)}\n                savenewicon={() => this.props.savenewicon()}\n              />\n          )\n        )\n      );\n    } else {\n      return (\n        this.props.categoryFilter.map(\n          (category) => icons[category].map(\n            (icon) =>\n              <Icon\n                iconimage={icon}\n                category={category}\n                setIcon={() => this.props.setIcon(category.iconimage)}\n                savenewicon={() => this.props.savenewicon()}\n              />\n          )\n        )\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.checkCategoryFilter()}\n      </div>\n    );\n  }\n}\n\nclass Icon extends Component {\n  render() {\n    return (\n      <button\n        onClick={this.props.setIcon}\n        id={this.props.category}\n        type=\"button\"\n        class=\"btn btn-default iconButton\" >\n\n        <i class={\"fas fa-\" + this.props.iconimage + \" fa-3x\"}></i>\n      </button>\n    );\n  }\n}","export const char_to_morse = {\n'!':\"-.-.--\",\n'\"':\".-..-.\",\n'$':\"...-..-\",\n'&':\".-...\",\n\"'\":\".----.\",\n'(':\"-.--.\",\n')':\"-.--.-\",\n'+':\".-.-.\",\n',':\"--..--\",\n'-':\"-....-\",\n'.':\".-.-.-\",\n'/':\"-..-.\",\n'0':\"-----\",\n'1':\".----\",\n'2':\"..---\",\n'3':\"...--\",\n'4':\"....-\",\n'5':\".....\",\n'6':\"-....\",\n'7':\"--...\",\n'8':\"---..\",\n'9':\"----.\",\n':':\"---...\",\n';':\"-.-.-.\",\n'=':\"-...-\",\n'?':\"..--..\",\n'@':\".--.-.\",\n'_':\"..--.-\",\n'A':\".-\",\n'B':\"-...\",\n'C':\"-.-.\",\n'D':\"-..\",\n'E':\".\",\n'F':\"..-.\",\n'G':\"--.\",\n'H':\"....\",\n'I':\"..\",\n'J':\".---\",\n'K':\"-.-\",\n'L':\".-..\",\n'M':\"--\",\n'N':\"-.\",\n'O':\"---\",\n'P':\".--.\",\n'Q':\"--.-\",\n'R':\".-.\",\n'S':\"...\",\n'T':\"-\",\n'U':\"..-\",\n'V':\"...-\",\n'W':\".--\",\n'X':\"-..-\",\n'Y':\"-.--\",\n'Z':\"--..\",\n' ':\" \",\n}\n\nexport default char_to_morse;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class MsgCtrlButtons extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"dropdown\">\n                    <button\n                        className=\"btn btn-secondary dropdown-toggle\"\n                        type=\"button\"\n                        id=\"dropdownMenuButton\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                    />\n\n                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                        <Link to={`/EditMessage/${this.props.itemID}`}>\n                            <button onClick={() => this.props.editmessage(this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >ערוך/י</button>\n                        </Link>\n\n                        <button onClick={(e) => this.props.deletemessage(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >מחק/י</button>\n                        {this.props.isFav ?\n                            <button onClick={(e) => this.props.changelocation(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >הסר/י ממועדפים</button>\n                            :\n                            <button onClick={(e) => this.props.changelocation(e, this.props.itemID, this.props.isFav)} className=\"dropdown-item btn btn-primary\" >הוסף/י למועדפים</button>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport char_to_morse from \"./morse_code_dict.js\";\n// import { Tone } from \"./Tone.min.js\";\n\nexport class MorseCode extends Component {\n  // The Morse Code tone to use, xHz sine wave\n  // static osc = new Tone.Oscillator(8000, \"sine\").toMaster();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      _textMessageInput: \"the users input\", //need to change!!\n      _codeMessageArray: [],\n      _codeIsRunning: false, // Track whether morse code is running\n      _initialDelay: 0.1, // Initial delay before starting morse code sequence\n\n      //tone times\n      _dotTime: 0.070,\n      _spaceTime: 0.49, //_dotTime*7 \n      _dashTime: 0.21,\n      _interElemTime: 0.090,\n    };\n  }\n\n  textMessageToMorse = () => {\n    let message = this.state._textMessageInput;\n    let messageUpper = message.toUpperCase();\n    let codeMessageArray = this.state._codeMessageArray;\n    console.log(\"messageUpper: \", messageUpper);\n\n    for (let i = 0; i < messageUpper.length; i++) {\n      codeMessageArray.push(char_to_morse[messageUpper[i]]);\n    }\n\n    console.log(\"codeMessageArray: \", codeMessageArray);\n    this.setState({ _codeMessageArray: codeMessageArray });\n  }\n\n  tone_updateProgress = (time, pos, totalLength) => {\n    var ratio = 100 * pos / totalLength; //position the text\n\n    //TODO - change this line\n    // document.querySelector('#p1').MaterialProgress.setProgress(ratio);\n  }\n\n  //TODO\n  addMorseText = (morseText) => {\n    console.log(\"addMorseText: \", morseText);\n  }\n\n  tone_word_space = () => {\n    this.addMorseText('<br />');\n  }\n\n  tone_dot = (time, char) => {\n    // this.osc.start(time);\n    console.log(\"time dot\", time);\n    // osc.stop(time+dot_time);\n    this.addMorseText('• ', char);\n  }\n\n  tone_dash = (time, char) => {\n    // osc.start(time);\n    console.log(\"time dash\", time);\n    // osc.stop(time + dash_time);\n    this.addMorseText('▬ ', char);\n  }\n\n  tone_letter_space = (time) => {\n    this.addMorseText(' ');\n  }\n\n  tone_fin = (time) => {\n    this.setState({ _codeIsRunning: false });\n  }\n\n  generateSequence = () => {\n    let codeMessageArray = this.state._codeMessageArray;\n    let seq = [];\n    let initialDelay = this.state._initialDelay; // Our current time in the morse code sequence\n    let pos = 0;\n\n    for (let i = 0; i < codeMessageArray.length; i++) {\n      let codeChar = codeMessageArray[i]; // morse code codeChar dash and dots\n\n      // If the codeChar is just a space, handle differently\n      if (codeChar === ' ') {\n        // Push codeChar space\n        seq.push({ \"time\": initialDelay, \"func\": this.tone_word_space });\n        this.tone_word_space();\n        initialDelay += this.state._space_time;\n      } else {\n        // We have a morse code codeChar\n        if (typeof codeChar == 'undefined') {\n          console.log(\"Skip\", codeMessageArray[i]);\n          continue;\n        }\n        for (let j = 0; j < codeChar.length; j++) {\n          let char = codeChar[j]; // morse code character\n          if (char === '.') {\n            // Push a tone_dot\n            seq.push({ \"time\": initialDelay, \"func\": this.tone_dot });\n            this.tone_dot();\n            initialDelay += this.state._dotTime;\n          } else if (char === '-') {\n            // Push tone_dash\n            seq.push({ \"time\": initialDelay, \"func\": this.tone_dash });\n            this.tone_dash();\n            initialDelay += this.state._dashTime;\n          } else {\n            console.log('Unexpected character in morse code message:', char);\n          }\n          // Add inter element pause between characters\n          initialDelay += this.state._interElemTime;\n          pos += 1;\n          // Add update to progress bar\n          seq.push({\n            \"time\": initialDelay,\n            \"func\": this.tone_updateProgress,\n            \"msg_char\": pos\n          });\n          this.tone_updateProgress();\n          console.log(\"seq: \", seq);\n        }\n        // Add inter-letter space\n        if (i < codeMessageArray.length - 1 && codeMessageArray[i + 1] !== ' ') {\n          seq.push({ \"time\": initialDelay, \"func\": this.tone_letter_space });\n          this.tone_letter_space();\n          initialDelay += this.state.space_time;\n        }\n      }\n    }\n    seq.push({ \"time\": initialDelay, \"func\": this.tone_fin });\n    // this.tone_fin();\n\n    /*var part = new Tone.Part(function (time, obj) {\n      if (typeof obj.msg_char != 'undefined') {\n        obj.func(time, obj.msg_char);\n        // console.log(time.toFixed(3), obj.func.name, obj.msg_char);\n      } else {\n        obj.func(time);\n        // console.log(time.toFixed(3), obj.func.name);\n      }\n    }, seq).start();\n\n    // Start sequence\n    Tone.start();*/\n  }\n\n  playMorseSequence = () => {\n    console.log(\"playMorseSequence\");\n    if (!this.state._codeIsRunning) {\n      //TODO - stopMorse()\n\n      this.setState({ _codeIsRunning: true });\n      this.textMessageToMorse();\n\n      let codeMessageArray = this.state._codeMessageArray;\n      let totalLength = codeMessageArray.join('').length - 1;\n\n      this.tone_updateProgress(totalLength);\n      this.generateSequence();\n    } else {\n      console.log(\"morse code is running: \", this.state._codeIsRunning);\n    }\n  }\n\n  clearCodeText = () => {\n    this.setState({ _codeIsRunning: false, _codeMessageArray: [] });\n  }\n\n  render() {\n    if (!this.state._codeIsRunning) {\n      return (\n        <div>\n          <button onClick={this.playMorseSequence}>play morse sequence</button>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <button onClick={this.clearCodeText}>clear morse</button>\n          <p id=\"msg\">{this.state._textMessageInput}</p>\n          <div id=\"morse\">{this.state._codeMessageArray}</div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default MorseCode;\n\n\n","import React, { Component } from 'react';\nimport { MsgCtrlButtons } from \"./MsgCtrlButtons\";\n\nexport class Message extends Component {\n    render() {\n        return (\n            <div className=\"list-group\">\n                <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                    <div className=\"d-flex w-100 justify-content-between\">\n                        <i style={{ color: this.props.color }} className={\"fas fa-\" + this.props.icon + \" fa-3x\"} />\n                        <h4 className=\"mb-3 \">{this.props.header} </h4>\n                        <MsgCtrlButtons\n                            itemID={this.props.itemID}\n                            deletemessage={this.props.deletemessage}\n                            editmessage={this.props.editmessage}\n                            isFav={this.props.isFav}\n                            changelocation={this.props.changelocation}\n                        />\n                    </div>\n                    <p className=\"mb-1\"> {this.props.description} </p>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { MorseCode, char_to_morse } from '../../encode_message/MorseCode.jsx';\nimport { Link } from 'react-router-dom';\n//import data from '../data.json';\n// import { Nav } from \"./Nav\";\nimport {Message} from \"./Message\";\nimport { NavBar } from '../new_message/NavBar.js';\n\n\nexport class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: ''\n    }\n\n    this.deletemessage = this.deletemessage.bind(this);\n    this.editmessage = this.editmessage.bind(this);\n    this.changelocation = this.changelocation.bind(this);\n  }\n\n  componentDidMount() {\n    let key = \"messages\";\n    let messageST = localStorage.getItem(key);\n\n    if (messageST) {\n      let messagesOB = JSON.parse(messageST);\n      const messages = Object.keys(messagesOB).map(obj => messagesOB[obj]);\n      this.setState({ messages });\n    }\n\n    localStorage.setItem(\"Editmessage\", JSON.stringify(\"\"));\n  }\n\n  deletemessage(event, itemID, isFav) {\n    event.preventDefault();\n    let key = \"messages\";\n    let messages = this.state.messages;\n    let updatemessages = [];\n\n    messages.map(msg => {\n      if (msg.itemID !== itemID) {\n        updatemessages.push(msg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(updatemessages));\n    this.setState({ messages: updatemessages });\n  }\n\n  editmessage(itemID, isFav) {\n    let key = \"Editmessage\";\n    let editmsg = {};\n\n    this.state.messages.map(currmsg => {\n      if (currmsg.itemID === itemID) {\n        editmsg = Object.assign({}, currmsg);\n      }\n    });\n\n    localStorage.setItem(key, JSON.stringify(editmsg));\n  }\n\n  changelocation(event, Itemid, isFav) {\n    event.preventDefault();\n    let key = \"messages\";\n    let messages = this.state.messages;\n    let updatemessages = [];\n\n    messages.map(msg => {\n      updatemessages.push(msg);\n      if (msg.itemID === Itemid) {\n        updatemessages[updatemessages.length - 1].isFav = !isFav;\n\n      }\n      //tempmessage=Object.assign({},currMg);\n    });\n\n    localStorage.setItem(key, JSON.stringify(updatemessages));\n    this.setState({ messages: updatemessages });\n  }\n\n  render() {\n    let favmessages = [];\n    let regmessages = [];\n    let msgkeys = Object.keys(this.state.messages)\n\n    msgkeys.forEach(key => {\n      let message = this.state.messages[key];\n      if (message.isFav) {\n        favmessages.push(\n          <Message\n            key={key}\n            isFav={message.isFav}\n            itemID={message.itemID}\n            header={message.header}\n            description={message.description}\n            icon={message.icon}\n            color={message.color}\n            deletemessage={this.deletemessage}\n            editmessage={this.editmessage}\n            changelocation={this.changelocation}\n          />);\n      } else {\n        regmessages.push(\n          <Message\n            key={key}\n            isFav={message.isFav}\n            itemID={message.itemID}\n            header={message.header}\n            description={message.description}\n            icon={message.icon}\n            color={message.color}\n            deletemessage={this.deletemessage}\n            editmessage={this.editmessage}\n            changelocation={this.changelocation}\n          />);\n      }\n    });\n\n    return (\n      <div style={{ textAlign: \"right\" }}>\n        {/* <Nav /> */}\n        <NavBar />\n        <p> מועדפים </p>\n        <div style={{ textAlign: \"center\" }}>\n          {favmessages}\n        </div>\n\n        <br />\n\n        <p> עוד הודעות </p>\n        <div style={{ textAlign: \"center\" }} >\n          {regmessages}\n        </div>\n\n        <div className=\"container\">\n          <Link to=\"/NewMessage\">\n            <button type=\"button\" className=\"btn btn-secondary btn-lg fixed-bottom btn-block\">הוסף הודעה</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\n\nlet iconame = [\n  \"microscope\",\n  \"anchor\",\n  \"basketball-ball\",\n  \"hourglass\",\n  \"bolt\",\n  \"award\",\n  \"bed\",\n  \"cannabis\",\n  \"fire\",\n  \"home\",\n  \"drumstick-bite\",\n  \"ghost\",\n  \"toilet-paper\"\n];\n\nexport class Icons extends Component {\n  render() {\n    return (\n      <div>\n        {iconame.map((currimage) =>\n          <Icon\n            iconimage={currimage}\n            onClick={() => this.props.updateimg(currimage)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Icon extends Component {\n  render() {\n    return (\n      <button\n        type=\"button\"\n        class=\"btn btn-default \"\n        onClick={this.props.onClick}>\n        <i class={\"fas fa-\" + this.props.iconimage} />\n      </button>\n    );\n  }\n}","import React, { Component } from 'react';\n\nlet deafultcolors = [\n  {\n    colorclass: \"dark\",\n    colorvalue: \"#343a40\"\n  },\n  {\n    colorclass: \"primary\",\n    colorvalue: \"#007bff\"\n\n  },\n  {\n    colorclass: \"success\",\n    colorvalue: \"#28a745\"\n  },\n  {\n\n    colorclass: \"info\",\n    colorvalue: \"#17a2b8\"\n  },\n  {\n    colorclass: \"warning\",\n    colorvalue: \"#ffc107\"\n  },\n  {\n    colorclass: \"danger\",\n    colorvalue: \"#dc3545\"\n  }\n];\n\nexport class Colors extends Component {\n  render() {\n    return (\n      <div>\n        {deafultcolors.map((currcolor) =>\n          <Color\n            colorclass={currcolor.colorclass}\n            colorvalue={currcolor.colorvalue}\n            onclicker={() => this.props.updatecolor(currcolor.colorvalue)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nclass Color extends Component {\n  render() {\n    return (\n      <button\n        type=\"button\"\n        onClick={this.props.onclicker}\n        className={\"btn btn-circle btn-\" + this.props.colorclass}\n      />\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport class FavoriteButton extends Component {\n\n  render() {\n    return (\n      <div class=\"custom-control custom-checkbox\">\n        <input\n          type=\"checkbox\"\n          class=\"custom-control-input\"\n          id=\"defaultUnchecked\"\n          checked={this.props.favbutt}\n          onChange={this.props.onChange}\n        />\n        <label\n          class=\"custom-control-label pull-right\"\n          for=\"defaultUnchecked\">\n          הוספה למועדפים:\n        </label>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './NewMessage.css';\n// import {Link} from 'react-router-dom';\nimport { HashRouter as Router, Link } from 'react-router-dom';\nimport { NavBar } from \"./NavBar\";\nimport { Icons } from \"./Icons\";\nimport { Colors } from \"./Colors\";\nimport { FavoriteButton } from \"./FavoriteButton\";\n\n\nexport class NewMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      header: '',\n      color: 'null',\n      isFav: false,\n      description: '',\n      icon: 'anchor',\n      favatfirst: false,\n      specialicon: false,\n      itemID: Date.now()\n    }\n\n    this.addtofavorite = this.addtofavorite.bind(this);\n    this.updatechosencolor = this.updatechosencolor.bind(this);\n    this.updatecolor = this.updatecolor.bind(this);\n    this.updatetext = this.updatetext.bind(this);\n    this.updateheader = this.updateheader.bind(this);\n    this.updateimg = this.updateimg.bind(this);\n    this.checkcondutions = this.checkcondutions.bind(this);\n    this.savedata = this.savedata.bind(this);\n  }\n\n\n  componentWillMount() {\n    if (this.props.match.params.id) {\n      let key = \"Editmessage\";\n      let editmessageST = localStorage.getItem(key);\n      if (editmessageST) {\n        let editmessageOB = JSON.parse(editmessageST);\n        this.setState({ description: editmessageOB.description });\n        this.setState({ header: editmessageOB.header });\n        this.setState({ color: editmessageOB.color });\n        this.setState({ isFav: editmessageOB.isFav });\n        this.setState({ icon: editmessageOB.icon });\n        this.setState({ favatfirst: editmessageOB.isFav });\n        this.setState({ itemID: this.props.match.params.id });\n        this.setState({ specialicon: editmessageOB.specialicon });\n      }\n    }\n  }\n\n  updatechosencolor(event) {\n    this.setState({ color: event.target.value });\n  }\n\n  addtofavorite() {\n    this.setState({ isFav: !this.state.isFav });\n  }\n\n  updatecolor(newcolor) {\n    this.setState({ color: newcolor });\n  }\n\n  updateheader(event) {\n    this.setState({ header: event.target.value });\n  }\n\n  updatetext(event) {\n    this.setState({ description: event.target.value });\n  }\n\n  checkcondutions() {\n    if (this.state.description.length > 10) {\n      alert(\"too many characters!\");\n    }\n  }\n\n  updateimg(iconimg) {\n    this.setState({ icon: iconimg });\n  }\n\n  savedata() {\n    let key = \"messages\";\n    let msg = {\n      header: this.state.header,\n      description: this.state.description,\n      isFav: this.state.isFav,\n      itemID: this.state.itemID,\n      icon: this.state.icon,\n      color: this.state.color\n    }\n    let messagesArr = [];\n    let tempmessage = [];\n    let messageST = localStorage.getItem(key);\n\n    if (messageST) {\n      let messagesOB = JSON.parse(messageST);\n      messagesArr = Object.keys(messagesOB).map(obj => messagesOB[obj]);\n    }\n\n    if (this.props.match.params.id) {\n      messagesArr.map(currmsg => {\n        if (currmsg.itemID == this.props.match.params.id) {\n          tempmessage.push(msg);\n        } else {\n          tempmessage.push(currmsg);\n        }\n      });\n      localStorage.setItem(key, JSON.stringify(tempmessage));\n    } else {\n      messagesArr.push(msg);\n      localStorage.setItem(key, JSON.stringify(messagesArr));\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar history={this.props.history} />\n\n        <div className=\"container\">\n\n          <div className=\"form-signin\">\n            <label for=\"exampleInputEmail1 text-right\">כותרת ההודעה:</label>\n            <input\n              type=\"text\"\n              onChange={this.updateheader}\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"הכנס/י כותרת להודעה\"\n              value={this.state.header}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">על הכותרת להיות קצרה ותמציתית.</small>\n          </div>\n          <br />\n\n          <div>\n            <label for=\"exampleInputPassword1\">תוכן ההודעה:</label>\n            <input\n              type=\"text\"\n              onChange={this.updatetext}\n              className=\"form-control\"\n              id=\"exampleInputPassword1\"\n              placeholder=\"תוכן ההודעה\"\n              value={this.state.description}\n            />\n          </div>\n\n          <br />\n          <br />\n\n          <div class=\"row\">\n            <div class=\"col-11 text-center\">\n              <i style={{ color: this.state.color }} class={\"fas fa-\" + this.state.icon + \" fa-5x pull-left\"} /> <br />\n              <br />\n              <Link to={`/NewMessage/IconPage/${this.state.itemID}`}>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-info \">\n                  <i class=\"fas fa-pencil-alt\"></i>\n                  שנה/י אייקון\n                </button>\n              </Link>\n            </div>\n          </div>\n\n          {/* the color picker */}\n          <input\n            type=\"color\"\n            rgba\n            value={this.state.color}\n            onChange={this.updatechosencolor}\n          />\n\n          <div className=\"form-group\">\n            <br />\n            <Colors updatecolor={this.updatecolor} />\n            <small id=\"emailHelp\" className=\"form-text text-muted text-center \">ביכולתך לבחור בצבע מוכן מראש או לחילופין לבחור צבע מותאם אישית.</small>\n          </div>\n\n          <FavoriteButton favbutt={this.state.isFav} onChange={this.addtofavorite} />\n\n        </div>\n\n\n        <div id=\"pictures\">\n          <div id=\"deafultimg\">\n            <Icons updateimg={this.updateimg} />\n          </div>\n        </div>\n\n        <Link to=\"/\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-secondary btn-lg btn-block\"\n            onClick={this.savedata}>\n            הוסף\n          </button>\n        </Link>\n\n      </div>\n    );\n  }\n}\n\nexport default NewMessage;\n","import React, { Component } from 'react';\n// import Tone from './ToneReact';\nimport { IconPage } from \"./scenes/icon_page/IconPage\";\nimport { Route, HashRouter, Switch } from 'react-router-dom'\nimport { HomePage } from './scenes/home_page/HomePage.js';\nimport { NewMessage } from './scenes/new_message/NewMessage.js';\n\nimport './App.css';\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <HashRouter> */}\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/NewMessage\" component={NewMessage} />\n            <Route exact path=\"/NewMessage/IconPage/:id\" component={IconPage} />\n            <Route exact path=\"/EditMessage/:id\" component={NewMessage} />\n            <Route exact path=\"/EditMessage/IconPage/:id\" component={IconPage} />\n          </Switch>\n        {/* </HashRouter> */}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\n\nReactDOM.render((\n    <HashRouter>\n      <App />\n    </HashRouter>\n  \n    \n  ), document.getElementById('root'));\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n serviceWorker.unregister();\n\n\n\n\n\n"],"sourceRoot":""}